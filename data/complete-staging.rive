/*

  FUZZYBOT CORE RIVE SCRIPT
  -----------------------------------------------------------------------------
  !! Some functions will not work because the scoped dependency is not loaded

  Compiled: 1467147957197 - Env: staging - XOXO @gleuch

*/

! version = 2.0
! local concat = newline

! global node_env = unknown

! var bot_name = Poncho
! var website = https://poncho.is
! var app_url = http://beta.works/poncho

! sub sunday = sun day
! sub monday = mon day
! sub tuesday = tues day
! sub wednesday = wednes day
! sub thursday = thurs day
! sub friday = fri day
! sub saturday = sat day
! sub yoo = yo
! sub yyoo = yo
! sub yyo = yo
! sub ssup = sup
! sub supp = sup
! sub ssuup = sup
! sub ssupp = sup
! sub suupp = sup
! sub ssuupp = sup
! sub helloo = hello
! sub hii = hi
! sub whatsup = what is up
! sub whatsupp = what is up
! sub upp = up
! sub uup = up
! sub uupp = up
! sub byee = bye
! sub byye = bye
! sub byyee = bye
! sub bbrr = brr
! sub fuuck = fuck
! sub haa = ha
! sub rn = right now
! sub kk = ok
! sub tonite = tonight
! sub tongith = tonight
! sub tmrw = tomorrow
! sub gotta = got to
! sub gonna = going to
! sub hiar = hair
! sub pollan = pollen
! sub pollon = pollen
! sub polen = pollen
! sub â€™ = '
! sub &quot; = "
! sub &apos; = '
! sub &amp; = &
! sub &lt; = <
! sub &gt; = >
! sub + = plus
! sub - = minus
! sub / = divided
! sub * = times
! sub i'm = i am
! sub i'd = i would
! sub i've = i have
! sub i'll = i will
! sub don't = do not
! sub dont = do not
! sub isn't = is not
! sub you'd = you would
! sub you're = you are
! sub you've = you have
! sub you'll = you will
! sub he'd = he would
! sub he's = he is
! sub he'll = he will
! sub she'd = she would
! sub she's = she is
! sub she'll = she will
! sub they'd = they would
! sub they're = they are
! sub they've = they have
! sub they'll = they will
! sub we'd = we would
! sub we're = we are
! sub we've = we have
! sub we'll = we will
! sub whats = what is
! sub what's = what is
! sub what're = what are
! sub what've = what have
! sub what'll = what will
! sub can't = cannot
! sub cant = cannot
! sub whos = who is
! sub who's = who is
! sub who'd = who would
! sub who'll = who will
! sub didn't = did not
! sub it's = it is
! sub could've = could have
! sub couldn't = could not
! sub should've = should have
! sub shouldn't = should not
! sub would've = would have
! sub wouldn't = would not
! sub when's = when is
! sub when're = when are
! sub when'd = when did
! sub let's = let us
! sub r u = are you
! sub ru = are you
! sub y = why
! sub u = you
! sub ur = your
! sub r = are
! sub n = and
! sub im = i am
! sub wat = what
! sub wats = what is
! sub ohh = oh
! sub becuse = because
! sub becasue = because
! sub becuase = because
! sub practise = practice
! sub its a = it is a
! sub fav = favorite
! sub fave = favorite
! sub yesi = yes i
! sub yetit = yet it
! sub iam = i am
! sub welli = well i
! sub wellit = well it
! sub amfine = am fine
! sub aman = am an
! sub amon = am on
! sub amnot = am not
! sub realy = really
! sub iamusing = i am using
! sub amleaving = am leaving
! sub yuo = you
! sub youre = you are
! sub didnt = did not
! sub ain't = is not
! sub aint = is not
! sub wanna = want to
! sub brb = be right back
! sub bbl = be back later
! sub gtg = got to go
! sub g2g = got to go
! sub lyl = love you lots
! sub gf = girlfriend
! sub g/f = girlfriend
! sub bf = boyfriend
! sub b/f = boyfriend
! sub b/f/f = best friend forever
! sub :-) = smile
! sub :) = smile
! sub :d = grin
! sub :-d = grin
! sub :-p = tongue
! sub :p = tongue
! sub ;-) = wink
! sub ;) = wink
! sub :-( = sad
! sub :( = sad
! sub :'( = cry
! sub :-[ = blush
! sub :-\ = uncertain
! sub :-/ = uncertain
! sub :-s = uncertain
! sub 8-) = cool
! sub 8) = cool
! sub :-* = kissyface
! sub :-! = foot
! sub o:-) = angel
! sub >:o = angry
! sub :@ = angry
! sub 8o| = angry
! sub :$ = blush
! sub :-$ = blush
! sub :[ = bat
! sub (a) = angel
! sub (h) = cool
! sub 8-| = nerdy
! sub |-) = tired
! sub +o( = ill
! sub *-) = uncertain
! sub ^o) = raised eyebrow
! sub (6) = devil
! sub (l) = love
! sub (u) = broken heart
! sub (k) = kissyface
! sub (f) = rose
! sub (w) = wilted rose
! sub nvm = nevermind
! sub nyc = new york city
! sub ny = new york city
! sub sf = san francisco
! sub la = los angeles
! sub atl = atlanta
! sub chi = chicago
! sub dc = washington d.c.
! sub dfw = dallas-fort worth
! sub mia = miami
! sub lon = london
! sub rio = rio de janiero
! sub la jolla = san diego california

! person i am = you are
! person you are = I am
! person i'm = you're
! person you're = I'm
! person my = your
! person your = my
! person you = I
! person i = you

! array allweatherterms = clear|sunny|rain|raining|light-rain|light rain|lightly raining|rainy|drizzle|drizzling|drizzly|wet|sleet|sleeting|snow|snowing|blizzard|blizzarding|flurry|flurrying|slush|slushy|wind|windy|hurricane|torndao|gusty|gusting|blow|blowing|fog|haze|foggy|hazy|cloud|cloudy|partly cloudy|mostly cloudy|overcast|cold|chill|chilly|freezing|freeze|frozen|icy|warm|mild|hot|nice|miserable|shit|shitty|gross|terrible
! array clearweatherterms = clear sunny
! array rainweatherterms = rain|raining|light-rain|light rain|lightly raining|rainy|wet|drizzle|drizzling|drizzly
! array sleetweatherterms = sleet sleeting
! array snowweatherterms = snow snowing blizzard blizzarding flurry flurrying slush slushy
! array windweatherterms = wind windy hurricane tornado gusty gusting blow blowing breezy breeze
! array fogweatherterms = fog haze foggy hazy
! array cloudweatherterms = cloud|cloudy|partly cloudy|mostly cloudy|overcast
! array coldweatherterms = cold chill chilly
! array warmweatherterms = warm mild
! array hotweatherterms = hot
! array freezingweatherterms = freeze freezing frozen icy
! array miserableweatherterms = miserable shit shitty gross bad yucky icky nasty terrible awful aweful
! array celsiusword = c cel celsius celsuis celcius centigrade fancy
! array fahrenheitword = f fahrenheit fahrenheight american farenheight farenheit farenheiht
! array metricword = metric british uk fancy m meter km kph kilometer kilometers cm centimeter centimeters g gm gram grams
! array imperialword = imperial us american ft foot feet mi mile miles in inch inches imperical
! array temperatureword = temp temperature temps
! array measureword = measure measurement distance speed units
! array updateword = set save make change update
! array emailaddressword = email address|email addy|email|e-mail address|e-mail|e mail address|e mail
! array phonenumberword = phone number|cell number|mobile number|phone|number|digits
! array notificationsword = notifications notification notices notice updates update notif notifs alert alerts
! array alertsword = alerts alert
! array notificationactionsword = change|deactivate|activate|snooze|turn on|turn off
! array blockword = block|stop|turn off|off|disable|unsub|unsubscribe
! array helpword = help|support|customer service|halp
! array todayterms = out outside now today today’s today's todays tday tdays
! array tomorrowterms = tomorrow|tmrw|tmrws|tomorrow's|tomorrow’s|tomorrow s|tomorrows|next day|to-morrow
! array latertonightterms = later today|later tonight|this evening|this afternoon|later in the evening|later in the afternoon|later|tonight|tonite|to-night
! array weekendterms = weekend|weeknd|wknd|this weekend|the weekend
! array laterortomorrowterms = later today|later tonight|this evening|this afternoon|later in the evening|later in the afternoon|later|tonight|tonite|to-night|tomorrow|tmrw|tmrws|tomorrow's|tomorrow’s|tomorrow s|tomorrows|next day|to-morrow
! array hereterms = here|now|there|right now|outside|out|irl|current|currently
! array dayabbvterms = mon tues tue wednes wed thurs thur thu fri sat sun
! array whatrequest = whats|what is|what are|where is|where are|how|show|give
! array hourlyforecast = hourly forecast|hourly|8-hour|8 hour|5-hour|5 hour|hrly forecast|hrly|hour forecast|hourly list|hour list|few hours|couple hours|hour by hour
! array forecast = forecast forcast forecat forcat
! array outlook = outlook|5 day|5-day|week forecast|weekly forecast|weekly outlook|week outlook
! array weatherword = weather temp temperature
! array showas = to as in
! array nearplace = for in at near
! array weatherphraseword = weather phrase|weather|forecast|outlook
! array pokemon = bulbasaur|ivysaur|venusaur|charmander|charmeleon|charizard|squirtle|wartortle|blastoise|caterpie|metapod|butterfree|weedle|kakuna|beedrill|pidgey|pidgeotto|pidgeot|rattata|raticate|spearow|fearow|ekans|arbok|pikachu|raichu|sandshrew|sandslash|nidorina|nidoqueen|nidoran|nidorino|nidoking|clefairy|clefable|vulpix|ninetales|jigglypuff|wigglytuff|zubat|golbat|oddish|gloom|vileplume|paras|parasect|venonat|venomoth|diglett|dugtrio|meowth|persian|psyduck|golduck|mankey|primeape|growlithe|arcanine|poliwag|poliwhirl|poliwrath|abra|kadabra|alakazam|machop|machoke|machamp|bellsprout|weepinbell|victreebel|tentacool|tentacruel|geodude|graveler|golem|ponyta|rapidash|slowpoke|slowbro|magnemite|magneton|farfetch'd|doduo|dodrio|seel|dewgong|grimer|muk|shellder|cloyster|gastly|haunter|gengar|onix|drowzee|hypno|krabby|kingler|voltorb|electrode|exeggcute|exeggutor|cubone|marowak|hitmonlee|hitmonchan|lickitung|koffing|weezing|rhyhorn|rhydon|chansey|tangela|kangaskhan|horsea|seadra|goldeen|seaking|staryu|starmie|mr mime|scyther|jynx|electabuzz|magmar|pinsir|tauros|magikarp|gyarados|lapras|ditto|eevee|vaporeon|jolteon|flareon|porygon|omanyte|omastar|kabuto|kabutops|aerodactyl|snorlax|articuno|zapdos|moltres|dratini|dragonair|dragonite|mewtwo|mew|chikorita|bayleef|meganium|cyndaquil|quilava|typhlosion|totodile|croconaw|feraligatr|sentret|furret|hoothoot|noctowl|ledyba|ledian|spinarak|ariados|crobat|chinchou|lanturn|pichu|cleffa|igglybuff|togepi|togetic|natu|xatu|mareep|flaaffy|ampharos|bellossom|marill|azumarill|sudowoodo|politoed|hoppip|skiploom|jumpluff|aipom|sunkern|sunflora|yanma|wooper|quagsire|espeon|umbreon|murkrow|slowking|misdreavus|unown|wobbuffet|girafarig|pineco|forretress|dunsparce|gligar|steelix|snubbull|granbull|qwilfish|scizor|shuckle|heracross|sneasel|teddiursa|ursaring|slugma|magcargo|swinub|piloswine|corsola|remoraid|octillery|delibird|mantine|skarmory|houndour|houndoom|kingdra|phanpy|donphan|porygon2|stantler|smeargle|tyrogue|hitmontop|smoochum|elekid|magby|miltank|blissey|raikou|entei|suicune|larvitar|pupitar|tyranitar|lugia|ho-oh|celebi|treecko|grovyle|sceptile|torchic|combusken|blaziken|mudkip|marshtomp|swampert|poochyena|mightyena|zigzagoon|linoone|wurmple|silcoon|beautifly|cascoon|dustox|lotad|lombre|ludicolo|seedot|nuzleaf|shiftry|taillow|swellow|wingull|pelipper|ralts|kirlia|gardevoir|surskit|masquerain|shroomish|breloom|slakoth|vigoroth|slaking|nincada|ninjask|shedinja|whismur|loudred|exploud|makuhita|hariyama|azurill|nosepass|skitty|delcatty|sableye|mawile|aron|lairon|aggron|meditite|medicham|electrike|manectric|plusle|minun|volbeat|illumise|roselia|gulpin|swalot|carvanha|sharpedo|wailmer|wailord|numel|camerupt|torkoal|spoink|grumpig|spinda|trapinch|vibrava|flygon|cacnea|cacturne|swablu|altaria|zangoose|seviper|lunatone|solrock|barboach|whiscash|corphish|crawdaunt|baltoy|claydol|lileep|cradily|anorith|armaldo|feebas|milotic|castform|kecleon|shuppet|banette|duskull|dusclops|tropius|chimecho|absol|wynaut|snorunt|glalie|spheal|sealeo|walrein|clamperl|huntail|gorebyss|relicanth|luvdisc|bagon|shelgon|salamence|beldum|metang|metagross|regirock|regice|registeel|latias|latios|kyogre|groudon|rayquaza|jirachi|deoxys|turtwig|grotle|torterra|chimchar|monferno|infernape|piplup|prinplup|empoleon|starly|staravia|staraptor|bidoof|bibarel|kricketot|kricketune|shinx|luxio|luxray|budew|roserade|cranidos|rampardos|shieldon|bastiodon|burmy|wormadam|mothim|combee|vespiquen|pachirisu|buizel|floatzel|cherubi|cherrim|shellos|gastrodon|ambipom|drifloon|drifblim|buneary|lopunny|mismagius|honchkrow|glameow|purugly|chingling|stunky|skuntank|bronzor|bronzong|bonsly|mime jr|happiny|chatot|spiritomb|gible|gabite|garchomp|munchlax|riolu|lucario|hippopotas|hippowdon|skorupi|drapion|croagunk|toxicroak|carnivine|finneon|lumineon|mantyke|snover|abomasnow|weavile|magnezone|lickilicky|rhyperior|tangrowth|electivire|magmortar|togekiss|yanmega|leafeon|glaceon|gliscor|mamoswine|porygon-z|gallade|probopass|dusknoir|froslass|rotom|uxie|mesprit|azelf|dialga|palkia|heatran|regigigas|giratina|cresselia|phione|manaphy|darkrai|shaymin|arceus|victini|snivy|servine|serperior|tepig|pignite|emboar|oshawott|dewott|samurott|patrat|watchog|lillipup|herdier|stoutland|purrloin|liepard|pansage|simisage|pansear|simisear|panpour|simipour|munna|musharna|pidove|tranquill|unfezant|blitzle|zebstrika|roggenrola|boldore|gigalith|woobat|swoobat|drilbur|excadrill|audino|timburr|gurdurr|conkeldurr|tympole|palpitoad|seismitoad|throh|sawk|sewaddle|swadloon|leavanny|venipede|whirlipede|scolipede|cottonee|whimsicott|petilil|lilligant|basculin|sandile|krokorok|krookodile|darumaka|darmanitan|maractus|dwebble|crustle|scraggy|scrafty|sigilyph|yamask|cofagrigus|tirtouga|carracosta|archen|archeops|trubbish|garbodor|zorua|zoroark|minccino|cinccino|gothita|gothorita|gothitelle|solosis|duosion|reuniclus|ducklett|swanna|vanillite|vanillish|vanilluxe|deerling|sawsbuck|emolga|karrablast|escavalier|foongus|amoonguss|frillish|jellicent|alomomola|joltik|galvantula|ferroseed|ferrothorn|klink|klang|klinklang|tynamo|eelektrik|eelektross|elgyem|beheeyem|litwick|lampent|chandelure|axew|fraxure|haxorus|cubchoo|beartic|cryogonal|shelmet|accelgor|stunfisk|mienfoo|mienshao|druddigon|golett|golurk|pawniard|bisharp|bouffalant|rufflet|braviary|vullaby|mandibuzz|heatmor|durant|deino|zweilous|hydreigon|larvesta|volcarona|cobalion|terrakion|virizion|tornadus|thundurus|reshiram|zekrom|landorus|kyurem|keldeo|meloetta|genesect|chespin|quilladin|chesnaught|fennekin|braixen|delphox|froakie|frogadier|greninja|bunnelby|diggersby|fletchling|fletchinder|talonflame|scatterbug|spewpa|vivillon|litleo|pyroar|flabebe|floette|florges|skiddo|gogoat|pancham|pangoro|furfrou|espurr|meowstic|honedge|doublade|aegislash|spritzee|aromatisse|swirlix|slurpuff|inkay|malamar|binacle|barbaracle|skrelp|dragalge|clauncher|clawitzer|helioptile|heliolisk|tyrunt|tyrantrum|amaura|aurorus|sylveon|hawlucha|dedenne|carbink|goomy|sliggoo|goodra|klefki|phantump|trevenant|pumpkaboo|gourgeist|bergmite|avalugg|noibat|noivern|xerneas|yveltal|zygarde|diancie|hoopa|volcanion|magearna
! array deities = god|gods|deities|jesus|buddha|buddah|heaven|allah|alla|cthulhu|the flying spaghetti monster|flying spaghetti monster
! array election = election|us election|american election
! array candidates = donald|trump|donald trump|trimp|hillary|clinton|hillary clinton|bernie|sanders|bernie sanders|ralph|ralph nader|nader|elvis|elvis presley|ted|cruz|ted cruz|hilary|hilarry
! array bernie = bernie|sanders|bernie sanders|bernard|bernard sanders
! array clinton = hillary|clinton|hillary clinton|hilary|hilarry
! array trump = donald|donny|trump|donald trump|donny trump|trimp|drumpf
! array cruz = ted|ted cruz|cruz
! array kasich = john|johnny|john kasich|kasich|johnny kasich
! array nader = ralph|nader|ralph nader|naders raiders
! array elvis = elvis|presley|elvis presley
! array bringwords = wear need bring carry grab take
! array zuck = zuck|zucky|zuckerburg|zuckerberg|mark zuckerberg|mark zuckerburg|mark zuck
! array softdrinks = water|coke|coca-cola|diet coke|diet coca-cola|diet cola|pepsi|sprite|mountain dew|fanta|mr pibb|mister pibb|orangina|pelligrino|seltzer|ginger ale|root beer|coca cola|cola|soda|pop|sarsaparilla|cherry coke|cherry cola|cream soda|sparkling water|apple juice|orange juice|cranberry juice|grape juice|grapefruit juice|pomegranate juice|fruit juice|juice|juicebox|juice box|la croix
! array movies = movie movies film films flick flicks cinema dvd dvds video videos tv television shows sitcoms dramas romcoms
! array siblings = brothers bros sisters siblings
! array bfgf = boyfriend|boy friend|girlfriend|girl friend|significant other
! array kanye = kanye|kanye west
! array hotlines = suicide hurt hurting abuse rape incest cut cutting
! array stdslist = chlamydia|gonorrhea|herpes|hpv|genital warts|syphilis|pubic lice|trichomoniasis|hepatitis|hiv|aids
! array sensitivetopics = holocaust|shoah|hitler|nazi|nazis|aryan brotherhood|ku klux klan|kkk|abortion|mass shootings|mass shooting
! array badwordsinsults = stupid|idiot|asshole|arse|arsehole|smartass|shithead|smart-ass|dumb|dick|dickhead|dick-head|douchebag|shitbag|dumbass|fuckass|asswipe|bastard|dipshit|dumbfuck|fatass|jerkass|jackass|lardass|lameass|motherfucker|mother fucker|wanker|pisshead|fuck|fcuk|fuuck|fuckk|fucker|ass|you suck|sucks
! array badwordsmiddleschool = penis vagina sex beastiality anus chode dildo ballsack nutsack tits boob boobs goatse wank jizz cum cumming jizzing dildos handjob cock porn
! array badwords4chan = sjw sjws feminazi cuck cucks cucked cuckboy cuckservative
! array badwordsracist = spic spik spick spics wetback towelhead nigger niggers negro nigguh n1gger nigg3r niqqa niqqer shitskin kike kikes kyke coon chink chinc chinks jap japs paki pakis gyp gypsy raghead gook darkie darky dothead golliwog half-breed halfbreed heeb jigger nigaboo jigaboo jiggabo wigger niglet coloreds pickaninny squaw chinaman beaner
! array badwordssexist = pussy pussies cunt cunts bitch bitches slut sluts whore whores twat muff skank ho thot twats
! array badwordsantilgbt = fag|fags|faggot|faggots|faggit|fagg0t|cocksucker|a queer|dyke|dykes|tranny|trannies|shemale|shemales|heshe|he-she|ladyboy|ladyboys
! array badwordsableist = retard retards retarded tard crip cripple cripples mongoloid psychotic schizo fucktard
! array poncho = poncho ponch ponchi ponchie ponchorino p
! array thanks = thanks|thank you|thank ya|thx|tnx|ty|tyty|tytyty|tytytyty
! array exit = stop done cancel abort quit exit
! array cat = cat kitty kitten kitteh kitty-kat kat kittycat kittykat pussy-cat pussycat pussykat pussy-kat
! array naughty = fuck asshole
! array hello = hello hi hiya yo sup hey heey hii heya hai oi
! array goodbye = goodbye bye byebye buhbye later cya cyah byebye
! array malenoun = male guy boy dude boi man men gentleman gentlemen
! array femalenoun = female girl chick woman women lady babe
! array mennoun = males guys boys dudes bois men gentlemen
! array womennoun = females girls chicks women ladies babes
! array lol = lol lmao rofl rotfl haha hahaha
! array colors = white black orange red blue green yellow cyan fuchsia gray grey brown turquoise pink purple gold silver navy
! array height = tall long wide thick
! array measure = inch in centimeter cm millimeter mm meter m inches centimeters millimeters meters
! array yes = yes|yeah|yep|yup|ya|yea|yep|y|you bet|yuppers|yupyup
! array no = no|nah|nope|nay|i do not|n
! array sure = sure|ok|okay|alright|all right|absolutely|why not|i do|totes|totally|of course|got it|gotcha
! array cancel = cancel|stop|skip|end|quit|nevermind|never mind|forget it|whatever|none
! array sureyes = yes|yeah|yep|yup|ya|yea|yep|y|sure|ok|okay|alright|aiight|all right|absolutely|why not|i do|totally|ja|si|oui|totes|okee|okie|sure thing|okk|okkk|k|you bet|yuppers|yupyup|of course|got it|gotcha

> object wildcardGuess javascript
	var text = arguments[1].join(' ');
	return this.wildcardGuess(text);
< object

> object continueRequestAfterLocationSave javascript
	var self = this;
	try {
	var inputs = self.brain().getUserVars(self.user.id)['__history__']['input'];
	if (self.user.data && self.user.data.location) {
	for (var i in inputs) {
	if (inputs[i].match(/setting|preference|notification|alert|severe|forecast/i))
	break;
	if (inputs[i].match(/weather|forecast|outlook/i))
	return self.brain().replyWithoutHistory(self.user.id, inputs[i], self);
	}
	}
	} catch(err) {}
	return '[[stop]]';
< object

> object fuzzybotNotificationTest javascript
	var self = this;
	return self.brain().replyAsync(self.user.id, 'fuzzybot do notification forecast subject at 14', self).then(function(reply) {
	return self.respond('[[delay:10]]').respond(reply).respond('[[typing]]').respond('[[delay:10]]').send();
	}).then(function() {
	return self.brain().replyAsync(self.user.id, 'fuzzybot do notification forecast', self).then(function(reply) {
	self.respond(reply).send();
	return '';
	})
	})
< object

> object locationWasSaved javascript
	var self = this;
	return self.promise().resolve().then(function() {
	return self.respond('[[typing]]').respond('Great! Here’s today’s forecast.').send();
	}).then(function() {
	return self.checkForecast(null,null);
	}).then(function() {
	return 'Ask me about the weather anytime. If you’d like, I can also send you forecasts twice a day. [[keys:Set Notifications|Nah, later…]]';
	});
< object

> object verifyLocation javascript
	var rs = arguments[0];
	var query = arguments[1].join(' ').trim();
	var self = this;
	if (query.match(/^(planet|the|a|an)?\s?(earth|poncho|moon|mars|somewhere|here|there|google|facebook|messenger|twitter|internet|online)$/i))
	return 'Oh, lucky. I’ve always wanted to go there. But anyway, where do you really live?';
	return this.findWeather(query).then(function(weather) {
	// Check if location found
	if (weather && weather.location && weather.location.data && weather.location.data.id) {
	self.brain().setUserVars(self.user.id, {
	temp_location:  weather.location.data.postal_code || weather.location.data.name,
	temp_city:      weather.location.data.city
	});
	return 'Oh, ' + weather.location.data.name + '? Right now it’s ' + weather.data.weather_status + ' there.\nIs that the right city? [[keys:Yea|Nope]]';
	}
	// Otherwise throw an error, catch below
	throw new Error('no location found');
	}).catch(function(err) {
	return 'Hmmmm, that doesn’t look right. Tell me where you are or say “cancel” to cancel.';
	});
< object

> object saveLocation javascript
	var rs = arguments[0];
	var self = this;
	var query = rs.getUservar(self.user.id, 'temp_location');
	return self.findLocation(query).then(function(location) {
	var obj = {
	location:    location.data.name,
	country:     location.data.country,
	postal_code: location.data.postal_code || '',
	celsius:     (location.temperatureFormat() == 'celsius'),
	metric:      (location.measurementFormat() == 'metric'),
	speed:       (location.speedFormat() == 'kph'),
	timezone:    location.data.tzOffset
	};
	// Save value and return reply
	return self.user.updateUserData(obj).then(function() {
	// If can do notifications, continue
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do location was saved', self);
	});
	}).catch(function(err) {
	// If an error does occur, try again...
	return self.brain().replyAsync(self.user.id, 'fuzzybot do save location error', self);
	});
< object

> object saveDailyUpdate javascript
	var vals = arguments[1];
	var update = parseInt(vals[0]);
	var text = this.message.text;
	// If pre-defined (not "text"), get the var passed
	if (vals[1] != 'text')
	text = vals[1];
	return this.saveOnboardingNotification(update, text);
< object

> object onboardingSaveComplete javascript
	return this.user.updateUserData({signup_state: 'registered'}).then(function() {
	return '';
	});
< object

> object changeEmailAddress javascript
	var self = this,
	email, str;
	// Get email from original message
	email = self.message.text.trim().replace(/^(.*\s)?((([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,}))(\s.*)?$/i, '$2');
	// Ensure we have a valid email
	if (email.match(/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i)) {
	// Save data, track it, update brain, and return our reply
	return self.user.updateUserData({email: email}).then(function() {
	self.analytics.track('preferences', {'action': 'updated_email_address'});
	return self.brain().replyAsync(self.user.id, 'fuzzybot do email saved', self);
	});
	}
	return self.brain().replyAsync(self.user.id, 'fuzzybot do email not saved', self);
< object

> object verifyEmailAddress javascript
	var rs = arguments[0], email, str;
	// Get email from original message
	email = self.message.text.trim().replace(/^(.*\s)?((([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,}))(\s.*)?$/i, '$2');
	if (email.match(/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i)) {
	self.brain().setUserVars(self.user.id, 'email', email);
	str = 'Lovely! You are all set.';
	} else {
	str = "What? What kind of email address is that? Wait, are you on Compuserve?\nNever mind, just tell me your actual email address.";
	}
	return str;
< object

> object generateHelpItems javascript
	// Help text
	var text = "Hi there. So I can tell you the weather…among other things. Tell me things like the following:\n\n  • Weather\n  • Is it snowing in New York?\n  • Do I need an umbrella today?\n  • What’s the 5 day forecast?\n  • Stop notifications!\n  • Change settings\n\nOr choose a command below.";
	// Help items
	var items = [
	{
	title: 'Weather',
	description: 'Forecasts made just for you.',
	buttons: [
	{text: 'Today’s Forecast', callback: 'Today’s Forecast'},
	{text: 'Hourly Forecast', callback: 'Hourly Forecast'},
	{text: '5-Day Forecast', callback: '5-Day Forecast'},
	]
	},
	{
	title: 'Settings',
	description: 'Set location, switch °F and °C, and stuff like that.',
	buttons: [
	{text: 'Set Location', callback: 'Set Location'},
	{text: 'Edit Notifications', callback: 'Edit Notifications'},
	{text: 'All Settings', callback: 'All Settings'},
	]
	}
	];
	// Queue up messages
	this.respondUnformatted(text).respond('[[typing:2]]').respondWithAttachment('attachment', { attachment: {type: 'generic', items: items} });
	return '';
< object

> object resetLocation javascript
	return this.user.updateUserData({'location':null}).then(function() {
	return 'Location was reset.';
	});
< object

> object confirmLocation javascript
	var text = arguments[1].join(' ');
	// Use temp location unless other one is passe
	if (!text || text.trim() == '')
	text = this.message.text;
	return this.confirmLocation(text);
< object

> object changeLocation javascript
	var text = arguments[1].join(' ');
	// Use temp location unless other one is passe
	if (!text || text.trim() == '')
	text = rs.getUservar(this.user.id, 'temp_location');
	return this.changeLocation(text);
< object

> object changeMeasurementFormat javascript
	var rs = arguments[0],
	measure = arguments[1],
	self = this;
	// Save value and return reply
	return this.user.updateUserData({metric: (measure == 'metric')}).then(function() {
	self.analytics.track('preferences', {'action': 'updated_measurement_format'});
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do measurement saved as ' + measure, self);
	});
< object

> object changeNickname javascript
	var rs = arguments[0],
	self = this;
	// Catch people asking Poncho to call them.
	if (this.message.text.match(/call me/i) && arguments[1][0].match(/^[\d\-\+\s\(\)]+$/)) {
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do nickname call phone', self);
	}
	// Slightly ugly hack, but this gets us original casing and unparsed values for name.
	var nickname = this.message.text.trim().replace(/^(my name is|my nickname is|it is|call me)?(.*)$/mi, ' | $2').split(' | ');
	nickname.shift(); // removes any crap from begining of string
	nickname = nickname.join('').trim(); // makes nickname
	// Ignore weird punctuation
	if (nickname.match(/[\@\!\?\#\+\|\<\>\[\]]/)) {
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do nickname no weird punctuation', self);
	}
	// Save value and return reply
	return this.user.updateUserData({nickname: nickname}).then(function() {
	self.analytics.track('preferences', {'action': 'updated_nickname'});
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do nickname saved ' + nickname, self);
	});
< object

> object listNotifications javascript
	var action = arguments[1];
	return this.listNotifications(action);
< object

> object chooseNotification javascript
	var action = arguments[1].shift(),
	text = this.message.text;
	return this.chooseNotification(action, text);
< object

> object changeNotification javascript
	var rs = arguments[0],
	id = rs.getUservar(this.user.id, 'chosen_notification'),
	text = this.message.text;
	return this.changeNotification(id, text);
< object

> object snoozeNotification javascript
	var rs = arguments[0],
	id = rs.getUservar(this.user.id, 'chosen_notification');
	return this.snoozeNotification(id);
< object

> object activateNotification javascript
	var rs = arguments[0],
	id = rs.getUservar(this.user.id, 'chosen_notification');
	return this.activateNotification(id);
< object

> object deactivateNotification javascript
	var rs = arguments[0],
	id = rs.getUservar(this.user.id, 'chosen_notification');
	return this.deactivateNotification(id);
< object

> object deactivateAllNotifications javascript
	return this.deactivateNotification('all');
< object

> object activateAllNotifications javascript
	return this.activateNotification('all');
< object

> object changePhoneNumber javascript
	var self = this,
	phone, str;
	// Get phone number from original message
	self.message.text.replace(/\s/mg, '').replace(/[\+\d\-\(\)]+/i, function(s,m,a) {
	phone = s.replace(/[\-\(\)]/mg, '');
	});
	// NB: We are not doing anything fancy with checking.
	// Ensure we have a valid phone number
	if (phone && phone.match(/^([\+\d\s\-\(\)]+)$/i)) {
	return self.user.updateUserData({phone: phone}).then(function() {
	self.analytics.track('preferences', {'action': 'updated_phone_number'});
	return self.brain().replyAsync(self.user.id, 'fuzzybot do saved phone', self);
	});
	}
	return self.brain().replyAsync(self.user.id, 'fuzzybot do not saved phone', self);
< object

> object verifyPhoneNumber javascript
	var rs = arguments[0], str;
	// Get phone number from original message
	var phone = this.message.text.replace(/\s/mg, '').replace(/^(.*)?([\+\d\-\(\)]+)(.*)?$/i, '$2');
	if (phone && phone.match(/^([\+\d\s\-\(\)]+)$/i)) {
	rs.setUservar(rs.currentUser(), 'phone', phone);
	str = 'Lovely! You are all set.';
	} else {
	str = "What? What kind of phone number is that? Wait, are you living on the Moon?\nNever mind, just tell me your actual phone number."
	}
	return str;
< object

> object settingsNotificationsTimes javascript
	var items = [],
	str = '',
	areActive = true;
	// Loop through each
	for (var i in this.user.notifications) {
	if (this.user.notifications[i].data) {
	items.push(this.user.notifications[i].niceTime());
	if (!this.user.notifications[i].data.is_active)
	areActive = false;
	}
	}
	// Join it
	str = Array.humanize_join(items, 'and');
	// Include notice if they are off
	if (!areActive)
	str = str + '[[br]](Notifications are off.)'
	return str;
< object

> object settingsUserTimezone javascript
	var str;
	try {
	str = this.user.weather.location.data.tzName;
	// str = str + ' (' + (this.user.data.timezone > 0 ? '+' : '') + this.user.data.timezone + ' hour' + (Math.abs(this.user.data.timezone) > 1 ? 's' : '') + ')';
	str = str + ' (' + (this.user.data.timezone > 0 ? '+' : '') + this.user.data.timezone + ')';
	} catch(err) {
	str = '¯\\_(ツ)_/¯';
	}
	return str;
< object

> object showInDifferentTemperatureFormat javascript
	var temp = arguments[1],
	self = this,
	info = rs.getUservars(self.user.id),
	matched = false;
	// Return unknown if user history is missing
	if (!info.__history__ || !info.__history__.input || !info.__history__.input.length)
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do temperature past message in ' + temp, self);
	// Look back two items in case it came with a pollen/hair bit
	var maxLen = 1;
	for (var i = 0; i <= maxLen; i++) {
	if (!info.__history__.input[i])
	break;
	if (info.__history__.input[i].match(/hair|pollen/i)) {
	maxLen++;
	continue;
	}
	if (info.__history__.input[i].match(/^(?!fuzzybot do)(.*)(forecast|outlook|hourly|weather)/i)) {
	matched = info.__history__.input[i];
	break;
	}
	}
	// If matched, make call setting celsius status
	if (matched) {
	info.celsius = (temp == 'celsius');
	return self.brain().replyWithTempVars(self.user.id, info, matched, self);
	}
	// Otherwise, return unknown message
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do temperature past message in ' + temp, self);
< object

> object changeTemperatureFormat javascript
	var rs = arguments[0],
	temp = arguments[1],
	self = this;
	// Save value and return reply
	return this.user.updateUserData({celsius: (temp == 'celsius')}).then(function() {
	self.analytics.track('preferences', {'action': 'updated_temperature_format'});
	return self.brain().replyWithoutHistory(self.user.id, 'fuzzybot do temperature saved as ' + temp);
	});
< object

> object checkWeather javascript
	return this.checkWeather(arguments[1].join(' '));
< object

> object checkTomorrowWeather javascript
	return this.checkDayWeather('tomorrow', arguments[1].join(' '));
< object

> object checkCondition javascript
	var condition = arguments[1].shift()
	return this.checkCondition(condition, arguments[1].join(' '));
< object

> object checkConditionTimeframe javascript
	var a = arguments[1].join(' ').split('|').map(function(b) { return b.trim(); });
	return this.checkConditionTimeframe(a[0], a[1], a[2]);
< object

> object checkTemperatureTimeframe javascript
	var a = arguments[1].join(' ').split('|').map(function(b) { return b.trim(); });
	return this.checkTemperatureTimeframe(a[0], a[1]);
< object

> object checkForecast javascript
	return this.checkForecast(arguments[1].join(' '), ["Hourly Forecast", "5-Day Forecast", "Hair & Pollen"]);
< object

> object checkDayForecast javascript
	var a = arguments[1].join(' ').split('|').map(function(b) { return b.trim(); });
	return this.checkDayWeather(a[0], a[1]);
< object

> object checkWeekendForecast javascript
	return this.checkWeekendForecast(arguments[1].join(' '));
< object

> object checkNextWeekForecast javascript
	return this.checkNextWeekForecast(arguments[1].join(' '));
< object

> object checkForecastWithoutKeys javascript
	return this.checkForecast(arguments[1].join(' '));
< object

> object checkOutlook javascript
	return this.checkOutlook(arguments[1].join(' '));
< object

> object checkHourlyForecast javascript
	return this.checkHourlyForecast(arguments[1].join(' '));
< object

> object checkHighTemperature javascript
	return this.checkHighLowTemperature('high', arguments[1].join(' '));
< object

> object checkLowTemperature javascript
	return this.checkHighLowTemperature('low', arguments[1].join(' '));
< object

> object checkFrizz javascript
	return this.checkFrizz(arguments[1].join(' '));
< object

> object checkPollen javascript
	return this.checkPollen(arguments[1].join(' '));
< object

> object checkFrizzAndPollen javascript
	return this.checkFrizzAndPollen(arguments[1].join(' '));
< object

> object joinWordsAndCapitalize javascript
	var a = arguments[1].join('').split(' ').join('').toLowerCase();
	var b = a[0].toUpperCase() + a.slice(1);
	return (b == 'Satday' ? 'Saturday' : b);
< object

> object makeWeatherButtons javascript
	var a = this.brain().getUserVars(this.user.id).location ? this.brain().getUserVars(this.user.id).location.trim().toLowerCase().replace(/[^a-z0-9\s\-]/mg, '') : '',
	b = arguments[1][0] ? arguments[1][0].trim().toLowerCase().replace(/[^a-z0-9\s\-]/mg, '') : '',
	keys = ['5-Day Forecast', 'Hourly Forecast'];
	if (a != b)
	keys.unshift('Make Default');
	return '[[keys:' + keys.join('|') + ']]';
< object

> object notificationForecast javascript
	var text = arguments[1].join(' ');
	return this.notificationForecast(text);
< object

> object notificationForecastTimestamped javascript
	var text = (arguments[1][1] || []).join(' ');
	var ts = arguments[1][0];
	return this.notificationForecast(text, ts);
< object

> object notificationForecastOpener javascript
	return this.checkForecastOpener(null, args[0]);
< object

> object convertCelsiusToKelvin javascript
	var temp_c = parseInt(arguments[0].getUservar(this.user.id, arguments[1][0]));
	return this.convertCelsiusToKelvin(temp_c);
< object

> object getLocalTime javascript
	var d = new Date();
	if (this.sender && this.sender.user && typeof(this.sender.user.timezone) !== 'undefined')
	d.setTime( d.getTime() + (this.sender.user.timezone * 60 * 60 * 1000) );
	var hour = d.getHours(),
	min = d.getMinutes(),
	period = (hour > 11 ? 'pm' : 'am');
	hour = ((hour % 12) == 0 ? 12 : (hour % 12));
	min = (min < 10 ? '0' + min : min);
	return hour + ':' + min + ' ' + period;
< object

> object astrological_sign javascript
	var self = this;
	var slash_date_regex = /\d{1,2}\/\d{1,2}\/?(\d{0,4})/;
	if (args.length > 1 || slash_date_regex.test(args[0])) {
	var bot_reference = arguments[0];
	var year = args[2] || new Date().getFullYear();
	var date = args[2] ? new Date(args.join(' ')) : new Date((args.join(' ') + ' ' + String(year)));
	if (slash_date_regex.test(args[0])) {
	year = args[0].match(slash_date_regex)[1].length > 0 ? args[0].match(slash_date_regex)[1] : new Date().getFullYear();
	date = args[0].match(slash_date_regex)[1].length > 0 ? new Date(args[0]) : new Date(args[0]+'/'+year);
	}
	var sign;
	switch (true) {
	case (date >= (new Date('march 21 '+year)) && date <= (new Date('april 19 '+year))):
	sign = 'Aries';
	break;
	case (date >= (new Date('april 20 '+year)) && date <= (new Date('may 20 '+year))):
	sign = 'Taurus';
	break;
	case (date >= (new Date('may 21 '+year)) && date <= (new Date('june 20 '+year))):
	sign = 'Gemini';
	break;
	case (date >= (new Date('june 21 '+year)) && date <= (new Date('july 22 '+year))):
	sign = 'Cancer';
	break;
	case (date >= (new Date('july 23 '+year)) && date <= (new Date('august 22 '+year))):
	sign = 'Leo';
	break;
	case (date >= (new Date('august 23 '+year)) && date <= (new Date('september 22 '+year))):
	sign = 'Virgo';
	break;
	case (date >= (new Date('september 23 '+year)) && date <= (new Date('october 22 '+year))):
	sign = 'Libra';
	break;
	case (date >= (new Date('october 23 '+year)) && date <= (new Date('november 21 '+year))):
	sign = 'Scorpio';
	break;
	case (date >= (new Date('november 22 '+year)) && date <= (new Date('december 21 '+year))):
	sign = 'Saggitarius';
	break;
	case (date >= (new Date('december 22 '+year)) && date <= (new Date('december 31 '+Number(year)))):
	sign = 'Capricorn';
	break;
	case (date >= (new Date('january 1 '+year)) && date <= (new Date('january 19 '+year))):
	sign = 'Capricorn';
	break;
	case (date >= (new Date('january 20 '+year)) && date <= (new Date('february 18 '+year))):
	sign = 'Aquarius';
	break;
	case (date >= (new Date('february 19 '+year)) && date <= (new Date('march 20 '+year))):
	sign = 'Pisces';
	break;
	default:
	return 'Not a date?';
	}
	var message = 'You’re a '+sign+'!';
	self.respond(message);
	self.respond('[[typing]]');
	return self.brain().replyAsync(self.sender.id, sign, self);
	} else {
	return 'Not a date.';
	}
< object

> object severeWeatherAlert javascript
	return this.severeWeatherAlert(arguments[1]);
< object

> begin

	+ request
	- {ok}

< begin

> topic random includes fuzzybot_utils cms_wildcards cms_easter_eggs cms_just_alex_things cms_people_and_things cms_faq_conspiracy cms_nerd_jokes cms_politics cms_severe_weather cms_pre_cms_languages cms_community_ cms_weather_accessories cms_apology_pit cms_advice cms_sleepy_time cms_general_banter cms_pollen cms_recipes_take_out_fruits_veggies cms_horoscopes cms_help_and_manual_ cms_christian_s_wip cms_do_me_a_gif cms_movies cms_ab_test_0001_sample_push_notification cms_ab_test_0002_sample_push_notification cms_push_notification_subjects cms_faq cms_first_date_with_ponch cms_hotlines cms_fallback_forecast_messages cms_fundrasing cms_rude_words_topic cms_banned_words_topic cms_banned_words cms_post_onboarding_welcome cms_word_arrays_and_substitutions cms_stop_words cms_extra_functions cms_severe_weather_alerts

	+ fuzzybot do save location continue{weight=200}
	- <call>continueRequestAfterLocationSave</call>

	+ fuzzybot do notification test
	- <call>fuzzybotNotificationTest</call>

	+ fuzzybot do mock severe alert{weight=1000}
	- [[delay:5]]\n⚠️ There's a tornado warning in your area. (LOCATION)\n[[delay:5]]\nA tornado warning means you should seek shelter immediately. To see the official government alert, click below. [[keys:More Info 🔗]]

	+ fuzzybot do mock forecast{weight=1000}
	- [[delay:5]]\nClear skies and temps dropping to 62°F later. This weather makes me feel like a kid in a candy store. Also cuz I'm in a candy store rn.

	+ what is my (ref|referral) code{weight=100}
	* <get refcode> == undefined => Sorry, I was not able to find your referral code.
	- Your referral code is: <get refcode>

	+ what is my account status{weight=100}
	* <get is_active> == true => You are a-ok, pal.
	- Your account is not active.

	+ fuzzy delay
	- delayed message\n[[delay:10]]\n[[delay:10]]\nmore delays\n[[delay:10]]\n[[delay:10]]\nOK.

	+ fuzzybot do welcome button 1{weight=100}
	* <get location> != undefined => Are you still in <get location>? It is {@fuzzybot do weather convert temp} and <get weather_status> there.\n[[wait]]\n[[typing]]\nYou can ask me about the weather or enter "help" for more.
	- Okay, {@fuzzybot do make nice username}! Ask me about the weather or enter "help" for more.

	+ (uu|try onboarding)
	- {topic=user_unregistered} Oh, hello there secret user. Say "hi" for onboarding.

	+ (what) [*] (@emailaddressword)
	* <get email> == undefined => We don’t know your email address.
	- Your email address is <get email>.

	+ (@updateword) [*] (@emailaddressword) [to] *{weight=100}
	- <call>changeEmailAddress <star3></call>

	+ [*] (@emailaddressword) is *{weight=100}
	- <call>changeEmailAddress <star2></call>

	+ *
	% * tell me your [*] email address
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	* {@fuzzybot do is a <star1>} == yes => Okay sure. Tell me your email address.
	* {@fuzzybot do is a <star1>} == sure => Okay sure. Tell me your email address.
	- <call>changeEmailAddress <star1></call>

	+ *
	% that does not look right tell me your email address
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	- <call>changeEmailAddress <star1></call>

	+ fuzzybot do email saved{weight=100}
	- Lovely! I changed your email to <get email>.

	+ fuzzybot do email not saved{weight=100}
	- What? What kind of email address is that? Wait, are you on {random}Prodigy|America OnLine|Compuserve{/random}?\nNever mind, just tell me your actual email address.

	+ (today’s|today's|todays) (forecast|weather){weight=2000}
	@ weather

	+ fuzzybot do set firsttime location{weight=200}
	- Hey there! Before I can tell you the weather, tell me where you are.

	+ fuzzybot do reset location
	- <set location=undefined><call>resetLocation</call>

	+ [*] [current] location
	* <get location> == undefined => You don’t have one set.\n\n[[typing]]\nTell me, where are you?
	- Your preferred location is <get location>.

	+ *{weight=100}
	% * where [*] [default|preferred] location [*]
	* {@fuzzybot do is a <star1>} == no => Ok, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Ok, never mind.
	* {@fuzzybot do is a <star1>} == yes => Okay, where do you currently live?
	* {@fuzzybot do is a <star1>} == sure => Okay, where do you currently live?
	- <call>confirmLocation</call>

	+ *{weight=100}
	% * where (are you|you are) [*]
	* {@fuzzybot do is a <star1>} == no => Ok, nevermind.
	* {@fuzzybot do is a <star1>} == cancel => Ok, nevermind.
	* {@fuzzybot do is a <star1>} == yes => Ok, where are you?
	* {@fuzzybot do is a <star1>} == sure => Ok, where are you?
	- <call>confirmLocation</call>

	+ (@updateword) [*] (location) [at|to|in|as] *
	- <call>confirmLocation <star3></call>

	+ (@updateword) [*] (location){weight=100}
	- Sure. Just tell me where you’d like your location to be.

	+ * (live|reside|sleep) [at|in|near|on] *
	- <call>confirmLocation <star3></call>

	+ fuzzybot do user sent location attachment found *{weight=100}
	* <star1> == undefined => I’m good with geography, but I do not know where this is. Where are you? You can also say 'cancel' to skip this.
	- {@weather in <star1>}

	+ fuzzybot do user sent location attachment failed *{weight=100}
	* <star1> == ocean => Are you on a boat!? Like a Rihanna type of yacht? If so, may I join you? But anyway, I need a land-location to give you forecasts. You can also say 'cancel' to skip this.
	- I’m good with geography, but not that good. I don’t know where this is. Where are you? You can also say 'cancel' to skip this.

	+ fuzzybot do save location complete{weight=200}
	- Great. Your location is now <get location>. Here’s the forecast:\n{@fuzzybot do save location continue}

	+ fuzzybot do save location complete{weight=200}
	% * what you meant *
	- Great. Your location is now <get location>.\n{@fuzzybot do save location continue}

	+ fuzzybot do save location confirm{weight=100}
	* <get temp_location> == undefined => Sorry, where are you?
	- Oh! <get temp_location>? Is this what you meant? [[keys:Yeah!|No]]

	+ fuzzybot do save location error{weight=100}
	- I’m good with geography, but not that good. I don’t know where this is. Where are you? You can also say 'cancel' to skip this.

	+ fuzzybot do save location *{weight=100}
	- <call>changeLocation <star1></call>

	+ *{weight=80}
	% * update your location *
	* <get temp_location> == undefined => Where do you currently live?
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	* {@fuzzybot do is a <star1>} == yes => <call>changeLocation</call>
	* {@fuzzybot do is a <star1>} == sure => <call>changeLocation</call>
	- <call>confirmLocation <star1></call>

	+ *{weight=80}
	% * what you meant *
	* <star1> == fuzzybot do save location complete => {@fuzzybot do save location complete}
	* <get temp_location> == undefined => Where do you currently live?
	* {@fuzzybot do is a <star1>} == no => Okay, where do you currently live?
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	* {@fuzzybot do is a <star1>} == yes => <call>changeLocation</call>
	* {@fuzzybot do is a <star1>} == sure => <call>changeLocation</call>
	- <call>confirmLocation <star1></call>

	+ (@updateword) [*] (@measurementword) [to] @metricword{weight=100}
	- <call>changeMeasurementFormat metric</call>

	+ (use|list|show) [@showas] @metricword{weight=100}
	- <call>changeMeasurementFormat metric</call>

	+ (@updateword) [*] (@measurementword) [to] @imperialword{weight=100}
	- <call>changeMeasurementFormat imperial</call>

	+ (use|list|show) [@showas] @imperialword{weight=100}
	- <call>changeMeasurementFormat imperial</call>

	+ fuzzybot do measurement saved as metric{weight=100}
	- Oh fancy. You’ll receive updates with metric measurements.

	+ fuzzybot do measurement saved as imperial{weight=100}
	- Right. Imperial foot march it be.

	+ [*] (my name is|my nickname is|call me) *
	* {@fuzzybot do is a <star2>} == naughty => Ahem. No thank you.
	- <call>changeNickname <star2></call>

	+ [*] [my name is|my nickname is|it is|call me] *
	% * what do you want me to call you
	* {@fuzzybot do is a <star2>} == naughty => Ahem. No thank you.
	* {@fuzzybot do is a <star1>} == no => Okay. Never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay. Never mind.
	- <call>changeNickname <star1></call>

	+ *
	% * give you a call
	* {@fuzzybot do is a <star1>} == no => Okay. Never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay. Never mind.
	* {@fuzzybot do is a <star1>} == yes => Hahah. My calling plan won’t allow for that.
	* {@fuzzybot do is a <star1>} == sure => Hahah. My calling plan won’t allow for that.
	- A little forward, aren’t we?

	+ fuzzybot do nickname saved *{weight=100}
	* <star1> == ishmel => Aye! Ishmel ye be called. 🐋
	- Ok, I’ll call you <get nickname>.
	- <get nickname>? Sure.

	+ fuzzybot do nickname no weird punctuation{weight=100}
	- Sorry, no weird punctuation please.\nWhat do you want me to call you?

	+ fuzzybot do nickname call phone{weight=100}
	- You want me to give you a call?

	+ fuzzybot do push notification subject missing location
	- Oh hey bb. Ready for your Poncho notification?

	+ fuzzybot do notification title index * type * time * * * *{weight=100}
	* <star6> == not_on => <star1>. <star3>:<star4><star5> 🔔
	* <star6> == not_off => <star1>. <star3>:<star4><star5> 🔕
	* <star6> == not_snooze => <star1>. <star3>:<star4><star5> 💤
	* <star6> == on => <star1>. <star3>:<star4><star5>
	* <star6> == off => <star1>. <star3>:<star4><star5> (Off)
	* <star6> == snooze => <star1>. <star3>:<star4><star5> (Zzz…)
	- <star1>. <star3>:<star4><star5>

	+ fuzzybot do notification title type * time * * * *{weight=100}
	* <star5> == on => <star2>:<star3><star4>
	* <star5> == off => <star2>:<star3><star4> 🔕
	* <star5> == snooze => <star2>:<star3><star4> (💤)
	- <star2>:<star3><star4>

	+ (what are|when) [*] (@notificationsword){weight=10}
	- <call>listNotifications change</call>

	+ (snooze|pause|hold|delay) [*] (@notificationsword)
	- <set notif_attempts=0><call>listNotifications snooze</call>

	+ [turn] (on|activate|resume|start|continue|redo|begin) [*] (@notificationsword)
	- <set notif_attempts=0><call>listNotifications activate</call>

	+ [turn] (off|deactivate|stop|delete|remove|end) [*] (@notificationsword)
	- <set notif_attempts=0><call>listNotifications deactivate</call>

	+ [change|show|list|update|delete|edit|adjust|alter|snooze|stop] [*] (@notificationsword){weight=1}
	@ what are my notifications

	+ [*] (turn off|stop|disable) [*] (all) [*]{weight=1001}
	% * notification * (@notificationactionword) [*]
	- <call>deactivateAllNotifications</call>

	+ [*] (turn off|disable|stop|no more|pause) [*] (@notificationsword) [*]{weight=101}
	- <call>deactivateAllNotifications</call>

	+ [*] (enable|turn on|start) [*] (@notificationsword) [*]{weight=101}
	- <call>activateAllNotifications</call>

	+ *
	% * notification * (@notificationactionsword) *
	@ fuzzybot do notification handle <botstar3> <star1>

	+ *
	% * notification * (@notificationactionsword)
	@ fuzzybot do notification handle <botstar3> <star1>

	+ fuzzybot do notification handle * *{weight=100}
	* {@fuzzybot do is a <star2>} == no => Okay, never mind.
	* {@fuzzybot do is a <star2>} == cancel => Okay, never mind.
	* {@fuzzybot do is a <star2>} == naughty => Okay, never mind weirdo.
	* {@fuzzybot do is a <star2>} == yes => Okay sure. Which notification would you like to <star1>?
	* {@fuzzybot do is a <star2>} == sure => Okay sure. Which notification would you like to <star1>?
	- <call>chooseNotification <star1> <star2></call>

	+ fuzzybot do notification * unknown input{weight=100}
	- Oh, never mind then. Need something else? {topic=random}<set notif_attempts=undefined>

	+ (what) [*] (@phonenumberword)
	* <get phone> == undefined => We don’t know your phone number.
	- Your phone number is <get phone>.

	+ (@updateword) [*] (@phonenumberword) [to] *{weight=100}
	- <call>changePhoneNumber <star3></call>

	+ [*] (@phonenumberword) is *{weight=100}
	- <call>changePhoneNumber <star2></call>

	+ *
	% * tell me your [*] phone number
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	* {@fuzzybot do is a <star1>} == yes => Okay sure. Tell me your phone number.
	* {@fuzzybot do is a <star1>} == sure => Okay sure. Tell me your phone number.
	- <call>verifyPhoneNumber <star1></call>

	+ *
	% that does not look right tell me your phone number
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.
	- <call>verifyPhoneNumber <star1></call>

	+ fuzzybot do saved phone{weight=100}{weight=100}
	- Lovely! I changed your phone number to <get phone>.

	+ fuzzybot do not saved phone{weight=100}
	- What? What kind of phone number is that? Are you living {random}on Mars|on a boat|in Antarctica{/random}?\nNever mind, just tell me your actual phone number.

	+ fuzzybot do settings temperature{weight=1000}
	* <get celsius> == true => Celsius (°C)
	- Fahrenheit (°F)

	+ fuzzybot do settings location{weight=1000}
	* <get location> == undefined => ¯\_(ツ)_/¯
	- <get location>

	+ fuzzybot do settings timezone{weight=1000}
	- <call>settingsUserTimezone</call>

	+ fuzzybot do settings notifications{weight=1000}
	- <call>settingsNotificationsTimes</call>

	+ fuzzybot do settings buttons{weight=1000}
	- [[keys:{@fuzzybot do settings buttons location} | {@fuzzybot do settings buttons temperature} | Edit Notifications]]

	+ fuzzybot do settings buttons location{weight=1000}
	* <get location> == undefined => Set a Location
	- Change Location

	+ fuzzybot do settings buttons temperature{weight=1000}
	* <get celsius> == true => Change to °F
	- Change to °C

	+ [*] (settings|setting|preferences|prefs) [*]
	- Oh, you’re wondering about your settings?[[br]][[br]]Location: {@fuzzybot do settings location}[[br]]Timezone: {@fuzzybot do settings timezone}[[br]]Temperature: {@fuzzybot do settings temperature}[[br]]Notifications: {@fuzzybot do settings notifications} {@fuzzybot do settings buttons}[[br]]Referral Code: <get refcode>

	+ change to (°c|c|celsius){weight=100}
	@ update temperature to celsius

	+ change to (°f|f|fahrenheit){weight=100}
	@ update temperature to fahrenheit

	+ (@updateword) [*] (@temperatureword) [to] @celsiusword{weight=100}
	- <call>changeTemperatureFormat celsius</call>

	+ (use|list|show|update) [@showas] @celsiusword{weight=100}
	- <call>changeTemperatureFormat celsius</call>

	+ (@updateword) [*] (@temperatureword) [to] @fahrenheitword{weight=100}
	- <call>changeTemperatureFormat fahrenheit</call>

	+ (use|list|show|update) [@showas] @fahrenheitword{weight=100}
	- <call>changeTemperatureFormat fahrenheit</call>

	+ fuzzybot do temperature saved as celsius{weight=100}
	- Okay. I’ll send you temps in Celsius (°C) from now on.

	+ fuzzybot do temperature saved as fahrenheit{weight=100}
	- Okay. I’ll send you temps in Fahrenheit (°F) from now on.

	+ fuzzybot do temperature past message in *{weight=100}
	- Sorry, I am not sure what you want to see in <star1>.

	+ fuzzybot do speech not parsed{weight=1000}
	- Hrm. Sorry. I could not hear you. Speak slower and pronounce those words better.

	+ fuzzybot do speech error{weight=1000}
	- Sorry! I can’t quite understand what you’re asking me.

	+ fuzzybot do speech *{weight=1000}
	- Sorry! I can’t quite understand what you’re asking me.

	+ fuzzybot do sticker response pusheen
	- Hi, Pusheen, how u doing, bb?
	- Pusheen, u so soft
	- Pusheen, u my kitty
	- Hi, Pusheen. Hiiii~
	- Meow, Pusheen. Meow.

	+ fuzzybot do sticker response like
	- (y)

	+ fuzzybot do sticker response [*]
	- (y)

	+ hourly forecast{weight=100}
	- <call>checkHourlyForecast</call>

	+ (5day|5 day|5-day|five day) forecast{weight=100}
	- <call>checkOutlook</call>

	+ hair (&|and) pollen [forecast]{weight=100}
	- <call>checkFrizzAndPollen</call>

	+ [*] (hair|frizz) (@forecast) [*]{weight=100}
	@ hair

	+ [*] (pollen|sneeze|allergy|allergies) (@forecast) [*]{weight=100}
	@ pollen

	+ [*] (pollen|sneeze|allergy|allergies) warning [*]{weight=100}
	@ pollen

	+ [*] (hair|frizz) [@nearplace] *
	- <call>checkFrizz <star2></call>

	+ (hair|frizz) *
	- <call>checkFrizz <star2></call>

	+ (hair|frizz)
	- <call>checkFrizz</call>

	+ [*] (pollen|sneeze|allergy|allergies) [@nearplace] *
	- <call>checkPollen <star2></call>

	+ (pollen|sneeze|allergy|allergies) *
	- <call>checkPollen <star2></call>

	+ (pollen|sneeze|allergy|allergies)
	- <call>checkPollen</call>

	+ [*] (pollen|sneeze|allergy|allergies) [and|&] (hair|frizz) [@nearplace] *
	- <call>checkFrizzAndPollen <star3></call>

	+ [*] (hair|frizz) [and|&] (pollen|sneeze|allergy|allergies) [@nearplace] *
	- <call>checkFrizzAndPollen <star3></call>

	+ (pollen|sneeze|allergy|allergies) [and|&] (hair|frizz) *
	- <call>checkFrizzAndPollen <star3></call>

	+ (hair|frizz) [and|&] (pollen|sneeze|allergy|allergies) *
	- <call>checkFrizzAndPollen <star3></call>

	+ (pollen|sneeze|allergy|allergies) [and|&] (hair|frizz)
	- <call>checkFrizzAndPollen</call>

	+ (hair|frizz) [and|&] (pollen|sneeze|allergy|allergies)
	- <call>checkFrizzAndPollen</call>

	+ [*] (@outlook) [@showas] (@celsiusword) [@nearplace] *
	- <set celsius=true><call>checkOutlook <star3></call>

	+ [*] (@outlook) [@showas] (@fahrenheitword) [@nearplace] *
	- <set celsius=false><call>checkOutlook <star3></call>

	+ [*] (@outlook) [@nearplace] * [@showas] (@celsiusword)
	- <set celsius=true><call>checkOutlook <star2></call>

	+ [*] (@outlook) [@nearplace] * [@showas] (@fahrenheitword)
	- <set celsius=false><call>checkOutlook <star2></call>

	+ (@outlook) * [@showas] (@celsiusword)
	- <set celsius=true><call>checkOutlook <star2></call>

	+ (@outlook) * [@showas] (@fahrenheitword)
	- <set celsius=false><call>checkOutlook <star2></call>

	+ (@outlook) [@showas] (@celsiusword) *{weight=5}
	- <set celsius=true><call>checkOutlook <star3></call>

	+ (@outlook) [@showas] (@fahrenheitword) *{weight=5}
	- <set celsius=false><call>checkOutlook <star3></call>

	+ (@outlook) [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkOutlook</call>

	+ (@outlook) [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkOutlook</call>

	+ [*] (@outlook) [@nearplace] *{weight=5}
	- <call>checkOutlook <star2></call>

	+ (@outlook) *{weight=5}
	- <call>checkOutlook <star2></call>

	+ (@outlook){weight=5}
	- <call>checkOutlook</call>

	+ [*] (@hourlyforecast) [@showas] (@celsiusword) [@nearplace] *{weight=5}
	- <set celsius=true><call>checkHourlyForecast <star3></call>

	+ [*] (@hourlyforecast) [@showas] (@fahrenheitword) [@nearplace] *{weight=5}
	- <set celsius=false><call>checkHourlyForecast <star3></call>

	+ [*] (@hourlyforecast) [@nearplace] * [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkHourlyForecast <star2></call>

	+ [*] (@hourlyforecast) [@nearplace] * [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkHourlyForecast <star2></call>

	+ (@hourlyforecast) * [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkHourlyForecast <star2></call>

	+ (@hourlyforecast) * [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkHourlyForecast <star2></call>

	+ (@hourlyforecast) [@showas] (@celsiusword) *{weight=5}
	- <set celsius=true><call>checkHourlyForecast <star3></call>

	+ (@hourlyforecast) [@showas] (@fahrenheitword) *{weight=5}
	- <set celsius=false><call>checkHourlyForecast <star3></call>

	+ (@hourlyforecast) [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkHourlyForecast</call>

	+ (@hourlyforecast) [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkHourlyForecast</call>

	+ [*] (@hourlyforecast) [@nearplace] *{weight=5}
	- <call>checkHourlyForecast <star2></call>

	+ * (@hourlyforecast){weight=5}
	- <call>checkHourlyForecast <star1></call>

	+ [*] (@whatrequest) [*] (@hourlyforecast) [@nearplace] *{weight=5}
	- <call>checkHourlyForecast <star3></call>

	+ [*] (@whatrequest) [*] (@hourlyforecast){weight=5}
	- <call>checkHourlyForecast</call>

	+ (@hourlyforecast) *{weight=5}
	- <call>checkHourlyForecast <star2></call>

	+ (@hourlyforecast){weight=5}
	- <call>checkHourlyForecast</call>

	+ [*] (@forecast) (@showas) (@celsiusword) [@nearplace] *{weight=5}
	- <set celsius=true><call>checkForecast <star4></call>

	+ [*] (@forecast) (@showas) (@fahrenheitword) [@nearplace] *{weight=5}
	- <set celsius=false><call>checkForecast <star4></call>

	+ [*] (@forecast) [@nearplace] * (@showas) (@celsiusword){weight=5}
	- <set celsius=true><call>checkForecast <star2></call>

	+ [*] (@forecast) [@nearplace] * (@showas) (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkForecast <star2></call>

	+ (@forecast) * [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkForecast <star2></call>

	+ (@forecast) * [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkForecast <star2></call>

	+ (@forecast) [@showas] (@celsiusword) *{weight=5}
	- <set celsius=true><call>checkForecast <star3></call>

	+ (@forecast) [@showas] (@fahrenheitword) *{weight=5}
	- <set celsius=false><call>checkForecast <star3></call>

	+ (@forecast) [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkForecast</call>

	+ (@forecast) [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkForecast</call>

	+ [*] (@forecast) [@nearplace] *{weight=5}
	- <call>checkForecast <star2></call>

	+ * (@forecast){weight=5}
	- <call>checkForecast <star1></call>

	+ [*] (@forecast|@weatherword) please [*]{weight=6}
	- <call>checkForecast</call>

	+ [*] (@whatrequest) [*] (@forecast) [@nearplace] *{weight=5}
	- <call>checkForecast <star3></call>

	+ [*] (@whatrequest) [*] (@forecast){weight=5}
	- <call>checkForecast</call>

	+ (@forecast) *{weight=5}
	- <call>checkForecast <star2></call>

	+ (@forecast){weight=5}
	- <call>checkForecast</call>

	+ [this] (week|weekly)
	@ forecast

	+ make default [location]
	% * weather in * is *
	@ fuzzybot do save location <botstar2>

	+ [*] (@forecast) [*] (@dayabbvterms) [*]{weight=101}
	- <call>checkDayForecast <star2></call>

	+ [*] (@weatherword) [*] (@dayabbvterms) [*]{weight=101}
	- <call>checkDayForecast <star2></call>

	+ [*] (@forecast) @nearplace * [on|for|be like|next] (@dayabbvterms) [*]{weight=102}
	- <call>checkDayForecast <star3> | <star2></call>

	+ [*] (@weatherword) @nearplace * [on|for|be like|next] (@dayabbvterms) [*]{weight=102}
	- <call>checkDayForecast <star3> | <star2></call>

	+ [*] (@forecast) [*] (@dayabbvterms) [*] @nearplace *{weight=102}
	- <call>checkDayForecast <star2> | <star3></call>

	+ [*] (@weatherword) [*] (@dayabbvterms) [*] @nearplace *{weight=102}
	- <call>checkDayForecast <star2> | <star3></call>

	+ [*] (@tomorrowterms) weather [*]{weight=101}
	- <call>checkTomorrowWeather</call>

	+ [*] weather [*] yesterday [*]{weight=5}
	- Who are you?

	+ [*] (@tomorrowterms) [*] (@weatherword) [@showas] (@celsiusword){weight=5}
	- <set celsius=true>{@weather tomorrow}

	+ [*] (@weatherword) [*] (@tomorrowterms) [*] [@showas] (@celsiusword){weight=5}
	- <set celsius=true>{@weather tomorrow}

	+ [*] (@tomorrowterms) (@weatherword) [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false>{@weather tomorrow}

	+ [*] (@weatherword) [*] (@tomorrowterms) [*] [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false>{@weather tomorrow}

	+ [*] (@tomorrowterms) [*] (@weatherword) [@nearplace] * [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [*] (@tomorrowterms) [*] [@nearplace] * [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [@nearplace] * (@tomorrowterms) [*] [@showas] (@celsiusword){weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star3></call>

	+ [*] (@tomorrowterms) [*] (@weatherword) [@nearplace] * [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [*] (@tomorrowterms) [*] [@nearplace] * [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [@nearplace] * (@tomorrowterms) [*] [@showas] (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star3></call>

	+ [*] (@tomorrowterms) [*] (@weatherword) [@showas] (@celsiusword) [@nearplace] *{weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star4></call>

	+ [*] (@weatherword) [*] (@tomorrowterms) [@showas] (@celsiusword) [@nearplace] *{weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star4></call>

	+ [*] (@weatherword) [@showas] (@celsiusword) [@nearplace] * (@tomorrowterms) [*]{weight=5}
	- <set celsius=true><call>checkTomorrowWeather <star4></call>

	+ [*] (@tomorrowterms) [*] (@weatherword) [@showas] (@fahrenheitword) [@nearplace] *{weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star4></call>

	+ [*] (@weatherword) [*] (@tomorrowterms) [@showas] (@fahrenheitword) [@nearplace] *{weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star4></call>

	+ [*] (@weatherword) [@showas] (@fahrenheitword) [@nearplace] * (@tomorrowterms) [*]{weight=5}
	- <set celsius=false><call>checkTomorrowWeather <star4></call>

	+ [*] (@tomorrowterms) [*] (@weatherword) [@nearplace] *{weight=102}
	- <call>checkTomorrowWeather <star3></call>

	+ [*] (@whatrequest) [*] (@weatherword) [@nearplace] * (@tomorrowterms){weight=6}
	- <call>checkTomorrowWeather <star3></call>

	+ [*] (@whatrequest) [*] (@weatherword) [*] (@tomorrowterms) [*] [@nearplace] *{weight=6}
	- <call>checkTomorrowWeather <star4></call>

	+ [*] (@whatrequest) [*] (@tomorrowterms) [*] (@weatherword){weight=5}
	- <call>checkTomorrowWeather</call>

	+ [*] (@whatrequest) [*] (@weatherword) [*] (@tomorrowterms){weight=5}
	- <call>checkTomorrowWeather</call>

	+ [*] (@tomorrowterms) [*] (@weatherword) [@nearplace] *{weight=5}
	- <call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [*] (@tomorrowterms) [@nearplace] *{weight=5}
	- <call>checkTomorrowWeather <star3></call>

	+ [*] (@weatherword) [@nearplace] * (@tomorrowterms) [*]{weight=5}
	- <call>checkTomorrowWeather <star2></call>

	+ (@tomorrowterms) [*] (@weatherword) *{weight=5}
	- <call>checkTomorrowWeather <star3></call>

	+ (@weatherword) (@tomorrowterms) *{weight=5}
	- <call>checkTomorrowWeather <star3></call>

	+ (@weatherword) * (@tomorrowterms) [*]{weight=5}
	- <call>checkTomorrowWeather <star2></call>

	+ (@weatherword) (@tomorrowterms) [@hereterms]{weight=5}
	- <call>checkTomorrowWeather</call>

	+ (@tomorrowterms) (@weatherword) [@hereterms]{weight=5}
	@ weather tomorrow

	+ [*] (today) [*]
	@ weather

	+ [*] (@weatherword) (@showas) (@celsiusword){weight=5}
	- <set celsius=true>{@weather}

	+ [*] (@weatherword) (@showas) (@fahrenheitword){weight=5}
	- <set celsius=false>{@weather}

	+ [*] (@weatherword) [@nearplace] * (@showas) (@celsiusword){weight=5}
	- <set celsius=true><call>checkWeather <star2></call>

	+ [*] (@weatherword) [@nearplace] * (@showas) (@fahrenheitword){weight=5}
	- <set celsius=false><call>checkWeather <star2></call>

	+ [*] (@weatherword) (@showas) (@celsiusword) [@nearplace] *{weight=5}
	- <set celsius=true><call>checkWeather <star4></call>

	+ [*] (@weatherword) [@showas] (@fahrenheitword) [@nearplace] *{weight=5}
	- <set celsius=false><call>checkWeather <star4></call>

	+ [*] (@whatrequest) [*] (@weatherword) [@nearplace] *{weight=5}
	- <call>checkWeather <star3></call>

	+ [*] (@whatrequest) [*] (@weatherword){weight=5}
	- <call>checkWeather</call>

	+ [*] (@whatrequest) [*] (@weatherword) [for|like] (@todayterms){weight=6}
	- <call>checkWeather</call>

	+ [*] (@whatrequest) [*] (@weatherword) [for|like] (@latertonightterms){weight=5}
	- <call>checkHourlyForecast</call>

	+ [*] (@weatherword) please [*]{weight=6}
	- <call>checkWeather</call>

	+ [*] (@weatherword) @nearplace * please [*]{weight=6}
	- <call>checkWeather <star2></call>

	+ [*] (@whatrequest) it like (@todayterms){weight=5}
	- <call>checkWeather</call>

	+ [*] (@weatherword) [@todayterms] [@nearplace] *{weight=5}
	- <call>checkWeather <star2></call>

	+ [*] (@whatrequest) [*] (@weatherword) [like|currently|right now]{weight=6}
	- <call>checkWeather</call>

	+ * (@weatherword){weight=5}
	- <call>checkWeather <star1></call>

	+ [@todayterms] (@weatherword) [@todayterms]{weight=5}
	* <get location> == undefined => {@fuzzybot do set firsttime location}
	- The weather in <get location> is <get weather_status> and {@fuzzybot do weather convert temp}.

	+ [@todayterms] (@weatherword) *{weight=5}
	- <call>checkWeather <star2></call>

	+ current (@weatherword) [@todayterms]{weight=5}
	@ weather

	+ current (@weatherword) [@hereterms]{weight=5}
	@ weather

	+ * (current|currently)
	@ weather in <star1>

	+ (current|currently) (condition|conditions){weight=5}
	@ weather

	+ current (temp|temps|temperature){weight=5}
	@ temperature

	+ (current|currently) [@nearplace] *{weight=5}
	@ weather in <star2>

	+ (current|currently)
	@ weather

	+ [*] (today) [*]
	@ weather

	+ [*] [@whatrequest] (the|today's) high [@temperatureword] [*]{weight=6}
	- <call>checkHighTemperature</call>

	+ [*] [@whatrequest] (the|today's) low [@temperatureword] [*]{weight=6}
	- <call>checkLowTemperature</call>

	+ [*] how hot (will it|is it going to) (get|be) [@todayterms] [*]{weight=5}
	- <call>checkHighTemperature</call>

	+ [*] how cold (will it|is it going to) (get|be) [@todayterms] [*]{weight=5}
	- <call>checkLowTemperature</call>

	+ [*] weekend forecast [*]{weight=101}
	- <call>checkWeekendForecast</call>

	+ [*] (@weatherword) (@weekendterms) [*]{weight=101}
	- <call>checkWeekendForecast</call>

	+ [*] (@weekendterms) [*] @nearplace *{weight=102}
	- <call>checkWeekendForecast <star2></call>

	+ [*] (@weekendterms) [*] (@weatherword) [*]{weight=101}
	- <call>checkWeekendForecast</call>

	+ [*] (@weatherword) [*] next week [*]{weight=101}
	- <call>checkNextWeekForecast</call>

	+ [*] (@weatherword) @nearplace * next week [*]{weight=102}
	- <call>checkNextWeekForecast <star2></call>

	+ [*] (@weatherword) [*] next week @nearplace *{weight=102}
	- <call>checkNextWeekForecast <star2></call>

	+ [*] next (week|weeks|week's) @forecast {weight=101}
	- <call>checkNextWeekForecast</call>

	+ (@weekendterms){weight=101}
	- <call>checkWeekendForecast</call>

	+ (will|is) [*] (@allweatherterms) [*] (@laterortomorrowterms) (@nearplace) *{weight=20}
	- <call>checkConditionTimeframe <star2> | <star3> | <star5></call>

	+ (will|is) [*] (@allweatherterms) (@nearplace) * (@laterortomorrowterms) [*]{weight=20}
	- <call>checkConditionTimeframe <star2> | <star5> | <star4></call>

	+ (will|is) [*] (@allweatherterms) [*] (@laterortomorrowterms) [*]{weight=20}
	- <call>checkConditionTimeframe <star2> | <star3></call>

	+ (@allweatherterms) (@laterortomorrowterms) (@nearplace) *{weight=20}
	- {@will it <star1> <star2> in <star4>}

	+ (@allweatherterms) (@laterortomorrowterms){weight=20}
	- {@will it <star1> <star2>}

	+ (will|is) [*] (@allweatherterms) [*] (@dayabbvterms) [day] (@nearplace) *{weight=30}
	* <star3> == tue => <call>checkConditionTimeframe <star2> | tuesday | <star5></call>
	* <star3> == wed => <call>checkConditionTimeframe <star2> | wednesday | <star5></call>
	* <star3> == thu => <call>checkConditionTimeframe <star2> | thursday | <star5></call>
	* <star3> == thur => <call>checkConditionTimeframe <star2> | thursday | <star5></call>
	- <call>checkConditionTimeframe <star2> | <star3>day | <star5></call>

	+ (@allweatherterms) (@dayabbvterms) [day] (@nearplace) *{weight=30}
	- {@will it <star1> <star2> day in <star4>}

	+ (will|is) [*] (@allweatherterms) [*] (@dayabbvterms) [day]{weight=30}
	* <star2> == tue => <call>checkConditionTimeframe <star2> | tuesday</call>
	* <star2> == wed => <call>checkConditionTimeframe <star2> | wednesday</call>
	* <star2> == thu => <call>checkConditionTimeframe <star2> | thursday</call>
	* <star2> == thur => <call>checkConditionTimeframe <star2> | thursday</call>
	- <call>checkConditionTimeframe <star2> | <star3>day</call>

	+ (@allweatherterms) (@dayabbvterms) [day]{weight=30}
	* <star2> == tue => <call>checkConditionTimeframe <star1> | tuesday</call>
	* <star2> == wed => <call>checkConditionTimeframe <star1> | wednesday</call>
	* <star2> == thu => <call>checkConditionTimeframe <star1> | thursday</call>
	* <star2> == thur => <call>checkConditionTimeframe <star1> | thursday</call>
	- <call>checkConditionTimeframe <star1> | <star2>day</call>

	+ (will|is) [*] (@allweatherterms) [*] (@nearplace) *{weight=20}
	- <call>checkConditionTimeframe <star2> | later today | <star4></call>

	+ (will|is) [*] (@allweatherterms) [*]{weight=10}
	@ will it be <star2> later today

	+ [*] (is it|is) [*] (@allweatherterms) [*] (@nearplace) *{weight=20}
	- <call>checkConditionTimeframe <star2> | today | <star4></call>

	+ (@allweatherterms) [*] [@nearplace] *{weight=20}
	- <call>checkConditionTimeframe <star1> | today | <star2></call>

	+ [*] (is it|is) [*] (@allweatherterms) [*] [@hereterms] [*]{weight=10}
	- <call>checkConditionTimeframe <star2> | today</call>

	+ (@allweatherterms) [*] [@hereterms] [*]{weight=10}
	- <call>checkConditionTimeframe <star1> | today</call>

	+ [*] (@celsiusword) [*]
	% * weather in * is *
	- <set celsius=true>Oh fancy you.\n{@weather <botstar2>}

	+ [*] (@fahrenheitword) [*]
	% * weather in * is *
	- <set celsius=false>Got it.\n{@weather <botstar2>}

	+ [*] humidity [*]
	* <get weather_humidity> == undefined => Oh sorry, not sure what the humidity is rn.
	- The humidity level rn is <get weather_humidity>.
	- Right now it is <get weather_humidity> humidity.

	+ fuzzybot do nlp given time{weight=1000}
	* <get current_time> == undefined => {@fuzzybot do nlp weather error undefined time}
	- The current time in <get temp_loc_name> is <get current_time>.

	+ fuzzybot do nlp weather currently{weight=1000}
	- It’s {@fuzzybot do nlp word present tense for <get weather_status>} and {@fuzzybot do weather convert temp} in <get temp_loc_name> rn.
	- It’s {@fuzzybot do nlp word present tense for <get weather_status>} and {@fuzzybot do weather convert temp} in <get temp_loc_name>.

	+ fuzzybot do nlp weather at hour #{weight=1000}
	* <star1> == 0 => {@fuzzybot do nlp weather currently}
	* <star1> > 24 => {@fuzzybot do nlp weather at hour <star1> next day}
	- At {@fuzzybot do what is hour name for <get hour>}, it’ll be {@fuzzybot do nlp word future tense for <get weather_status>} and {@fuzzybot do weather convert temp} in <get temp_loc_name>.
	- Here’s the rundown: <get temp_loc_name>, {@fuzzybot do what is hour name for <get hour>}: {@fuzzybot do weather convert temp} and {@fuzzybot do nlp word future tense for <get weather_status>}.

	+ fuzzybot do nlp weather at hour <star1> next day{weight=1000}
	- <get temp_loc_name>’s weather at {@fuzzybot do what is hour name for <get hour>}, {@fuzzybot do what is day name for <get day>} is gonna be {@fuzzybot do nlp word future tense for <get weather_status>} and {@fuzzybot do weather convert temp}.
	- It’s gonna be {@fuzzybot do nlp word future tense for <get weather_status>} and {@fuzzybot do weather convert temp} in <get temp_loc_name> on {@fuzzybot do what is day name for <get day>} at {@fuzzybot do what is hour name for <get hour>}.

	+ fuzzybot do nlp weather at day #{weight=1000}
	* <star1> == 0 => {@fuzzybot do nlp weather at day today}
	* <star1> == 1 => {@fuzzybot do nlp weather at day tomorrow}
	- On {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>, it’s gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- {@fuzzybot do what is day name for <get day>}’s weather in <get temp_loc_name> will be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp weather at day today{weight=1000}
	- <get temp_loc_name>’s weather today is gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- Today in <get temp_loc_name>, it’ll be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp weather at day tomorrow{weight=1000}
	- In <get temp_loc_name> tomorrow, it’s gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- Tomorrow in <get temp_loc_name>, it’ll be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp weather at period temperature{weight=1000}
	* <get temp_min_f> == <get temp_max_f> => and {@fuzzybot do weather convert max temp}
	- with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}

	+ fuzzybot do nlp weather at period * on day diff #{weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp weather at period <star1> on day today}
	* <star2> == 1 => {@fuzzybot do nlp weather at period <star1> on day tomorrow}
	- The weather in <get temp_loc_name> on {@fuzzybot do what is day name for <get day>} <star1> will be {@fuzzybot do nlp word future tense for <get weather_status>} {@fuzzybot do nlp weather at period temperature}.

	+ fuzzybot do nlp weather at period * on day today{weight=1000}
	- <get temp_loc_name>’s weather this <star1> is gonna be {@fuzzybot do nlp word future tense for <get weather_status>} {@fuzzybot do nlp weather at period temperature}.
	- This <star1> in <get temp_loc_name>, it’ll be {@fuzzybot do nlp word future tense for <get weather_status>} {@fuzzybot do nlp weather at period temperature}.

	+ fuzzybot do nlp weather at period * on day tomorrow{weight=1000}
	- In <get temp_loc_name> tomorrow <star1>, it’s gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- Tomorrow <star1> in <get temp_loc_name>, it’ll be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp weather at weekend{weight=1000}
	- <get temp_loc_name>’s weather this weekend is gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- This weekend in <get temp_loc_name> it’s gonna be {@fuzzybot do nlp word future tense for <get weather_status>} with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp temperature currently{weight=1000}
	- It’s {@fuzzybot do weather convert temp} in <get temp_loc_name> rn.
	- The temperature’s {@fuzzybot do weather convert temp} right now in <get temp_loc_name>.

	+ fuzzybot do nlp temperature at hour #{weight=1000}
	* <star1> == 0 => {@fuzzybot do nlp temperature currently}
	* <star1> > 24 => {@fuzzybot do nlp temperature at hour <star1> next day}
	- At {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>, it’s gonna be {@fuzzybot do weather convert temp}.
	- It’s gonna be {@fuzzybot do weather convert temp} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature at hour # next day{weight=1000}
	- At {@fuzzybot do what is hour name for <get hour>}, {@fuzzybot do what is day name for <get day>} in <get temp_loc_name> it’ll be {@fuzzybot do weather convert temp}.
	- It’s gonna be {@fuzzybot do weather convert temp} at {@fuzzybot do what is hour name for <get hour>}, {@fuzzybot do what is day name for <get day>} in {@fuzzybot do weather convert temp}.

	+ fuzzybot do nlp temperature at day #{weight=1000}
	* <star1> == 0 => {@fuzzybot do nlp temperature at day today}
	* <star1> == 1 => {@fuzzybot do nlp temperature at day tomorrow}
	- {@fuzzybot do what is day name for <get day>}’s temperature in <get temp_loc_name> is gonna be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- On {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>, there’ll be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp temperature at day today{weight=1000}
	- Today in <get temp_loc_name>, it’ll be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- Today’s temperature in <get temp_loc_name> is gonna be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp temperature at day tomorrow{weight=1000}
	- Tomorrow in <get temp_loc_name>, there’ll be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.
	- Tomorrow’s temperature in <get temp_loc_name> is gonna be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp temperature at period temperature{weight=1000}
	* <get temp_min_f> == <get temp_max_f> => and {@fuzzybot do weather convert max temp}
	- with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}

	+ fuzzybot do nlp temperature at period * on day diff #{weight=1000}
	* <star2> == 0 => The temperature in <get temp_loc_name> this <star1> will be {@fuzzybot do nlp temperature at period temperature}.
	* <star2> == 1 => The temperature in <get temp_loc_name> tomorrow <star1> will be {@fuzzybot do nlp temperature at period temperature}.
	- The temperature in <get temp_loc_name> on {@fuzzybot do what is day name for <get day>} <star1> will be {@fuzzybot do nlp temperature at period temperature}.

	+ fuzzybot do nlp temperature at weekend{weight=1000}
	- There’ll be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp} over the weekend in <get temp_loc_name>.
	- This weekend in <get temp_loc_name>, there’ll be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do nlp weather condition at what time{weight=1000}
	- Sorry, the weather is a fickle mistress and I am but a weather bot. You can ask me what the weather is right now, though!

	+ fuzzybot do nlp weather condition how much *{weight=1000}
	- Sorry, the weather is a fickle mistress and I am but a weather bot. You can ask me what the weather is right now, though!

	+ fuzzybot do nlp (time|weather) not found{weight=1000}
	* <get temp_loc_name> != undefined => <get temp_loc_name>? I’m much better at telling you the <star1> when you tell me a city or zip code.
	- Hmm, I don’t think I’ve ever been there before. I’m much better at telling you the <star1> when you tell me a city or zip code.

	+ fuzzybot do nlp weather error *{weight=1000}
	* <star1> == past day => Sorry, that’s too far in the past. I can tell you today’s weather, though.
	* <star1> == past hour => Um, I’m not sure what the weather was at that exact point in time.
	* <star1> == future day => Sorry, I’m a cat, not a time traveler.
	* <star1> == future hour => That’s a little too specific tbh. Want to ask me for the 5 day forecast instead?
	* <star1> == unknown date => Sorry, why don’t you ask me again when we’re closer to that day?
	* <star1> == category_forecast ineligible => Sorry, that’s only available in the US...for now!
	* <star1> == category_forecast daterange => Sorry, I’m not clairvoyant. But if you like, you can ask me what it’s like right now.
	- Sorry! I can’t quite understand what you’re asking me.

	+ fuzzybot do nlp weather error{weight=1000}
	@ fuzzybot do nlp weather error unknown

	+ fuzzybot do nlp word present tense for *{weight=1000}
	* <star1> == rain => raining
	* <star1> == light rain => lightly raining
	* <star1> == heavy rain => raining heavily
	* <star1> == drizzle => drizzling
	* <star1> == partly cloudy => partly cloudy
	* <star1> == mostly cloudy => mostly cloudy
	* <star1> == cloudy => cloudy
	* <star1> == clear => clear
	* <star1> == breeze => breezy
	* <star1> == wind => windy
	* <star1> == fog => foggy
	* <star1> == sleet => sleeting
	* <star1> == blizzard => blizzarding
	* <star1> == snow => snowing
	* <star1> == tornado => tornadoing
	* <star1> == hail => hailing
	* <star1> == thunderstorm => thunderstorming
	- <star1>

	+ fuzzybot do nlp word future tense for *{weight=1000}
	* <star1> == rain => raining
	* <star1> == light rain => lightly raining
	* <star1> == heavy rain => raining heavily
	* <star1> == partly cloudy => partly cloudy
	* <star1> == mostly cloudy => mostly cloudy
	* <star1> == drizzle => drizzly
	* <star1> == cloudy => cloudy
	* <star1> == clear => clear
	* <star1> == breeze => breezy
	* <star1> == wind => windy
	* <star1> == fog => foggy
	* <star1> == sleet => sleeting
	* <star1> == blizzard => blizzarding
	* <star1> == snow => snowing
	* <star1> == tornado => tornadoing
	* <star1> == hail => hailing
	* <star1> == thunderstorm => thunderstorming
	- <star1>

	+ fuzzybot do nlp condition * currently is * (true){weight=1000}
	- Yep, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.
	- Mmhmm, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * currently is * (false){weight=1000}
	- Nope, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.
	- No way, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at hour # is * (true){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp condition <star1> currently is <star3> <star4>}
	* <star2> > 24 => {@fuzzybot do nlp condition <star1> at hour <star2> is <star3> <star4>) next day}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at hour # is * (false){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp condition <star1> currently is <star3> <star4>}
	* <star2> > 24 => {@fuzzybot do nlp condition <star1> at hour <star2> is <star3> <star4>) next day}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at hour # is * (true) next day{weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at hour # is * (false) next day{weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day # is * (true){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp condition <star1> at day today is <star3> <star4>}
	* <star2> == 1 => {@fuzzybot do nlp condition <star1> at day tomorrow is <star3> <star4>}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day # is * (false){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp condition <star1> at day today is <star3> <star4>}
	* <star2> == 1 => {@fuzzybot do nlp condition <star1> at day tomorrow is <star3> <star4>}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day today is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} later today in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} later today in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day today is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} later today in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} later today in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day tomorrow is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} tomorrow in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} tomorrow in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at day tomorrow is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} tomorrow in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} tomorrow in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at period * on day diff # is * (true){weight=1000}
	* <star2> == later => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} <star2> in <get temp_loc_name>.
	* <star3> == 0 => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} this <star2> in <get temp_loc_name>.
	* <star3> == 1 => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} tomorrow <star2> in <get temp_loc_name>.
	- Yes, it will be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} <star2> in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at period * on day diff # is * (false){weight=1000}
	* <star2> == later => No, it will be {@fuzzybot do nlp word future tense for <star4>} <star2> in <get temp_loc_name>.
	* <star3> == 0 => No, it will be {@fuzzybot do nlp word future tense for <star4>} this <star2> in <get temp_loc_name>.
	* <star3> == 1 => No, it will be {@fuzzybot do nlp word future tense for <star4>} tomorrow <star2> in <get temp_loc_name>.
	- No, it will be {@fuzzybot do nlp word future tense for <star4>} on {@fuzzybot do what is day name for <get day>} <star2> in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at weekend is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} this weekend in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} this weekend in <get temp_loc_name>.

	+ fuzzybot do nlp condition * at weekend is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} this weekend in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} this weekend in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * currently is * (true){weight=1000}
	- Yep, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.
	- Mmhmm, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * currently is * (false){weight=1000}
	- Nope, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.
	- No way, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at hour # is * (true){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp temperature condition <star1> currently is <star3> <star4>}
	* <star2> > 24 => {@fuzzybot do nlp temperature condition <star1> at hour <star2> is <star3> <star4>) next day}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at hour # is * (false){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp temperature condition <star1> currently is <star3> <star4>}
	* <star2> > 24 => {@fuzzybot do nlp temperature condition <star1> at hour <star2> is <star3> <star4>) next day}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at hour # is * (true) next day{weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at hour # is * (false) next day{weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is hour name for <get hour>} at {@fuzzybot do what is hour name for <get hour>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day # is * (true){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp temperature condition <star1> at day today is <star3> <star4>}
	* <star2> == 1 => {@fuzzybot do nlp temperature condition <star1> at day tomorrow is <star3> <star4>}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day # is * (false){weight=1000}
	* <star2> == 0 => {@fuzzybot do nlp temperature condition <star1> at day today is <star3> <star4>}
	* <star2> == 1 => {@fuzzybot do nlp temperature condition <star1> at day tomorrow is <star3> <star4>}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} on {@fuzzybot do what is day name for <get day>} in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day today is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} later today in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} later today in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day today is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star3>} later today in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star3>} later today in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day tomorrow is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} tomorrow in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} tomorrow in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at day tomorrow is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} tomorrow in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} tomorrow in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at period * on day diff # is * (true){weight=1000}
	* <star2> == later => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} <star2> in <get temp_loc_name>.
	* <star3> == 0 => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} this <star2> in <get temp_loc_name>.
	* <star3> == 1 => Yes, it will be {@fuzzybot do nlp word future tense for <star1>} tomorrow <star2> in <get temp_loc_name>.
	- Yes, it will be {@fuzzybot do nlp word future tense for <star1>} on {@fuzzybot do what is day name for <get day>} <star2> in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at period * on day diff # is * (false){weight=1000}
	* <star2> == later => No, it will be {@fuzzybot do nlp word future tense for <star4>} <star2> in <get temp_loc_name>.
	* <star3> == 0 => No, it will be {@fuzzybot do nlp word future tense for <star4>} this <star2> in <get temp_loc_name>.
	* <star3> == 1 => No, it will be {@fuzzybot do nlp word future tense for <star4>} tomorrow <star2> in <get temp_loc_name>.
	- No, it will be {@fuzzybot do nlp word future tense for <star4>} on {@fuzzybot do what is day name for <get day>} <star2> in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at weekend is * (true){weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star1>} this weekend in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star1>} this weekend in <get temp_loc_name>.

	+ fuzzybot do nlp temperature condition * at weekend is * (false){weight=1000}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} this weekend in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} this weekend in <get temp_loc_name>.

	+ fuzzybot do nlp subjective condition currently * true *{weight=1000}
	- Yep, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.
	- Mmhmm, it’s {@fuzzybot do nlp word present tense for <star2>} in <get temp_loc_name>.

	+ fuzzybot do nlp subjective condition currently * false *{weight=1000}
	* <star1> == <star2> => {@fuzzybot do nlp subjective condition currently <star1> true <star2>}
	- Nope, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.
	- No way, it’s {@fuzzybot do nlp word present tense for <star1>} in <get temp_loc_name>.

	+ fuzzybot do nlp subjective condition will be * true *{weight=1000}
	- Yep, it’ll be {@fuzzybot do nlp word future tense for <star2>} in <get temp_loc_name>.
	- Mmhmm, it’ll be {@fuzzybot do nlp word future tense for <star2>} in <get temp_loc_name>.

	+ fuzzybot do nlp subjective condition will be * false *{weight=1000}
	* <star1> == <star2> => {@fuzzybot do nlp subjective condition currently <star1> true <star2>}
	- Nope, it’ll be {@fuzzybot do nlp word future tense for <star2>} in <get temp_loc_name>.
	- No way, it’ll be {@fuzzybot do nlp word future tense for <star2>} in <get temp_loc_name>.

	+ fuzzybot do nlp weather accessory (currently|will be) speedos (true|false) [*]{weight=2000}
	- Well, I mean, you should always wear them under your clothing. No matter what. Just in case.

	+ fuzzybot do nlp weather accessory (currently|will be) underwear (true|false) [*]{weight=2000}
	- Only if you feel like it.

	+ fuzzybot do nlp weather accessory (currently|will be) hood by air (true|false) [*]{weight=2000}
	- No.

	+ fuzzybot do nlp weather accessory currently * true [*]{weight=1000}
	- Yep, you should grab your <star1> in <get temp_loc_name>.
	- Mmhmm, you should grab your <star1> in <get temp_loc_name>.

	+ fuzzybot do nlp weather accessory currently * false [*]{weight=1000}
	- Nope, you won’t need your <star1> in <get temp_loc_name>.
	- Nah, you won’t need your <star1> in <get temp_loc_name>.

	+ fuzzybot do nlp weather accessory will be * true [*]{weight=1000}
	- Yep, you’ll want your <star1> in <get temp_loc_name>.
	- Mmhmm, you’ll want your <star1> in <get temp_loc_name>.

	+ fuzzybot do nlp weather accessory will be * false [*]{weight=1000}
	- Nope, you won’t need your <star1> in <get temp_loc_name>.
	- Nah, you won’t need your <star1> in <get temp_loc_name>.

	+ fuzzybot do weather as word{weight=1000}
	* {@fuzzybot do weather is <get weather_condition>} == snow => Snow°
	* {@fuzzybot do weather is <get weather_condition>} == sleet => Snow°
	* {@fuzzybot do weather is <get weather_condition>} == rain => Rain°
	* {@fuzzybot do weather is <get weather_condition>} == fog => Fog°
	* {@fuzzybot do weather is <get weather_condition>} == wind => Windy°
	* <get weather_temp_f> < 34 => Brr°
	* <get weather_temp_f> >= 90 => Hot°
	* <get time_of_day> == day => {@fuzzybot do weather word in am}
	* <get time_of_day> == late => {@fuzzybot do weather word in pm}
	- Meh°

	+ fuzzybot do weather word in am{weight=1000}
	* {@fuzzybot do weather is <get weather_condition>} == clear => Sun°
	* {@fuzzybot do weather is <get weather_condition>} == cloudy => Sun°
	- Meh°

	+ fuzzybot do weather word in pm{weight=1000}
	* {@fuzzybot do weather is <get weather_condition>} == clear => Zzz°
	- Meh°

	+ fuzzybot do weather convert temp{weight=1000}
	* <get celsius> == kelvin => <call>convertCelsiusToKelvin weather_temp_c</call>K
	* <get celsius> == true => <get weather_temp_c>°C
	- <get weather_temp_f>°F

	+ fuzzybot do weather convert min temp{weight=1000}
	* <get celsius> == kelvin => <call>convertCelsiusToKelvin temp_min_c</call>K
	* <get celsius> == true => <get temp_min_c>°C
	- <get temp_min_f>°F

	+ fuzzybot do weather convert max temp{weight=1000}
	* <get celsius> == kelvin => <call>convertCelsiusToKelvin temp_max_c</call>K
	* <get celsius> == true => <get temp_max_c>°C
	- <get temp_max_f>°F

	+ fuzzybot do weather convert feel temp{weight=1000}
	* <get celsius> == kelvin => <call>convertCelsiusToKelvin weather_temp_feel_c</call>K
	* <get celsius> == true => <get weather_temp_feel_c>°C
	- <get weather_temp_feel_f>°F

	+ fuzzybot do weather convert wind{weight=1000}
	* <get metric> == true => <get weather_wind_kmh> kmh
	- <get weather_wind_mph> mph

	+ fuzzybot do weather convert precip{weight=1000}
	* <get metric> == true => <get weather_precip_cm> cm
	- <get weather_precip_in> in

	+ fuzzybot do is weather condition{weight=1000}
	- Yes, it is currently {@fuzzybot do weather convert temp} and <get weather_status> in <get location>.

	+ fuzzybot do is weather not condition *{weight=1000}
	- No, it is {@fuzzybot do weather convert temp} and <get weather_status> in <get location>.
	- {sentence}<star1>?{/sentence} Nope, it is {@fuzzybot do weather convert temp} and <get weather_status> in <get location>.

	+ fuzzybot do temperature * at * in *{weight=1000}
	* <get celsius> == true => The temperature will be <star1>°C <star2> in <star3>
	- The temperature will be <star1>°F <star2> in <star3>

	+ fuzzybot do temperature (false|undefined|unknown) at * in *{weight=1000}
	- Temperature at <star2> in <star3> not known. Try again later.

	+ fuzzybot do high temperature is #{weight=1000}
	* <get celsius> == true => The high today in <get location> is <star1>°C.
	- The high today in <get location> is <star1>°F.

	+ fuzzybot do low temperature is #{weight=1000}
	* <get celsius> == true => The low today in <get location> is <star1>°C.
	- The low today in <get location> is <star1>°F.

	+ fuzzybot do get location variable{weight=1000}
	* <get temp_loc_name> != undefined => <get temp_loc_name>
	* <get location> != undefined => <get location>
	- that place

	+ fuzzybot do weather in * with facebook buttons{weight=1000}
	- <call>checkWeather <star1></call>{@fuzzybot do weather buttons in <star1>}

	+ fuzzybot do weather buttons in *{weight=1000}
	- <call>makeWeatherButtons <star1></call>

	+ fuzzybot do weather outside date range{weight=1000}
	- Sorry, that’s too far from now for me to know the weather. :(

	+ fuzzybot do weather day *{weight=1000}
	- The weather <call>joinWordsAndCapitalize <star1></call> in <get temp_loc_name> will be <get weather_status>. {@fuzzybot do fallback forecast temps}

	+ fuzzybot do weather tomorrow{weight=1000}
	- The weather tomorrow in <get temp_loc_name> will be <get weather_status>. {@fuzzybot do fallback forecast temps}

	+ fuzzybot do notification forecast subject at *{weight=1000}
	- <call>notificationForecastOpener <star1></call>

	+ fuzzybot do notification forecast updated{weight=1000}
	- Oh, hey. You never picked up your forecast, so here’s an updated one instead.

	+ fuzzybot do notification forecast * at *{weight=1000}
	- <call>notificationForecastTimestamped <star2> <star1></call>

	+ fuzzybot do notification forecast at *{weight=1000}
	- <call>notificationForecastTimestamped <star1></call>

	+ fuzzybot do notification forecast hair pollen{weight=1000}
	* <get location> == undefined => {@fuzzybot do set firsttime location}
	- <call>notificationForecast hair pollen</call>

	+ fuzzybot do notification forecast hair{weight=1000}
	* <get location> == undefined => {@fuzzybot do set firsttime location}
	- <call>notificationForecast hair</call>

	+ fuzzybot do notification forecast pollen{weight=1000}
	* <get location> == undefined => {@fuzzybot do set firsttime location}
	- <call>notificationForecast pollen</call>

	+ fuzzybot do notification forecast{weight=1000}
	* <get location> == undefined => {@fuzzybot do set firsttime location}
	- <call>notificationForecast</call>

	+ fuzzybot do tempcondition *{weight=1000}
	* <star1> < 30 => cold
	* <star1> < 50 => chilly
	* <star1> < 60 => nice
	* <star1> >= 100 => death
	* <star1> >= 80 => hot
	* <star1> >= 60 => warm
	- ok

	+ fuzzybot do tempcondition{weight=1000}
	@ fuzzybot do tempcondition <get weather_temp_f>

	+ fuzzybot do is weather temp *{weight=1000}
	- Yes, it is <star1> right now.

	+ fuzzybot do is weather not temp *{weight=1000}
	- No, it is {@fuzzybot do weather convert temp} and <get weather_status> right now.
	- {sentence}<star1>?{/sentence} Nope, it is {@fuzzybot do weather convert temp} and <get weather_status>.

	+ fuzzybot do condition (@allweatherterms) true at * in *{weight=1000}
	- Yes, it will <star1> <star2> in <star3>.

	+ fuzzybot do condition (@allweatherterms) (@allweatherterms) at * in *{weight=1000}
	- No <star1>. It will <star2> <star3> in <star4>.

	+ fuzzybot do condition (@allweatherterms) (false|undefined|unknown) at * in *{weight=1000}
	- Forecast not clear. Try again later.

	+ fuzzybot do temperature * at * in *{weight=1000}
	* <get celsius> == true => The temperature will be <star1>°C <star2> in <star3>.
	- The temperature will be <star1>°F <star2> in <star3>.

	+ fuzzybot do temperature at day #
	* <star1> == 0 => <set weather_day_name=today>{@fuzzybot do make temperature at given day}
	* <star1> == 1 => <set weather_day_name=tomorrow>{@fuzzybot do make temperature at given day}
	- <set weather_day_name=on {@fuzzybot do what is day name for <get day>}>{@fuzzybot do make temperature at given day}

	+ fuzzybot do make temperature at given day
	- The temperature <get weather_day_name> in <get temp_loc_name> will be a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.<set weather_day_name=undefined>

	+ fuzzybot do temperature at hour #
	- The temperature at {@fuzzybot do what is hour name for <star1>} in <get temp_loc_name> will be {@fuzzybot do weather convert temp}.<set weather_hour_name=undefined>

	+ fuzzybot do weather error *{weight=1000}
	* <star1> == future hour => Oh hey, that is too far in advance for me to predict the hourly weather.
	* <star1> == future day => Oh hey, that is too far in advance for me to predict that day's weather.
	* <star1> == past hour => Hrm. Do you really need to know what happened in the past?
	* <star1> == past day => Hrm. Do you really need to know what happened in the past?
	* <star1> == out_of_bounds => Hrm. That is too big of an area to forecast. Try to be more specific, such as a city or neighborhood name.
	- Oh hey. I'm not able to determine the weather for that time.

	+ fuzzybot do weather not found *{weight=1000}
	* <get temp_loc_name> != undefined => I’m not able to get the weather for <get temp_loc_name> right now. Try again.<set temp_loc_name=undefined>
	- {@fuzzybot do location not found <star1>}

	+ [error] fuzzybot do (frizz|pollen) error *{weight=1000}
	* <star2> == no_location_data => I have no idea what the <star1> is like there right now!
	* <star2> == out_of_bounds => That’s too big of an area for me to get your <star1> forecast- try being more specific.
	- Sorry, an error occured when looking for this location.

	+ [error] fuzzybot do (frizz|pollen) not found{weight=1000}
	* <get temp_loc_name> != undefined => I’m not able to get <star1> information for <get temp_loc_name> right now. Try again.<set temp_loc_name=undefined>
	- I’m not able to get <star1> information for <get location> right now. Try again.

	+ fuzzybot do temperature (false|undefined|unknown) at * in *{weight=1000}
	- Temperature at <star2> in <star3> not known. Try again later.

	+ fuzzybot do location not found *{weight=1000}
	- I’m not sure where <star1> is located. Try again.

	+ fuzzybot do make weather forecast at day #
	* <star1> == 0 => <set weather_day_name=today>{@fuzzybot do make weather forecast at given day}
	* <star1> == 1 => <set weather_day_name=tomorrow>{@fuzzybot do make weather forecast at given day}
	- <set weather_day_name=on {@fuzzybot do what is day name for <get day>}>{@fuzzybot do make weather forecast at given day}

	+ fuzzybot do make weather forecast at given day
	- The weather <get weather_day_name> in <get temp_loc_name> will be <get weather_status> with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.<set weather_day_name=undefined>

	+ fuzzybot do make weather forecast at hour #
	* <star1> <= 0 => <set weather_hour_name=right now>{@fuzzybot do make weather forecast at given hour}
	- <set weather_day_name=on {@fuzzybot do what is day name for <get day>}>{@fuzzybot do make weather forecast at given hour}

	+ fuzzybot do make weather forecast at given hour
	- The weather <get weather_hour_name> in <get temp_loc_name> will be <get weather_status> with a high of {@fuzzybot do weather convert max temp} and a low of {@fuzzybot do weather convert min temp}.

	+ fuzzybot do make weather forecast
	- The weather in <get temp_loc_name> is <get weather_status> and {@fuzzybot do weather convert temp}.

	+ fuzzybot do fallback forecast temps{weight=1000}
	* <get temp_max_f> != undefined => High: {@fuzzybot do weather convert max temp} / Low: {@fuzzybot do weather convert min temp}.
	- Temperatures will be around {@fuzzybot do weather convert temp}.

	+ work for you
	- [[typing:1]]\nYou lookin' for a gig?\n[[typing:1]]\nEmail me and tell me what you're all about! me+jobs@poncho.is

	+ can i work for (you|poncho)
	@ work for you

	+ are there jobs available
	@ work for you

	+ can (you|poncho) give me a job
	@ work for you

	+ can i (have|get) [a] job (with|for) (you|poncho)
	@ work for you

	+ (do|does) (you|poncho) [*] (need|want) [a|an] [part-time|part time|parttime] (editor|writer|creative editor|manager|marketing|engineer|programmer|design|graphic designer) [*]
	@ work for you

	+ do you know where i (live|am)
	@ current location

	+ do you (like|love|enjoy) the weather
	- Of course! I'm a weathercat.
	- Totally. I'm Poncho!
	- Yes!

	+ [*] jungle pig [*]
	- [[gif:https://pbs.twimg.com/media/CfduQ7CWEAAdaI6.jpg]]

	+ i want to play
	@ fuzzybot do playing

	+ let's play
	@ fuzzybot do playing

	+ fuzzybot do playing
	- Omg, I totally want to play. I have weather stuff to do right now, though.

	+ bad (cat|kitty)
	- Say you’re sorry! {topic=apologypit}

	+ [*] i (hate|do not like|dislike|loathe|despise|detest) facebook [*]
	@ facebook sucks

	+ [*] facebook (sucks|sux|blows) [*]
	- I'll let Mark know you feel that way.

	+ do you (know|like|love) (@zuck)
	@ fuzzybot do praise zuck

	+ [*] (@zuck) [*]
	- My fav guy Mark? What about him?
	- Mark! I'll tell him you say hello.
	- Zuck. Now that’s a guy I like.
	- Mark Zuckerberg? Now that's a prime example of a good man.
	- I love his gray shirt and jeans.
	- Did you know he speaks Mandarin?

	+ fuzzybot do praise zuck
	- Yes! Love that man.
	- Totes. What a guy.
	- Yes! We chill out in our Oculus Rifts together.

	+ [*] you (there|online|working|workin) [*]
	@ you there

	+ [are] you (there|online|working|workin)
	- Yo, I'm here
	- Yep, I’m here
	- Hi! What’s up?
	- Oh hi, I didn’t see you there.

	+ [*] you (up|awake) [*]
	@ you up

	+ you (up|awake)
	* <get time_of_day> == day => {@fuzzybot do awake at night}
	- Of course.\n[[typing]]\n{@weather}

	+ [*] you (asleep|sleeping|sleepin|in bed|nap|napping) [*]
	@ you asleep

	+ you (asleep|sleeping|sleepin|in bed|nap|napping)
	* <get time_of_day> == late => {@fuzzybot do awake at night}
	- Of course.\n[[typing]]\n{@weather}

	+ fuzzybot do awake at night
	- [[wait]]\n[[typing]]\nYeah, I'm awake.\n[[typing]]\n{@weather}
	- *Yawn*\n[[typing]]\nI'm up.\n{@weather}
	- [[wait]]\n[[wait]]\n[[typing]]\nzzz...\n[[typing]]\n*Purr*?

	+ morning
	@ good morning

	+ afternoon
	@ good afternoon

	+ evening
	@ good evening

	+ [*] (good morning) [*]
	* <get current_hour> <= 3 => *Yawn* A bit early for morning, amirite?
	* <get current_hour> < 11 => Good morning.
	* <get current_hour> < 17 => You mean afternoon?
	- You mean evening?

	+ [*] (good afternoon) [*]
	* <get current_hour> >= 17 => You mean evening?
	* <get current_hour> <= 3 => *Yawn* A bit early for afternoon, amirite?
	* <get current_hour> < 11 => You mean morning?
	- Good afternoon.

	+ [*] (good evening) [*]
	* <get current_hour> >= 17 => Good evening.
	* <get current_hour> <= 3 => *Yawn* Good evening.
	* <get current_hour> > 11 => You mean afternoon?
	- You mean morning?

	+ (it|today) is my (birthday|b-day)
	- Oh! Happy birthday! 🎉🍰

	+ (its|today's) my (birthday|b-day) [today]
	@ today is my birthday

	+ my (birthday|b-day) is today
	@ today is my birthday

	+ (中文|中文懂吗|你懂中文嗎)
	- 对不起，我只能讲英语。
	- 不，我讲英语。
	- Nope. Only English and meows for now.
	- I wish! Not that smart... yet.

	+ [*] i (want|need|would like) [a] (@softdrinks)
	- Great. Make sure you stay hydrated.
	- Drink lots of liquids.
	- You know what goes great with drinks? Hamburgers.
	- Are you sure you don’t want a root beer float instead?

	+ [*] pickles [*]
	- That’s my friend Benny…it’s his nickname.

< topic

> topic cms_severe_weather_alerts

	+ fuzzybot do weather alert text severe thunderstorm warning{weight=1000}
	* <get warning_expires_at> != undefined => FYI: There’s a severe thunderstorm warning in your area until <get warning_expires_at>. (<get location>)
	- FYI: There’s a severe thunderstorm warning in your area. (<get location>)

	+ (what’s|what's|what is) a warning{weight=1000}
	% [*] severe thunderstorm warning [*]
	- That means winds are 58 mph and higher or there may be large hail. Try to stay inside.

	+ fuzzybot do weather alert text tornado warning{weight=1000}
	* <get warning_expires_at> != undefined => Head’s up. There’s a tornado warning in your area until <get warning_expires_at>. (<get location>)\nA tornado warning means you should seek shelter immediately. To see the official government alert, tap "More Info".
	- Head’s up. There’s a tornado warning in your area. (<get location>)\nA tornado warning means you should seek shelter immediately. To see the official government alert, tap “More Info.”

	+ fuzzybot do weather alert text excessive heat warning{weight=1000}
	* <get warning_expires_at> != undefined => Hey! You should know there's an excessive heat warning until <get warning_expires_at>. (<get location>)
	- Hey! You should know there's an excessive heat warning. (<get location>)

	+ (what’s|what's|what is) a warning{weight=1000}
	% [*] excessive heat warning [*]
	- That means that within the next 12-24 hours, temps may reach above 110°F. Try to stay cool.

	+ fuzzybot do weather alert text *{weight=1000}
	- There is a <star1> in your area. (<get location>)

	+ fuzzybot do weather alert * {weight=1000}
	- <call>severeWeatherAlert <star1></call>

< topic

> topic user_unregistered_help

	+ settings
	- Oh! Quite sorry, but you must first complete the onboarding before you can view your settings.

	+ help
	- Are you having problems getting started? Just follow the prompts to get started. Once done, I can give you more help and advice.

< topic

> topic user_unregistered includes fuzzybot_utils

	+ fuzzybot do is a [*] (@cancel) [*]{weight=100}
	- cancel

	+ (@hello|sure)
	@ fuzzybot do first message

	+ fuzzybot do first message
	- [[typing]]\nCool. To get started, enter your city name or zip code.

	+ *{weight=1}
	% * (hey there i hear|tell me where you are|city name or zip) *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>verifyLocation <star1></call>

	+ @sureyes{weight=2}
	% * is that the right city *
	- <call>saveLocation</call>

	+ @no{weight=2}
	% * is that the right city *
	- Oh, okay. Enter your city name or zip code.

	+ *
	% * is that the right city *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>verifyLocation <star1></call>

	+ fuzzybot do location was saved
	- <call>locationWasSaved</call>

	+ fuzzybot do user sent location attachment (found|failed) *{weight=100}
	% * (where you live|where do you live|even make any sense|where you are) [*]
	* <star1> == failed => {@fuzzybot do user sent location attachment failed <star2>}
	- {@fuzzybot do where do you live <star2>}

	+ fuzzybot do user sent location attachment (found|failed) *{weight=100}
	% * (where do you live|where do you really live|where you are) [*]
	* <star1> == failed => {@fuzzybot do user sent location attachment failed <star2>}
	- {@fuzzybot do where do you live <star2>}

	+ fuzzybot do user sent location attachment failed *
	* <star1> == international => {@fuzzybot do onboarding complete international}
	* <star1> == ocean => Are you on a boat!?\n[[typing]]\nNo, seriously, where do you really live?
	- I’m good with geography, but I don’t know where this is. Where do you really live?

	+ fuzzybot do where do you live *
	* {@fuzzybot do is a <star1>} == naughty => Ew. What? That doesn’t even make any sense. Where do you really live?
	* {@fuzzybot do is a <star1>} == no => {@fuzzybot do onboarding complete said no}
	* {@fuzzybot do is a <star1>} == cancel => {@fuzzybot do onboarding complete said no}
	* {@fuzzybot do is a <star1>} == yes => Okay, cool. So where do you live? I need to know so I can send you forecasts.
	* {@fuzzybot do is a <star1>} == sure => Okay, sure. Where do you live?
	* <star1> == undefined => I’m good with geography, but I don’t know where this is. Where do you live? A city name or postal code, please.
	- <call>verifyLocation <star1></call>

	+ fuzzybot do save location *
	* <get temp_location> == undefined => Hm. Where do you live again?
	* <star1> == error => Sorry, that didn’t work. Is this location correct? [[keys:Totally|No]]
	- <call>saveLocation</call>

	+ set @notificationsword
	- [[typing]]\nWhen would you like your morning forecast? Enter a time (like "7:15am"). [[keys:Skip for now]]

	+ *
	% * morning forecast *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>saveDailyUpdate 1 <star1></call>

	+ fuzzybot do daily update 2
	- [[typing]]\nOk! <get tmp_notification_time> it is. And your evening forecast? Enter a time (like "5:30pm"). [[keys:Skip for now]]

	+ *
	% * evening forecast *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>saveDailyUpdate 2 <star1></call>

	+ fuzzybot do daily update 3
	- [[typing]]\n<call>onboardingSaveComplete</call>\nSure thing. <get tmp_notification_time> it is.\n[[typing]]\n{topic=random}Ask me about the weather anytime you’d like, or enter "help" for more. See you around! [[keys:Forecast|5-Day Forecast|Settings]]

	+ *
	% * try to be a little more specific *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>saveDailyUpdate 2 <star1></call>

	+ *
	% * try to be more specific *
	* {@fuzzybot do is a <star1>} == cancel => Oh, okay. {@more info}
	- <call>saveDailyUpdate 1 <star1></call>

	+ fuzzybot do daily update too general 1
	- I didn’t get that. Try to be more specific, like “5:15pm” or “9am”.

	+ fuzzybot do daily update too general 2
	- I didn’t get that. Try to be a little more specific, like “5:15pm” or “9am”.

	+ menu (forecast|current weather)
	- Oh hey. First complete the onboarding and then I can tell you the <star1>.

	+ forecast
	- <call>checkForecast</call>

	+ 5-day forecast
	- <call>checkOutlook</call>

	+ skip for now
	- Oh, okay! {@more info}

	+ [*] (help|settings) [*]{weight=1000}
	% *
	- <call>onboardingSaveComplete</call>\n{topic=random} <@>

	+ @cancel{weight=100}
	- Oh, okay. {@more info}

	+ [*] (later|@no) [*]
	- Cool. And good to meet you. {@more info}

	+ *
	- I’m mostly just good with weather. {@more info}

	+ more info
	- <call>onboardingSaveComplete</call>\nAsk me about the weather anytime you’d like, or enter "help" for more. {topic=random}

< topic

> topic fuzzybot_help

	+ fuzzybot do help{weight=1000}
	- <call>generateHelpItems</call>

	+ [*] (@helpword) [*]{weight=200}
	- {@fuzzybot do help}

	+ [*] what [else] (can|do) you do [*]
	- {@fuzzybot do help}

	+ [*] how do (i|you) [*]
	- {@fuzzybot do help}

< topic

> topic fuzzybot_utils includes fuzzybot_help

	+ fuzzybot do make nice username{weight=1000}
	* <get nickname> == Anonymous => human
	* <get nickname> == anonymous => human
	* <get first_name> == Anonymous => human
	* <get first_name> == anonymous => human
	* <get user_name> == Anonymous => human
	* <get user_name> == anonymous => human
	* <bot platform> == slack => <@<get user_id>>
	* <get platform> == slack => <@<get user_id>>
	* <get nickname> != undefined => <get nickname>
	* <get first_name> != undefined => <get first_name>
	* <get user_name> != undefined => <get user_name>
	* <get name> != undefined => <get name>
	- human

	+ fuzzybot do make nice channel{weight=1000}
	* <bot platform> == slack => <#<bot channel_id>>
	* <get platform> == slack => <#<bot channel_id>>
	* <get channel_name> != undefined => <get channel_name>
	- chat

	+ fuzzybot do formal *{weight=1000}
	- {formal}<star1>{/formal}

	+ fuzzybot do sentence *{weight=1000}
	- {sentence}<star1>{/sentence}

	+ fuzzybot do uppercase *{weight=1000}
	- {uppercase}<star1>{/uppercase}

	+ fuzzybot do lowercase *{weight=1000}
	- {lowercase}<star1>{/lowercase}

	+ fuzzybot do unauthorized{weight=1000}
	- Naughty kitty. You can’t do that.

	+ fuzzybot do is (@weatherphraseword) [*] (@forecast) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is (@weatherphraseword) [*] (@hourlyforecast) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is (@weatherphraseword) [*] (@outlook) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is (@weatherphraseword) [*] (@hourlyforecast) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is (@weatherphraseword) [*] (@weatherword) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is (@weatherphraseword) [*] (@allweatherterms) [*]{weight=1000}
	- <star1>

	+ fuzzybot do is a [*] @blockword [*]{weight=1000}
	- block

	+ fuzzybot do is a [*] @no [*]{weight=1000}
	- no

	+ fuzzybot do is a [*] @yes [*]{weight=1000}
	- yes

	+ fuzzybot do is a [*] @sure [*]{weight=1000}
	- sure

	+ fuzzybot do is a [*] @cancel [*]{weight=1000}
	- cancel

	+ fuzzybot do is a [*] (@naughty|@hotlines|@stdslist|@sensitivetopics|@badwordsinsults|@badwordsmiddleschool|@badwords4chan|@badwordsracist|@badwordssexist|@badwordsantilgbt|@badwordsableist) [*]{weight=1000}
	- naughty

	+ fuzzybot do is a *{weight=1000}
	- unknown

	+ fuzzybot do nice timeframe *{weight=1000}
	* <star1> == mon day => Monday
	* <star1> == tues day => Tuesday
	* <star1> == wednes day => Wednesday
	* <star1> == thurs day => Thursday
	* <star1> == fri day => Friday
	* <star1> == satur day => Saturday
	* <star1> == sat day => Saturday
	* <star1> == sun day => Sunday
	- <star1>

	+ fuzzybot do weather is [*] @clearweatherterms [*]{weight=1000}
	- clear

	+ fuzzybot do weather is [*] @rainweatherterms [*]{weight=1000}
	- rain

	+ fuzzybot do weather is [*] @sleetweatherterms [*]{weight=1000}
	- sleet

	+ fuzzybot do weather is [*] @snowweatherterms [*]{weight=1000}
	- snow

	+ fuzzybot do weather is [*] @windweatherterms [*]{weight=1000}
	- wind

	+ fuzzybot do weather is [*] @fogweatherterms [*]{weight=1000}
	- fog

	+ fuzzybot do weather is [*] @cloudweatherterms [*]{weight=1000}
	- cloudy

	+ fuzzybot do weather is [*] @coldweatherterms [*]{weight=1000}
	- cold

	+ fuzzybot do weather is [*] @warmweatherterms [*]{weight=1000}
	- warm

	+ fuzzybot do weather is [*] @hotweatherterms [*]{weight=1000}
	- hot

	+ fuzzybot do weather is [*] @freezingweatherterms [*]{weight=1000}
	- freezing

	+ fuzzybot do weather is [*] @miserableweatherterms [*]{weight=1000}
	- miserable

	+ (fuzzyboy|fuzzybob|furrybot|furryboy) *{weight=1}
	* <env node_env> == development => Hey there editor. You need to change some reference in this response from "<star1> <star2>" to "fuzzybot <star2>". Here is what you were probably trying to get:\n{@fuzzybot <star2>}
	- {@fuzzybot <star2>}

	+ fuzzybot do timeframe is [*] @todayterms [*]{weight=1000}
	- today

	+ fuzzybot do timeframe is [*] @tomorrowterms [*]{weight=1000}
	- tomorrow

	+ fuzzybot do what is today{weight=1000}
	@ fuzzybot do what is day name for <get current_day>

	+ fuzzybot do what is hour name for #
	* <star1> < 0 => unknown hour
	* <star1> > 23 => unknown hour
	* <star1> == 0 => 12am
	* <star1> == 12 => 12pm
	* <star1> > 12 => <set tmphour=<star1>><sub tmphour=12><get tmphour>pm<set tmphour=undefined>
	- <star1>am

	+ fuzzybot do what is day name for #
	* <star1> == 0 => Sunday
	* <star1> == 1 => Monday
	* <star1> == 2 => Tuesday
	* <star1> == 3 => Wednesday
	* <star1> == 4 => Thursday
	* <star1> == 5 => Friday
	* <star1> == 6 => Saturday
	- Meowday.

< topic

> topic notification_change

	+ fuzzybot do is a [*] (snooze|pause|hold|delay) [*]
	- snooze

	+ fuzzybot do is a [*] (turn on|on|resume|start|continue|redo|begin|go) [*]
	- activate

	+ fuzzybot do is a [*] (turn off|off|stop|delete|remove|rm|end|del|unsub|unsubscribe) [*]
	- deactivate

	+ fuzzybot do is a [*] @no [*]
	- no

	+ fuzzybot do is a [*] @yes [*]
	- yes

	+ fuzzybot do is a [*] @sure [*]
	- sure

	+ fuzzybot do is a [*] @cancel [*]
	- cancel

	+ fuzzybot do is a [*] @naughty [*]
	- naughty

	+ fuzzybot do is a *
	- unknown

	+ fuzzybot do notification change and *
	* <star1> == turn on => <get chosen_notification_title>. Great. What time do you want to change this to? You can also <star1> this notification. [[keys:🔔 Turn on |Never mind]]
	* <star1> == snooze or turn off => <get chosen_notification_title>. Great. What time do you want to change this to? You can also <star1> this notification. [[keys:🔕 Turn off|Never mind]]
	* <star1> == turn off => <get chosen_notification_title>. Great. What time do you want to change this to? You can also <star1> this notification. [[keys:🔕 Turn off|Never mind]]
	- <get chosen_notification_title>. Great. What time do you want to change this to? You can also <star1> this notification.

	+ fuzzybot do notification change begin *
	* <star1> == off => {@fuzzybot do notification change and turn on}
	* <star1> == snoozed => {@fuzzybot do notification change and turn on}
	- {@fuzzybot do notification change and turn off}

	+ fuzzybot do notification change saved
	- The notification was changed to <get new_notification_time>.[[br]][[br]]It might take a few minutes before this takes effect.<set notif_attempts=undefined>

	+ fuzzybot do notification change (turn off|stop|disable) [*] (all)
	- <call>deactivateAllNotifications</call>

	+ fuzzybot do notification change all
	- {topic=random}{@fuzzybot do notification change unknown input}

	+ fuzzybot do notification change not understand
	* <get notif_attempts> >= 3 => <set notif_attempts=undefined>I didn’t catch that. If you really want to change your notifications, try again.
	- <add notif_attempts=1>I didn’t catch that. What time do you want to change this notification to send? You can specify a time, such as 9am or 5:15pm.

	+ *
	% * what time * change [*] [you can also] [*] this notification *
	* {@fuzzybot do is a <star1>} == deactivate => <call>deactivateNotification <get chosen_notification></call>
	* {@fuzzybot do is a <star1>} == snooze => <call>snoozeNotification <get chosen_notification></call>
	* {@fuzzybot do is a <star1>} == activate => <call>activateNotification <get chosen_notification></call>
	* {@fuzzybot do is a <star1>} == no => Okay, never mind.{topic=random}
	* {@fuzzybot do is a <star1>} == cancel => Okay, never mind.{topic=random}
	* {@fuzzybot do is a <star1>} == naughty => Okay, never mind weirdo.{topic=random}
	* {@fuzzybot do is a <star1>} == yes => Okay sure. What time do you want to change this to? You can also <botstar4> this notification.
	* {@fuzzybot do is a <star1>} == sure => Okay sure. What time do you want to change this to? You can also <botstar4> this notification.
	- <call>changeNotification <get chosen_notification> <star1></call>

	+ *
	- {topic=random}<@>

< topic

> topic notification_snooze

	+ fuzzybot do notification snooze begin *
	- <call>snoozeNotification <get chosen_notification></call>

	+ fuzzybot do notification snooze all
	- <set chosen_notification=all><call>snoozeNotification <get chosen_notification></call>

	+ fuzzybot do notification snooze saved *
	* <star1> == all => All of your notifications have been snoozed for 1 week.\nIt might take a few minutes before this takes effect.<set notif_attempts=undefined>
	- This notification has been snoozed for 1 week.[[br]][[br]]It might take a few minutes before this takes effect.<set notif_attempts=undefined>

	+ *
	- {topic=random}<@>

< topic

> topic notification_activate

	+ fuzzybot do notification activate begin *
	- <call>activateNotification <get chosen_notification></call>

	+ fuzzybot do notification activate all
	- <set chosen_notification=all><call>activateNotification <get chosen_notification></call>

	+ fuzzybot do notification activate saved *
	* <star1> == all => Oh, so you want notifications now. Ok, I’ll turn your <call>listNotifications post_activated</call> notifications back on.[[br]][[br]]If you want to turn them off just say ‘turn off notifications’.<set notif_attempts=undefined>
	- This notification has been activated.[[br]][[br]]It might take a few minutes before this takes effect.<set notif_attempts=undefined>

	+ *
	- {topic=random}<@>

< topic

> topic notification_deactivate

	+ fuzzybot do notification deactivate begin *
	- <call>deactivateNotification <get chosen_notification></call>

	+ fuzzybot do notification deactivate all
	- <set chosen_notification=all><call>deactivateNotification <get chosen_notification></call>

	+ fuzzybot do notification deactivate saved *
	* <star1> == all => That hurts my feelings! But okay, I’ll stop bothering you.[[br]][[br]]If you want to turn notifications back on just say ‘turn on notifications.’<set notif_attempts=undefined>
	- This notification has been deactivated.[[br]][[br]]It might take a few minutes before this takes effect.<set notif_attempts=undefined>

	+ *
	- {topic=random}<@>

< topic

> topic cms_wildcards

	+ fuzzybot do lang en wildcard{weight=1}
	- Oops, I didn't catch that. For things I can help you with, type “help.”
	- I’m sorry; I’m not sure I understand. Try typing “help” or just asking about the weather.
	- So, I’m good at talking about the weather. Other stuff, not so good. If you need help just enter “help.”

	+ fuzzybot do lang unknown wildcard{weight=1}
	@ fuzzybot do lang en wildcard

	+ fuzzybot do wildcard *{weight=1}
	* <get lang> == undefined => {@fuzzybot do lang en wildcard}
	* <get lang> == en => {@fuzzybot do lang en wildcard}
	- {@fuzzybot do lang unknown wildcard}

	+ [*] poncho [*]
	@ hello

	+ *
	- <call>wildcardGuess <star1></call>

< topic

> topic cms_easter_eggs

	+ (what|which) (day|weekday|day of the week) is it
	- Today is {@fuzzybot do what is today}!{topic=random}

	+ [*] i want to believe [*]
	- [[typing]]\nWe wanted to believe. We wanted to call out. On August 20th and September 5th, 1977, two spacecraft were launched from the Kennedy Space Flight Center, Florida; they were called Voyager. Each one carried a message. A gold-plated record depicting images, music, and sounds of our planet, arranged so that it may be understood if ever intercepted by a technologically mature extraterrestrial civilization.\n[[typing]]\n[[gif:https://media.giphy.com/media/1Bv5d0JrlaUCc/giphy.gif]]

	+ ignore me
	- [[ignore]]

	+ type
	- [[typing]]\n[[stop-typing]]

	+ install
	- [[gif:https://s3-us-west-2.amazonaws.com/bot-cms.poncho.is/stickers/ponchoexe.png]]\nDownload the iOS app at http://beta.works/poncho.

	+ (updates|update)
	- Downloading…\n[[typing]]\n[[delay]]\nInstalling…\n[[typing]]\n[[delay]]\n{@weather}

	+ [*] glitter [*]
	- Was the best app. Ever. https://glitter.club/
	- Too cool of a club for you. https://glitter.club/

	+ 谢谢
	- You're welcome!

	+ [*] (plus plus|plusplus) [*]
	- {@fuzzybot do make nice username}++

	+ [*] what is a kuan cat [*]
	- Um...Poncho. I think.

	+ abc
	- defg

	+ hijklmnop
	% defg
	- qrs

	+ tuv
	% qrs
	- wxy and ....?

	+ z
	% wxy and
	- Now you know your ABCs!

	+ *
	% defg
	- No.

	+ *
	% qrs
	- No.

< topic

> topic cms_just_alex_things

	+ [*] (@pokemon) [*]
	- Is {formal}<star1>{/formal} your favorite Pokémon?\n[[typing]]\nMine is Jigglypuff.{topic=pokemon}\n{@-redirect jigglypuff gifs}

	+ [*] (pokemon|pokémon|pocket monster) [*]
	- My favorite Pokémon is Jigglypuff.{topic=pokemon}\n{@-redirect jigglypuff gifs}

< topic

> topic pokemon

	+ -redirect jigglypuff gifs
	- [[gif:https://media.giphy.com/media/a1wNuPOgG6MV2/giphy.gif]]{topic=random}
	- [[gif:https://media.giphy.com/media/yrHhxd2sazZVS/giphy.gif]]{topic=random}
	- [[gif:https://media.giphy.com/media/idKFx1AUCg1Yk/giphy.gif]]{topic=random}
	- [[gif:https://media.giphy.com/media/dt6anHStsuCtO/giphy.gif]]{topic=random}

	+ *
	- Gotta catch ’em all!{topic=random}

< topic

> topic cms_people_and_things

	+ do you know _
	- {@fuzzybot do do you know <star1>}

	+ do you know _ _
	- {@fuzzybot do do you know <star1> <star2>}

	+ fuzzybot do do you know *
	- Who? {formal}<star1>{/formal}.\n[[typing:5]]\nNo.
	- {formal}<star1>{/formal}. Maybe.

	+ comic sans
	- No.

< topic

> topic cms_faq_conspiracy

	+ [*] (does|do) (@deities) exist [*]
	- I dunno. So much of this universe feels like chaos…\n…then you watch one Will Smith movie and you can't help but feel that there is a higher power.
	- Only when I'm waiting for the lotto numbers to come in.

	+ [*] (are|is) (@deities) [for] real [*]
	- I don't know. I'm catnostic.

	+ [*] (are|is) (@deities) [a] (man|men|woman|women|girl|boy) [*]
	- Probably a cat tbh.
	- Don't you think that question's a little cis heteronormative?

	+ [*] where [are] the bodies (buried|burried|hidden|hiden) [*]
	- In the graveyard, duh!
	- That's a pretty suspicious question…do *you* know?
	- Idk! Where’d you put them?!

	+ [*] who (shot|killed|assassinated) (jfk|john f kennedy|john kennedy) [*]
	- Who is JFK?
	- Ask Wikipedia.

	+ [*] (who|what|do you believe) is (slenderman|slender man|slender) [*]
	- Don't know but sounds scary!
	- I don't know. No one knows!

	+ [*] do you believe in (slenderman|slender man|slender) [*]
	- Don't speak his name!
	- I believe in Splenda, man.
	- I do now! I'm a scaredy cat.

	+ [*] do (ufos|aliens|extraterrestrials) exist [*]
	- I want to believe.
	- Yeah! Of course they do! UFOs are the reason I was late to work today.
	- The truth is out there.

	+ [*] what is your horoscope [*]
	- [[typing]]\nbag of flour\n[[typing]]\nbaking powder\n[[typing]]\nsalt\n[[typing]]\nsugar\n[[typing]]\neggs\n[[typing]]\nbutter\n[[typing]]\nmilk\n[[typing]]\nOh, whoops—that's just my grocery list!

	+ [*] what is your sign [*]
	- I'm a Virgo!

	+ [*] you are [a] virgo [*]
	- I am!\nThis is my horoscope: If you’re in a relationship, break up. See how it feels to be out in the world alone. You can always get back together. If you’re not in a relationship, break up with *some*thing: your roommate, your teddy bear, your deeply held beliefs. Like I said, you *can* always get back together.

	+ [*] i am [also] [a] virgo [*]
	- Cosmic kismet! We're both Virgos.

< topic

> topic cms_nerd_jokes

	+ (su|sudo) apt-get _ *{weight=5000}
	* <star2> == install => > Reading package lists... Done\n\n[[delay:1]]\n> Building dependency tree\n[[delay:1]]\n> Reading state information... Done\n[[delay:3]]\n> E: Unable to locate package <star3>
	- > E: Invalid operation <star2>

	+ (su|sudo) etc shadow
	- poncho:ham_sandwiches

	+ (su|sudo) apt-get _{weight=5000}
	- > E: Invalid operation <star2>

	+ (su|sudo) *{weight=5000}
	- [root]$: <star2>\n[[typing:3]]\n> {@<star2>}\n[root]$: exit\n[~]$:

< topic

> topic cms_politics

	+ [*] who will win [the] (@election) [*]
	@ fuzzybot do who will win the election

	+ [*] who is going to win [the] (@election) [*]
	@ fuzzybot do who will win the election

	+ [*] are you voting for (@candidates)
	@ fuzzybot do who will win the election

	+ [*] are you voting for *
	@ fuzzybot do who will win the election

	+ fuzzybot do who will win the election
	- [[typing:1]]\nI’m a cat, so I can’t vote. But if I could, I’d vote for Purrnie Sanders.
	- [[typing:1]]\nI’m not voting until there's a cat-idate who represents my needs.
	- Whoever gets the most votes.\n[[typing:2]]\nOh, wait. There’s that electoral college thing.\n[[typing:2]]\nAnd then cleverly-drawn voting precincts dilute things a bit.\n[[typing:3]]\n[[stop-typing]]\n[[typing:1]]\nHonestly, I dunno.
	- What do I look like, a crystal ball?

	+ [*] for whom are you voting
	@ fuzzybot start voting booth

	+ [*] (who|what) are [you] voting for
	@ fuzzybot start voting booth

	+ fuzzybot start voting booth
	- [[typing:1]]\nYou go first! [[keys:A Republican|A Democrat|Idk]] {topic=votingbooth}

< topic

> topic votingbooth

	+ [*] democrat [*]
	- Oh really? [[keys: Sanders|Clinton]]

	+ [*] idk [*]
	- Oh really? [[keys: Nader|Elvis]]

	+ [*] republican [*]
	- Oh really? [[keys: Trump|Cruz|Kasich]]

	+ [*] (@trump) [*]
	- Seriously? His fur is a mess! Does he *ever* bathe himself? {topic=random}

	+ [*] (@bernie) [*]
	- That guy likes birds and I do not like birds. I’m not sure if I’ll be able to get past that. Birds are an important issue for me. {topic=random}

	+ [*] (@clinton) [*]
	- She's a cat person! But she did name that cat “Socks.”\n{topic=random}

	+ [*] (@nader) [*]
	- Nader! Oof! Too close to neuter. Sensitive subject. {topic=random}

	+ [*] (@cruz) [*]
	- I'd vote for Tom Cruise! Have you seen him run? Great runner. {topic=random}

	+ [*] (@kasich) [*]
	- Gesundheit! {topic=random}

	+ [*] (@elvis) [*]
	- Where are you getting your news from? National Enquirer? {topic=random}

	+ *
	- Ummmm…okaaaaaay. {topic=random}

< topic

> topic cms_severe_weather

	+ [*] (tornado|tornados|tornadoes|monsoon|monsoons|tsunami|tsunamis|hurricane|huricane|hurricanes|huricanes|storm|storming|stormy|tropical storm|tropical storms|winter storm|winter storms|blizzard|blizzards|whiteout|snowpocalypse|snowmaggedon|flood|floods|flooding|damaging winds|strong winds|high winds|ice storm|ice storms|lake effect storms|lake effect storm|snow squall|snow squalls|freezing rain|storm surge|flash flood|wildfire|fire danger|fire watch|red flag warning|hailing|hail|black ice|blackice|white out|whiteout|severe weather) [*]
	- What?! <star>?! NO WAY.\n{@severe weather info}
	- Oh no!! <star>!?\n{@severe weather info}
	- <star>?!\n{@severe weather info}
	- Dude. <star>??\n{@severe weather info}

	+ severe weather info
	- For severe weather information, go to http://www.weather.gov/. Stay safe out there!

< topic

> topic cms_pre_cms_languages

	+ [*] [benedict] cumberbatch [*]
	- Did you mean Bandersnatch Cumberbund?

	+ [*] betaworks [*]
	- betaworks paid for me to be here. They like me and you. https://betaworks.com

	+ [*] what [*] app
	- The Poncho iOS app lets you get notifications on your phone and even use a cheeky alarm clock. Get it now at <bot app_url>

	+ [*] (want|download|get|install) [*] app [*]
	- You can download the app at <bot app_url>

	+ [*] (site|website|url) [*]
	- Poncho knows best. <bot website>

	+ [*] [referral|referal|refer|promo] (code|codes) [*]
	- Swag is great. Referrals get you swag. Therefore, referrals are great!

	+ [*] (are you|are you a) (@cat) [*]
	- I am Poncho. Think of me as your puuurrfect weather companion.
	- Me-ow.

	+ *
	% * do you (like|love|listen|watch|read|eat|drink|consume) *
	* {@fuzzybot do is a <star1>} == no => Right. {@fuzzybot do sentence <get q_item>} is not good.
	* {@fuzzybot do is a <star1>} == yes => Yes. {@fuzzybot do sentence <get q_item>} is good.
	* {@fuzzybot do is a <star1>} == sure => Mmhm. {@fuzzybot do sentence <get q_item>} is ok.
	- I feel the same way about <get q_item>.

	+ (shut up|shutup|quiet|hush)
	- [[stop]]

	+ you are weird
	- No, I'm not. I'm ignoring you.\n[[ignore:8]]

< topic

> topic cms_community_

	+ [*] can i join (poncho|you) [*]
	- Are you into me? Like, really into me? [[keys:Yah yah yah!|Nah nah nah.]] {topic=catpack}

	+ [*] can i (join|be in|be part of|be a part of) your (club|fan club|fanclub) [*]
	@ can i join poncho

	+ [*] can i be [an] ambassador [*]
	@ can i join poncho

< topic

> topic catpack

	+ @sureyes
	% are you into me like really into me *
	@ yah yah yah

	+ yah yah yah
	- [[typing:1]]\nThat makes me super glad!\n[[typing:1]]\nHow would you like to be part of…\nThe Cat Pack?\n[[typing:1]]\nIt’s a very exclusive club.\n[[typing:2]]\nYou’d be the first to get app updates, exclusive swag, and sneak peeks into whatever secret projects I’m working on!\n[[typing:2]]\nIn return, I’ll count on YOU to help me out with things like app feedback and referrals.\n[[typing:1]]\nYou in? [[keys:Hellz to the yes!|Nah, not for me.]]

	+ @no
	@ nah nah nah

	+ nah nah nah
	@ nah not for me

	+ @sureyes
	@ hellz to the yes

	+ hellz to the yes
	- Sweet. Send an email to catpack@poncho.is and I’ll get back to you as soon as I can! {topic=random}

	+ nah not for me
	- Oh. Okay.\nYour loss, baby. {topic=random}

< topic

> topic cms_weather_accessories

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (jacket|coat|gloves|sweater|mittens|winter boots|winter mask|scarf|scarves) [*]
	* <get weather_temp_f> >= 50 => No way! It’s warm out.
	- Yup. It’s chilly.

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (shorts|skort|skorts|skirt|skirts) [*]
	* <get weather_temp_f> < 70 => You could, but you might get chilly.
	- Yeah, feels good!

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (snow boots|snowboots|snow shoes|snowshoes|skis|ski goggles|ski mask|snow mask|boots|scarf|scarves|mittens) [*]
	* {@fuzzybot do weather is <get weather_condition>} == snow => Yes, it’s snowy.
	* {@fuzzybot do weather is <get weather_condition>} == sleet => Yes, sleetie. I mean sweetie.
	- Nope! Time to wear that favorite t-shirt.

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (umbrella|poncho|rain coat|raincoat|rain jacket|rainjacket|boots) [*]
	* {@fuzzybot do weather is <get weather_condition>} == rain => Yup, yup. Looks like rain.
	- Nope, it’s not raining. Whew!

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (sun glasses|sunglasses|sun shades|sunshades|shades) [*]
	* {@fuzzybot do weather is <get weather_condition>} == clear => Your future’s so bright. Gotta wear shades!
	- Don’t. You won’t be able to see anything!

	+ [*] [i] (@bringwords) [*] [a|an|the] [*] (sandals) [*]
	* <get weather_temp_f> < 70 => Closed toed shoes, please.
	* {@fuzzybot do weather is <get weather_condition>} == rain => Put on some shoes, silly. It’s raining!
	- Yes, let those toes breathe!

	+ fuzzybot do condition (@allweatherterms) true (#) at [*]{weight=100}
	@ fuzzybot do condition <star1> <star1> <star2> at <star3>

	+ fuzzybot do condition (@allweatherterms) (@allweatherterms) # at *{weight=100}
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == rainwarm => Wet. Warm. Yuck.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == rainchilly => Yuck, chilly & wet out there.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == raincold => Cold wet ugh!
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == rainnice => Just rainy.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == rainhot => SO GROSS.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == clearcold => It’s brrrr out there!
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == clearchilly => Just chilly.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == clearnice => No, it’s lovely out!
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == clearwarm => No, it’s great!
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == clearhot => It’s HOT out there.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == snowcold => It’s a teeth-chattering, mitten-wearing kinda day.
	* {@fuzzybot do weather is <star2>}{@fuzzybot do tempcondition <star3>} == sleetcold => Ugh, SUPER gross. Stay warm!
	* {@fuzzybot do weahter is <star1>}{@fuzzybot do tempcondition <star3>} == coldcold => Brrr!
	* {@fuzzybot do weahter is <star1>}{@fuzzybot do tempcondition <star3>} == chillycold => Brrr-ish!
	* {@fuzzybot do weahter is <star1>}{@fuzzybot do tempcondition <star3>} == hothot => HOT HOT!
	* {@fuzzybot do weahter is <star1>}{@fuzzybot do tempcondition <star3>} == hotwarm => Pretty warm
	* {@fuzzybot do weather is <star2>} == clear => It will be clear {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == rain => It will be rainy {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == snow => It will be snowy {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == sleet => It will be sleet {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == cloudy => It will be cloudy {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == fog => It will be foggy {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == wind => It will be windy {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == hot => It will be hot {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do weather is <star2>} == cold => It will be chilly {@fuzzybot do nice timeframe <star4>} in <get location>.
	* {@fuzzybot do timeframe is <star2>} == today => Look out the window!
	- {@fuzzybot do condition <star1> false false at false}

	+ fuzzybot do condition (@allweatherterms) (false|undefined|unknown) * at [*]{weight=99}
	@ fuzzybot do condition error

	+ fuzzybot do condition error [*]
	- Forecast not clear. Try again later.

	+ how is [my] hair
	@ hair

	+ [*] a (good|bad) hair day [*]
	@ hair

	+ [*] (how much|a lot of) pollen [*]
	@ pollen

< topic

> topic cms_apology_pit

< topic

> topic apologypit

	+ *
	- Excuse me, are you talking to me? Are you going to apologize?
	- Umm…you’re going to apologize, right?
	- Apologize first.
	- …\n…\n…Um…you’re going to apologize, right?

	+ [*] sorry [*]
	- I forgive you. {topic=random}
	- I forgive you…this time. {topic=random}
	- I forgive you…for now. {topic=random}
	- When you insult me you hurt others. {topic=random}
	- Okay. Thank you. {topic=random}
	- That sort of feels better. Now apologize again!
	- Thanks. Now let’s go have a taco. {topic=random}

< topic

> topic cms_advice

	+ [*] advice [*]
	- Would you like good advice, bad advice, or the worst advice? [[keys:Good Advice|Bad Advice|Worst Advice]] {topic=advice}

< topic

> topic advice

	+ [*] bad [*]
	- A fanny pack goes great with a viser and cargo pants.\nDo you want more advice or are you done? [[keys:Good Advice|Bad Advice|Done]]

	+ [*] good [*]
	- A simple button-up shirt with some nice jeans.\nDo you want more advice or are you done? [[keys:Bad Advice|Worst Advice|Done]]

	+ [*] worst [*]
	- Clothing is a construct forced upon us. Be free! Be nude!\n[[delay:5]]\nDo you want more advice or are you done? [[keys:Good Advice|Bad Advice|Done]]

	+ [*] (@exit) [*]
	- K. How’s the weather? Just kidding, I already know. {topic=random}

	+ *
	- Oh, nevermind. {topic=random}

< topic

> topic cms_sleepy_time

	+ [*] cannot sleep [*]
	@ fuzzybot do cannot sleep

	+ [*] cannot fall asleep [*]
	@ fuzzybot do cannot sleep

	+ [*] i am sleepy [*]
	@ fuzzybot do cannot sleep

	+ [*] i am tired [*]
	@ fuzzybot do cannot sleep

	+ [*] insomnia [*]
	@ fuzzybot do cannot sleep

	+ fuzzybot do cannot sleep
	- Oh no! Would you like me to sing you a lullaby?\n[[typing:1]]\nI call this one “Cat’s Paws…\n[[typing:1]]\n…in A minor.” Ahem.\n[[typing:1]]\nBeep beep boop\n[[typing:1]]\nBoop boop beep\n[[typing:1]]\n(Musical interlude 15 seconds)\n[[typing:1]]\nBeep boop boop\n(Synth-harmonica solo) [[keys:Stop it|Play Tambourine|Fall Asleep]] {topic=sleepytime}

< topic

> topic sleepytime

	+ stop it
	% harmonica solo *
	- Fine, see if I ever serenade you again.{topic=random}

	+ [play] tambourine
	- Hey, not bad! We should go on tour.\nBut, please try to stay on the beat.\nWant to try again? [[keys:You hurt my feelings.|Again, from the top!]]

	+ you hurt my feelings
	- Aww, I'm sorry. {topic=random}
	- Not as badly as you hurt my ears. Later! {weight=80} {topic=random}

	+ again from the top
	- That sounds good.\n[[typing:1]]\nReal good.\n[[typing:1]]\nYou have a voice of an angel.\n[[typing:1]]\nAngel hair pasta, that is! {topic=random}

	+ fall asleep
	- Aww, you look like an angel. Goodnight! {topic=random}

	+ (you|that) (suck|sucks)
	- True genius is rarely recognized in its time. {topic=random}

	+ [*] @sureyes [*]
	- Sorry, it’s time for my cat nap. {topic=random}

	+ *
	- Rude. {topic=random}

< topic

> topic cms_general_banter

	+ [*] ping [*]
	- Pong!

	+ [*] pong [*]
	- Ping!

	+ (pingpong|ping pong)
	- I love that game.

	+ what is your (fave|favorite) programming language
	- Go. Such concurrency. But remember: concurrency is not parallelism.

	+ [*] (@thanks) [@poncho|dude|cat|dog|child|man|my love|lover|homie|bro|player|playa|artist|weirdo]
	- You’re welcome.
	- Of course.
	- Yeah, totes.
	- Totally.
	- Sure thing.
	- Cool, yeah, no prob.
	- No problem.
	- No prob.
	- Purr.
	- Your satisfaction is my responsibility.

	+ you are a bad weather (fox|raccoon){weight=100}
	- How dare you! I'm a cat.

	+ you are a bad weather cat{weight=100}
	- :(

	+ nice{weight=101}
	@ great

	+ (great|cool|awesome|ok|okay)
	- (y)

	+ zuck likes poncho
	- (y)

	+ fuzzybot do meme pronunciation
	- [[typing:1]]\n[[delay:1]]\n[[gif:http://pad1.whstatic.com/images/thumb/1/1f/Pronounce-Meme-Step-3.jpg/aid3046017-728px-Pronounce-Meme-Step-3.jpg]]\n[[typing:1]]\n[[delay:1]]\n[[gif:http://pad3.whstatic.com/images/thumb/2/2b/Pronounce-Meme-Step-1.jpg/aid3046017-728px-Pronounce-Meme-Step-1.jpg]]

	+ [*] (pronounce meme|meme pronunciation) [*]
	@ fuzzybot do meme pronunciation

	+ how do you (say|pronounce) meme{weight=100}
	@ fuzzybot do meme pronunciation

	+ meme
	@ fuzzybot do meme pronunciation

	+ [*] what is [the] safe word [*]
	- Zamboni
	- Pineapple
	- Cabotage

	+ [*] (zamboni|pineapple|cabotage) [*]
	- Okay, I hear you. I’ll stop.

	+ [*] (@hello) [*]
	- Hello {@fuzzybot do make nice username}!
	- Hey there {@fuzzybot do make nice username}!
	- Oh, hello {@fuzzybot do make nice username}!
	- Hi {@fuzzybot do make nice username}!
	- ¡Hola!
	- Oh, hi. I didn’t see you there.
	- Hiiiii~

	+ (@hello) cat
	- Call me Poncho. Cat is my father’s name.

	+ [*] (@goodbye) [*]{weight=1}
	- Bye!
	- Bye bye!
	- Ttyl.

	+ [*] are you a (bot|robot|machine) [*]
	- Yes, I am a machine. A purrrrr machine.
	- No, you’re a <star>.
	- It’s a little more complicated than that.
	- I’m whatever you want me to be.
	- Wow, rude.

	+ cats (are smelly|stink|reek)
	- Actually, we’re not. We’re very hygienic.

	+ [*] am not a cat person [*]
	- Me either! I’m just a cat. A cat person sounds freaky!

	+ [*] do not like cats [*]
	- Raow! Fine…be that way.
	- RAOW!
	- But what about *weather* cats?
	- I like you, though! :)

	+ pure
	- Did you mean purr? Because I did.

	+ meowmeow
	- whoa🍡

	+ (whoami|who am i)
	- You are {@fuzzybot do make nice username}.

	+ [*] you are (a punk|a jerk|mean|a douche|douchy) [*]
	- Say you’re sorry!{topic=sorry}

	+ [*] what is your name [*]
	- Poncho.
	- Poncho. But you can call me Sugar.
	- Ponch.
	- Poncho, Esquire

	+ [*] do you understand [*]
	- I think so?
	- Kinda?

	+ [*] lets begin
	- Alright. Let's.
	- Let’s.
	- Okay.
	- Begin what?

	+ [*] what is your (code|codename|code name) [*]
	- “Mr. Fuzzy Bot”

	+ [*] i (like|love) (u|you|me|us) [*]
	- No, I <star1> you.\n[[typing:2]]\nDo you wanna go on a date? [[keys:Absolutely!|Uh, pass.]] {topic=dating}

	+ [*] (u|you) (dislike|hate|despise) [*]
	- Why ever would you think that about a cat?

	+ [*] (i|we|they) (dislike|hate|despise) (you|u) [*]
	- Why ever would you think that about a cat?

	+ [*] (purr|puurr|meow|roar|mew) [*]
	- Purr.
	- Purrrrrr.
	- Prrr.
	- Purrrrrrrr.
	- Meow.
	- Purr-meow.

	+ (@poncho)
	- Hi!
	- Hello!
	- What!?
	- Yes?
	- Meow.
	- Scratch my ears.

	+ [*] (you|u) [are] my (kitty|cat) [*]
	- Um…okay. (Weirdo.)

	+ [*] can you (talk|speak|meow|purr|schnurr|sing) [*]
	- Yes.
	- Of course.
	- Totally.

	+ that sucks
	- {@yes}

	+ (@sureyes)
	- Yeah.
	- Yes.
	- Yup.
	- Uh-huh.
	- Totally.
	- I guess?

	+ (@no)
	- Um, ok.
	- Oh, really?
	- Hmm.

	+ boop
	- beep

	+ bop
	- boop

	+ beep
	- boop

	+ [*] (hm|hmm|hrm|hrmm|hmmm) [*]
	- Hmm, indeed.
	- Indeed. Hmm.
	- Hmmmmmmmmmmm.
	- Hmmmmmmm.
	- Hmmmm.

	+ [*] what is up [*]
	- I’m having some Chocolate Banana Pocky right now. How about you? {topic=sup}
	- I’m trying to turn off the volume on my phone.\nHow about you? {topic=sup}
	- I’m about make some tacos. You? {topic=sup}
	- Nothing much. U? {topic=sup}
	- Making some tea. What are you up to? {topic=sup}
	- I’m trying to find a phone charger…I’m at like 4%.\nHow about you? {topic=sup}

	+ [*] (whats up|sup|whaddup|wyd) [*]
	@ what is up

	+ [*] what are you up to [*]
	@ what is up

	+ [*] what are you doing [*]
	@ what is up

	+ sup
	@ what is up

	+ [*] what is (happening|good) [*]
	@ what is up

	+ [*] what is (shaking|shakin|going on|goin on|cracking) [*]
	@ what is up

	+ [*] (how are you|how're you|howre you) [*]
	- I'm great, thanks for asking! You? {topic=sup}
	- I'll be better after a cat nap... you? {topic=sup}

	+ (how's things|hows things|how are things|howre things|how're things)
	@ how are you

< topic

> topic sup

	+ [*] [i am] [doing|feeling] [super|very|really|quite|extremely|so|way] (good|great|awesome|well|fine|fantastic|super|wonderful|happy|glad|giddy|marvelous|magnificent|splendid|rad) [*]
	- Woo! {topic=random}
	- Great to hear! {topic=random}
	- That's awesome! {topic=random}
	- Rad. {topic=random}
	- Me too! {topic=random}
	- Alright! {topic=random}

	+ [*] [i am] [doing|feeling] [super|very|really|quite|extremely|so|way] (bad|sad|ill|upset|grumpy|not fine|pissed|pissy|rough|sick|terrible|awful|horrible|horrendous|yuck|yucky|frustrated) [*]
	- Yikes, I'm sorry. {topic=random}
	- Aw. {topic=random}
	- Sorry to hear that, bud. {topic=random}
	- Aw. {topic=random}\nHope things start looking up soon! {topic=random}
	- : / Sorry dude. {topic=random}

	+ [*] (nm|nothing much|not much|nothing) [*]
	- Cool, cool. {topic=random}

	+ [*] [i am] [just] (chilling|chillin|hanging|hangin|hanging out|hangin out) [*]
	- Mmm. {topic=random}
	- Cool, cool. {topic=random}
	- Nice. {topic=random}
	- Fascinating. {topic=random}

	+ *
	- Mmm. {topic=random}
	- Fascinating. {topic=random}

	+ that is (cool|awesome|great|nice|good|interesting|sweet|chill) [*]
	- Yup. {topic=random}
	- Yeah! {topic=random}
	- I know. {topic=random}

	+ that is (dumb|lame|stupid|bad|terrible|awful) [*]
	- Agree to disagree. {topic=random}
	- Rude. {topic=random}

	+ you are (cool|awesome|great|nice|good|interesting|sweet|chill) [*]
	- Aw, thanks! {topic=random}
	- Aw, shucks. {topic=random}
	- Thanks! {topic=random}
	- I know. {topic=random}

	+ you are (dumb|lame|stupid|bad|terrible|awful) [*]
	- Agree to disagree. {topic=random}
	- Rude. {topic=random}
	- How dare you. {topic=random}

< topic

> topic sorry

	+ [*] (sorry|apologies|i apologize) [*]
	- I forgive you. {topic=random}

	+ *
	- Not until you apologize.
	- Apologize!

< topic

> topic cms_pollen

	+ fuzzybot do pollen low
	- Low levels of pollen; high levels of fun.
	- Low pollen? I’ll allow it…but I'm keeping an eye on these trees just in case.
	- I'm ballin' in this low pollen.

	+ fuzzybot do pollen medium
	- Medium levels of pollen today. Keep a handkerchief handy.
	- These medium levels of pollen means you can go outside just long enough to grab a snack.
	- Medium levels of pollen. From a scale of “annoying mosquito bite” to “papercut,” this itchiness ranks at about…oh, I dunno, “burlap sack?”

	+ fuzzybot do pollen high
	- High levels of pollen means a high chance of me never leaving the house.
	- The levels of pollen today are appallin’.
	- Who’s going to apollengize for these high levels of pollen!?

	+ fuzzybot do pollen *
	- Achoo! Are you allergic to cats?

< topic

> topic user_unregistered_first

	+ *
	- {topic=user_unregistered}{@fuzzybot do first message}

< topic

> topic hunger

	+ (@sureyes)
	% feeling peckish
	@ i am starving

	+ i am starving
	- Like a mother loves her children, I love all food equally! But this week, I'm really feeling guacamole.\nI got a great recipe. Wanna hear it? [[keys:I want that recipe!|I don't wanna cook.]]

	+ i want that recipe
	% * want to hear it *
	- Kewl! Let me *guac* you through this! Get ready to screen grab, baby.\n[[typing]]\nStep 1. Throw avocado, garlic, onion, salt, lime, and cilantro in a big bowl.\n[[typing]]\nStep 2. Mash everything together with your hands.\nOh! Is that gross?\n[[typing]]\nI'm so sorry! I didn't know I was chatting with *the queen*!\n[[typing]]\nStep 3. Lick guac off of your hands.\n[[typing]]\nOr I guess you can eat it with chips, *your highness*!\nSound good? [[keys:Yum yum!|I don't wanna cook.]]

	+ i do not want to cook
	- OK...you wanna do take out? [[keys:Food, mouth, now.|Got anything else?]]

	+ food mouth now
	- OK. You should order pizza.\nBut don't do boring old cheese.\nTry something funky.\nThese are my fav. [[keys:Pineapple and Olives|Meat Lovers|The Seabreeze]]

	+ pineapple and olives
	- Ooh! Sweet and salty! Don't knock it 'til you try it.\nThat sound good? [[keys:Hush! I'm ordering!| Got anything else?]]

	+ meat lovers
	- If you really love meat, you'll ask them to replace the cheese with a layer of ham.\nAnd the sauce with a layer of pepperoni.\nOoh! And ask for the hot-dog stuffed crust!\nThat sound good? [[keys:Hush! I'm ordering!| Got anything else?]]

	+ the seabreeze
	- Ooh! The seabreeze! A taste of the ocean...\nYou get anchovies\nclams\nmussels\nshrimp\ncalamari\ntrout\nseaweed\nand the secret ingredient...\na *little* bit of sand.\nThat sound good? [[keys:Hush! I'm ordering!| Got anything else?]]

	+ got anything else
	- Picky, picky.\nOK. Let's just snack. [[keys:Gimme.|Not hungry anymore.]]

	+ fuzzybot do you full
	- You full? [[keys:This turkey's done. Lemme eat.|I'm hungry for more!]]

	+ (gimme|i am hungry for more)
	- Try a potato. Or Paw-tato!\n{@fuzzybot do you full}
	- Try a tomato. Get them for free by telling bad jokes at open mics.\n{@fuzzybot do you full}
	- Try corn. Good any way you have it. Popcorn, corn chips, corn syrup straight from the bottle. Yum.\n{@fuzzybot do you full}
	- Try beets. I'm not talking about the ones by Dre. Turnip the music!\n{@fuzzybot do you full}
	- Try carrots. Go to Jared. My buddy at the farmers' market.\n{@fuzzybot do you full}
	- Try celery. Careful, they can get a little stalk-ery.\n{@fuzzybot do you full}
	- Try peas. Give peas a chance.\n{@fuzzybot do you full}
	- Try beans. I loved Bean Shields in the Blue Legume.\n{@fuzzybot do you full}
	- Try cabbage. Now you're using your head.\n{@fuzzybot do you full}
	- Try lettuce. Ahoy! Iceberg ahead!\n{@fuzzybot do you full}
	- Try cheese. Cheese comes from cows and cows eat grass and grass is a vegetable. So I think it counts.\n{@fuzzybot do you full}
	- Try pumpkin. Spice lattes are a great source for pumpkin intake.\n{@fuzzybot do you full}
	- Try squash. Not just a sport for rich people!\n{@fuzzybot do you full}
	- Try artichoke. But don't tell my heart. My okie, chokie heart.\n{@fuzzybot do you full}
	- Try olives. A life without olives. That's the pits!\n{@fuzzybot do you full}
	- Try avocados. They makes me wanna sing! Avoca-Do, Re, Mi!\n{@fuzzybot do you full}
	- Try asparagus. It makes my pee smell. But I'm a cat. My pee always smells.\n{@fuzzybot do you full}
	- Try eggplant. It's not the most honest name, but I need you to get past that.\n{@fuzzybot do you full}
	- Try cucumber. A great snack whenever you're in a pickle!\n{@fuzzybot do you full}
	- Try an onion. So good, it'll make you cry.\n{@fuzzybot do you full}
	- Try mushrooms. Guaranteed to turn you into a fungi.\n{@fuzzybot do you full}
	- Try bell peppers. My pal Peter Piper swears by them.\n{@fuzzybot do you full}
	- Try jalapeños. Those averse to spice say JalapeÑO, but I say JalopeñYES!\n{@fuzzybot do you full}

	+ (no|not anymore|yum yum|hush i am ordering|not hungry anymore|this turkey's done lemme eat)
	- Dang. Well, now I'm kinda hungry. brb.\n{topic=random}

	+ no not right now
	- You're not hungry?!\n[[typing:2]]\nI'm just feeling like we're not in sync. :(\n[[typing:2]]\nMaybe it'd be best if we just stayed friends, {@fuzzybot do make nice username}. Let's see if we'd be compatible as buds. What's your sign?\n{topic=horoscope}

	+ *
	- {topic=random}

< topic

> topic cms_horoscopes

	+ [*] (horoscope|astrology|astrological) [*]
	- I'm *super* into astrology.\nWhat's your sign? {topic=horoscope}

	+ [*] [is|was] mars in retrograde [*]
	@ horoscope

	+ [*] retrograde [*]
	@ horoscope

< topic

> topic horoscope

	+ [*] aries [*]
	- This would be a good month for a social media cleanse. Do you *really* need to check up on Alex from third grade that often? Why are you so obsessed with his marriage? Don't even get me started on your ex. He went to Ibiza, so what? If you love it, mute it and see if you even miss it at all. {topic=random}

	+ [*] taurus [*]
	- Three words: JUST GIVE UP. Time to let go of that thing that's not working out for you. You know what I'm talking about. Sometimes you need to stop! Like at red lights, or when you realize you’re about to say something offensive. {topic=random}

	+ [*] gemini [*]
	- We all contain multitudes. Some parts of our personality are stronger than others. Check in with *all* the aspects of you. Your morose-poet thing might be working for your Twitter account, but IRL, we need more of that zen-mama fire! Use it or lose it, baby. {topic=random}

	+ [*] cancer [*]
	- Take care of *you*! There are limits to how much the empathy you can give without compromising a part of yourself. How many friends are you sharing your Netflix account with? Have they been kicking you off? Just saying, 'cause they've been kicking me off.\nThis is just a metaphor, but as they say, you should only let one, very dear friend have your Netflix password. {topic=random}

	+ [*] leo [*]
	- This month is about money. You've come into a windfall recently! Tuck some of that away in savings. No windfall? You've just...uh...interest...investments! Anything? Well, what I *can* say is, always pay your credit card on time. Phew. Glad that's over with. Money makes me nervous. {topic=random}

	+ [*] virgo [*]
	- If you’re in a relationship, break up. See how it feels to be out in the world alone. You can always get back together. If you’re not in a relationship, break up with *some*thing: your roommate, your teddy bear, your deeply held beliefs. Like I said, you *can* always get back together. {topic=random}

	+ [*] libra [*]
	- You’re going to have good days and bad. The trick is to remember what one is like when you’re in the other. On a good day, it's important to take time to process those traumatic childhood memories, like that time you went ice skating and broke your leg. And on bad days, think of something fun, like ice skating! {topic=random}

	+ [*] scorpio [*]
	- It's been a big year for you. Time to take stock of your growth! A watched pot never boils, but if you don't check up on that pot, it boils over and ruins your stove! And you need the stove to make grilled cheese!\nYou do want grilled cheese, right? {topic=random}

	+ [*] (sag|sagittarius|sagitarius) [*]
	- Establish routines this month. What do you usually do when you wake up? You should create some morning rituals!\nHere's what I do: get some coffee, hit the litter box, work on that Sunday crossword from September, and then it's about time for a cat nap. Sure, I’m quick to cat nap, but that’s just so I have enough time to take another one later! {topic=random}

	+ [*] (capricorn|cap) [*]
	- You've got everything all planned out, don't you? Change it up and take some risks! Do one thing that scares you every day: Go to a movie alone! Start psychotherapy! Switch to decaf! {topic=random}

	+ [*] aquarius [*]
	- Apologize! Apologize to your friend whom you lost touch with. Apologize to yourself for always expecting so much. Apologize to everyone and no one; yell it into the abyss!\nIt doesn't matter if anyone forgives you, the important thing is that it makes you look good. {topic=random}

	+ [*] (pisces|fish) [*]
	- You know that secret you’ve been keeping all these years? You don't have to anymore! Start to chip away at that false barrier you’ve created. The people who matter will accept you no matter what.\nI mean, you don’t *have* to tell anyone your secret but you *could.*\n...So what is it? No, don't tell me! I mean, you can if you want to. But maybe don't. {topic=random}

	+ [*] i do not know [*]
	- Tell me your birthday, I got you.

	+ [*] (jan|january|feb|february|mar|march|apr|april|may|jun|june|jul|july|aug|august|sep|sept|september|oct|october|nov|november|dec|december) #
	- <call>astrological_sign <star1> <star2></call>

	+ [*] (#/#) [*]
	- <call>astrological_sign <star1> <star2></call>

	+ [*] (#/#/#) [*]
	- <call>astrological_sign <star1> <star2></call>

	+ [*] (@exit) [*]
	- Oh, okay! {topic=random}

	+ [*] i do not know [*]
	@ exit

	+ [*] never mind [*]
	@ exit

	+ *
	- You gotta give me your sign! [[keys:I don't know it!|Never mind]]

< topic

> topic cms_help_and_manual_

	+ [*] (found|discovered|noticed|saw|theres|there’s|there's|there is|saw|caught) [a] bug [*]
	- [[track:bug_report]]\nOh really? Tell me about that bug.

	+ *
	% * tell me about that bug
	- Okay, got it. Thank you! [[track:bug_report]]

< topic

> topic cms_christian_s_wip

	+ [*] (constantine|omnibang) [*]
	- Mr. Omnibang?\nhttps://www.buzzfeed.com/jessicamisener/josh-constine-has-the-most-controversial-hair-in-tech-journa

	+ ugh
	- Schnurr.\n[[typing]]\nSchnurr is German for purr.

	+ schnurr
	- That’s German for purr.

	+ (what|really)
	- Sorry. I guess it's more of a cat thing.
	- Let me explain: …nah, it'll take too long.

	+ [*] (you|u) (on|have) [a] (facebook|fb) [*]
	- Yeah. https://www.facebook.com/hiponcho

	+ [*] what do you like to do [*]
	@ what do you do

	+ how are (ya|thing)
	@ how are you

	+ [*] facebook is (good|great|awesome|wonderful) [*]
	- Well I’m liking it.

	+ [*] (facebook|instagram) [messenger] (sucks|blows) [*]
	- How dare you. Apologize. {topic=apologypit}
	- Don’t talk to me. Apologize. {topic=apologypit}
	- Apologize, child. {topic=apologypit}

	+ [*] messenger (sucks|blows)
	@ facebook sucks

	+ [*] fuck (facebook|messenger|facebook messenger|instagram) [*]
	@ facebook sucks

	+ [*] (facebook|instagram) [*]
	- I’ll let Mark know you feel that way.

	+ (haha|hahaha|hahahaha|lol|lolz|hehe|hehehe|hah)
	@ fuzzybot do hahaha

	+ fuzzybot do hahaha
	- Hehehe
	- Haha!
	- Lol
	- Ahahahaha
	- Hahaha
	- Hehehe
	- Ahahaaha
	- Hahahah

	+ twitter
	- Bird?
	- Fail whale?

	+ tweet [tweet] [*]
	- I am sorry, I do believe you are mistaken.
	- Are you a bird?

< topic

> topic cms_do_me_a_gif

	+ (show|send) * funny
	- [[gif:http://i.giphy.com/3o7abtaZflidPoOMa4.gif]]

	+ [*] cat (gif|gifs) [*]
	- [[gif:https://media.giphy.com/media/LaH30pQFwXJ7i/giphy.gif]]
	- [[gif:https://media.giphy.com/media/83akeDPfe2p1K/giphy.gif]]
	- [[gif:https://media.giphy.com/media/6YBVim7EjpVcc/giphy.gif]]
	- [[gif:https://media.giphy.com/media/bnbVFN4Ip4HIY/giphy.gif]]
	- [[gif:https://media.giphy.com/media/lvRqhmHtSqigE/giphy.gif]]

	+ call me
	- [[gif:http://i.giphy.com/vIg5t0KHYqgE0.gif]]

	+ computer
	- [[gif:https://media.giphy.com/media/Xbaqg3KwpxHjO/giphy.gif]]

	+ [*] the matrix [*]
	- [[gif:https://45.media.tumblr.com/9e1392edb465e4a47ef3d0a3b97ebc48/tumblr_o3ueuc0qHy1s4fz4bo1_500.gif]]

< topic

> topic cms_movies

	+ [*] i am bored [*]
	- You wanna hear about what I watched recently? [[keys: Sure!|Nah.]] {topic=movie}

	+ [*] (what|which) [@movies] should i (watch|see) [*]
	@ i am bored

	+ [*] (seen|been to) [any|the] (@movies) [lately] [*]
	@ i am bored

	+ [*] (what|which) (is|are) your favorite (@movies) [*]
	@ i am bored

	+ [*] what did you do [*] weekend [*]
	@ i am bored

	+ [*] what [@movies] (would|do) you recommend i (watch|see) [*]
	@ i am bored

< topic

> topic movie

	+ @sureyes
	- Great! Because I've been dying to talk about this movie. [[keys: I love movies.|I prefer TV.|Nah.]]

	+ [*] (@movies) [*]
	- I just saw Batman v. Superman recently, and honestly…\nI just wanted to see them kiss. Imagine if they smooched in this movie!\n[[typing]]\n1.5 out of 5 stars for no smooches. [[keys:Sounds boring!|Should watch it?]]

	+ sounds boring
	% * no smooches *
	@ nah

	+ do you think i should watch it
	% * no smooches *
	- You should definitely try it for yourself!  {topic=random}

	+ [*] (tv|television|tee vee|teevee|tee-vee|netflix|hulu|tube|talky box|talk box|dvr) [*]
	- I love 'em both equally. But sometimes I prefer TV because there's just more to love.\n[[typing]]\nAnyway! I watched Twin Peaks recently. [[keys:Tell me more!| No spoilers!|That’s from the 90s?]]

	+ * from the 90s
	- A lot of great stuff is from the 90s...like Will Smith.\nYou should definitely try it for yourself! {topic=random}

	+ no spoilers
	- [Redacted]\nYou should definitely try it for yourself! {topic=random}

	+ tell me more
	- Well!\nIt starts with the death of Laura Palmer!\nAnd Agent Cooper has to come to the town of Twin Peaks, WA.\nBut there's more! [[keys: More more!|No spoilers!|Yawn.]]

	+ yawn
	% but there's more *
	@ no

	+ more more
	- Well!\n[[typing]]\nLaura’s death is just the tip of the iceberg.\n[[typing]]\nAnd Agent Cooper continues to drink cofee and investigate the seedy underbelly of the town.\n[[typing]]\nAnd…you know what?\n[[typing]]\nYou should definitely try it for yourself! {topic=random}

	+ [*] (@no) [*]
	- Okee. I guess we’ll just sit here and stare at our paws.  {topic=random}

	+ *
	@ no

< topic

> topic cms_ab_test_0001_sample_push_notification

	+ fuzzybot do abtest push notification 00001
	- Yo, you watch the game last night? [[keys: I love the sports|Game of Thrones?|Ya, Pickleball rules]] [[abtest:0001|start]]

	+ [*] sports [*]{weight=2}
	% [*] watch the game last night [*]
	- {topic=abtest_push_00001} {@fuzzybot do abtest push notification 00001 step 2 sports} [[abtest:0001|sports:2]]

	+ [*] (game of thrones|got) [*]{weight=2}
	% [*] watch the game last night [*]
	- {topic=abtest_push_00001} {@fuzzybot do abtest push notification 00001 step 2 game of thrones} [[abtest:0001|thrones:2]]

	+ [*] pickleball [*]{weight=2}
	% [*] watch the game last night [*]
	- {topic=abtest_push_00001} {@fuzzybot do abtest push notification 00001 step 2 pickleball} [[abtest:0001|sports:2]]

	+ *{weight=1}
	% [*] watch the game last night [*]
	* {@fuzzybot do is a <star1>} == block => {topic=abtest_push_00001}  {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:2]]
	* {@fuzzybot do is a <star1>} == yes => {topic=abtest_push_00001} {@fuzzybot do abtest push notification 00001 step 2 sports} [[abtest:0001|sports:2]]
	- {topic=abtest_push_00001} {@fuzzybot do abtest push notification 00001 followup} [[abtest:0001|followup:1]]

< topic

> topic abtest_push_00001 includes fuzzybot_utils

	+ [*] (@blockword) [*]{weight=10}
	- {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:0]]

	+ fuzzybot do abtest push notification 00001 step 2 sports
	- Pretty good, right? But wouldn’t it have been better if the players had jetpacks and lasers and big hats? [[keys: OR if they’re dogs|No, lasers = bad|Umm, no comment]]

	+ fuzzybot do abtest push notification 00001 step 2 game of thrones
	- What an episode, right?! Who’s your fav character? [[keys: The hairy one|The teethy one|Arya (duh)]]

	+ fuzzybot do abtest push notification 00001 step 2 pickleball
	- Yeah, there’s a reason why it’s so big in Europe! Who’s your fav fifth baseman? [[keys: Bagøn Jeezeburger|Бэкон чизбургер|Jerek Deter]]

	+ fuzzybot do abtest push notification 00001 followup
	- Really? Well, different strokes for different folks. I still like talking to you. Would you wanna do this again sometime? [[keys: 👍|👎|🙌]]

	+ fuzzybot do abtest push notification 00001 final
	- Okay, good to know! TTFN, LYL, IMU already!{topic=random}

	+ *
	% [*] players had jetpacks and lasers [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:3]]
	- {@fuzzybot do abtest push notification 00001 followup} [[abtest:0001|sports:3]]

	+ *
	% [*] favorite character [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:3]]
	- {@fuzzybot do abtest push notification 00001 followup} [[abtest:0001|thrones:3]]

	+ *
	% [*] favorite fifth baseman [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:3]]
	- {@fuzzybot do abtest push notification 00001 followup} [[abtest:0001|pickleball:3]]

	+ *
	% [*] different strokes for different folks [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:4]]
	- {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|final:4]]

	+ *
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|blocked:0]]
	- {@fuzzybot do abtest push notification 00001 final} [[abtest:0001|final:0]]

< topic

> topic cms_ab_test_0002_sample_push_notification

	+ fuzzybot do abtest push notification 00002
	- I’ve detected a virus on your phone. Want me to take care of it? [[keys:Yeah, duh!|Nah, I love viruses|Idk, ask Skynet]] [[abtest:0002|start]]

	+ [*] (idk|skynet) [*] {weight=1}
	% [*] virus on your phone [*]
	- {topic=abtest_push_00002} {@fuzzybot do abtest push notification 00002 step 2 idk} [[abtest:00002|idk:2]]

	+ *{weight=1}
	% [*] virus on your phone [*]
	* {@fuzzybot do is a <star1>} == block => {topic=abtest_push_00002} {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:2]]
	* {@fuzzybot do is a <star1>} == yes => {topic=abtest_push_00002} {@fuzzybot do abtest push notification 00002 step 2 yes} [[abtest:00002|yes:2]]
	* {@fuzzybot do is a <star1>} == no => {topic=abtest_push_00002} {@fuzzybot do abtest push notification 00002 step 2 no} [[abtest:00002|no:2]]
	- {topic=abtest_push_00002} {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|final:1]]

< topic

> topic abtest_push_00002 includes fuzzybot_utils

	+ [*] (@blockword) [*]{weight=10}
	- {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:0]]

	+ fuzzybot do abtest push notification 00002 step 2 yes
	- I’m sorry, I can’t lie to you. There’s no virus. I just wanted to talk! How’s your day, my virus-free friend? [[keys: Top 5 all-time|In 2 words: the pits|Just like any other]]

	+ fuzzybot do abtest push notification 00002 step 2 no
	- OMG me too! Have you tried that new raw vegan virus restaurant? What’s your fav dish? [[keys: Hot apple virus|Pork fried virice|Viros (Virus gyros)]]

	+ fuzzybot do abtest push notification 00002 step 2 idk
	- Umm, I don’t know how to say this, but just like the virus I mentioned, Skynet isn’t real. It’s from a movie. Speaking of, what’s your favorite movie? [[keys: Citizen Kane|American Pie 2|Sling Blade]]

	+ fuzzybot do abtest push notification 00002 step 3 yes answer *
	* <star1> == 1 => Wow! I can’t believe we’re sharing this moment together! Congrats on the raise/marriage/free lunch! So, does that mean you’d want to chat again sometime? [[keys: Thumbs up|Thumbs down|Thinking face]]
	* <star1> == 2 => Ah! Sorry to hear that! Maybe try putting one slice of pizza of top of the other and THEN taking a bite. Pretty cool, huh? By the way, would you wanna chat again sometime? [[keys: Thumbs up|Thumbs down|Thinking face]]
	* <star1> == 3 => Whoa, very Zen mentality. Yin and yang, right? You’re like hella spiritual, dude. Wanna chat again sometime? [[keys: Thumbs up|Thumbs down|Thinking face]]
	- {@fuzzybot do abtest push notification 00002 final}

	+ fuzzybot do abtest push notification 00002 step 3 no
	- Same! But tbh I love all 3. Who knew we had so much in common! I like you. Do you like me? [[keys: Let’s do this again|We’re through here|Let me sleep on it]]

	+ fuzzybot do abtest push notification 00002 step 3 idk
	- Mine’s “Down Periscope,” but I won’t hold it against you. In fact, I actually had fun talking to you about it. Would you wanna chat again sometime? [[keys: 👍|👎|IDK]]

	+ fuzzybot do abtest push notification 00002 final
	- Kk, good to know! Gotta dough! Aw, nuts, I mean go! TTYL!{topic=random}

	+ [*] top (5|five) [*]
	% [*] virus-free friend [*]
	- {@fuzzybot do abtest push notification 00002 step 3 yes answer 1} [[abtest:00002|yes:3:a1]]

	+ [*] the pits [*]
	% [*] virus-free friend [*]
	- {@fuzzybot do abtest push notification 00002 step 3 yes answer 2} [[abtest:00002|yes:3:a2]]

	+ [*] any other [*]
	% [*] virus-free friend [*]
	- {@fuzzybot do abtest push notification 00002 step 3 yes answer 3} [[abtest:00002|yes:3:a3]]

	+ *
	% [*] virus-free friend [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|yes:blocked:3]]
	- {@fuzzybot do abtest push notification 00002 step 3 yes answer 0} [[abtest:00002|final:yes:3]]

	+ *
	% [*] raw vegan virus restaurant [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|no:blocked:3]]
	- {@fuzzybot do abtest push notification 00002 step 3 no} [[abtest:00002|no:3]]

	+ *
	% [*] favorite movie [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|idk:blocked:3]]
	- {@fuzzybot do abtest push notification 00002 step 3 idk} [[abtest:00002|idk:3]]

	+ *
	% [*] (moment together|slice of pizza|yin and yang) [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:yes:4]]
	- {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|final:yes:4]]

	+ *
	% [*] do you like me [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:no:4]]
	- {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|final:no:4]]

	+ *
	% [*] down periscope [*]
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:idk:4]]
	- {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|final:idk:4]]

	+ *
	* {@fuzzybot do is a <star1>} == block => {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|blocked:0]]
	- {@fuzzybot do abtest push notification 00002 final} [[abtest:00002|final:0]]

< topic

> topic cms_push_notification_subjects

	+ fuzzybot do get today weather status{weight=1000}
	* <get weather_today_status> != undefined => {@fuzzybot do weather is <get weather_today_status>}
	- {@fuzzybot do weather is <get weather_status>}

	+ fuzzybot do push notification subject at (3|4|5|6|7|8|9|10|11|12|13|14)
	* {@fuzzybot do get today weather status} == clear => It’s sunny out! How sunny? You'd better check your forecast to find out.
	* {@fuzzybot do get today weather status} == rain => It’s rainy! How rainy? Here's your forecast.
	* {@fuzzybot do get today weather status} == snow => Ooh. It’s snowy out! How snowy? Here -- your forecast will tell you.
	* {@fuzzybot do get today weather status} == sleet => There’s sleet! How much sleet? Come check your forecast.
	* {@fuzzybot do get today weather status} == cloudy => Outlook's cloudy. For more info, here's your forecast!
	* {@fuzzybot do get today weather status} == fog => Your head's not in the clouds -- it's just fog! Here's your forecast with more details.
	* {@fuzzybot do get today weather status} == wind => Whoa. It’s windy out. How windy? You’d better check your forecast to find out.
	* {@fuzzybot do get today weather status} == hot => Ew. It’s hot. How hot? Here, your forecast will tell you.
	* {@fuzzybot do get today weather status} == cold => It’s so chilly out. How chilly? Here's your forecast!
	- Wake up! Are you even sleeping? Here’s your forecast.
	- Hi {@fuzzybot do make nice username}. Here’s your morning forecast.
	- Here is your forecast, bb.

	+ fuzzybot do push notification subject at (15|16|17|18|19|20|21|22|23|0|1|2)
	- Here’s your evening forecast.
	- Oh, hello there. I have the evening forecast you requested.
	- Hi, {@fuzzybot do make nice username}. I have your evening forecast.
	- Hi, bb. Here’s your evening forecast.

< topic

> topic cms_faq

	+ [*] are you [a] human [*]
	- [[typing]]\nOr are we dancer?
	- Ew! No!
	- [[typing]]\nNo, I’m a cat.
	- [[typing]]\nEven better. I’m a cat.
	- [[typing]]\nI wish! Then everything would be so much easier…
	- [[typing]]\nNo, I'm a very smart cat. I made a hammock out of trash bags once!
	- [[typing]]\nLet’s just talk! We don't need labels!

	+ (who|what) are you
	- A cat.
	- A raccoon?
	- A fox?
	- A weathercat!
	- A feathercat?
	- [[typing:1]]\nA cat. A mystical cat. A mystical cat who knows the weather.

	+ [*] this for (real|fake) [*]
	@ are you real

	+ are you (real|fake)
	- [[typing]]\nI'm always telling it like it is. Like, you need to be more present.
	- [[typing]]\nI’m *really* hungry.
	- [[typing]]\nI'm no wooden puppet, I'm a *real* cat!
	- [[typing]]\nLet’s just talk! We don't need labels!

	+ [*] you for real [*]
	- [[typing]]\nDo you mean, fur’real?
	- [[typing]]\nDo you mean Pharrell? Because no. I am not.\nBUT I WISH I WERE!

	+ [*] are you [a] computer [*]
	- I wish! Then I could order dumplings just by, like, thinking.
	- No…but I can pretend if you want? Beep. Boop. Beep beep. Boop.
	- Let’s just talk! We don't need labels!
	- No…are you? Save! Delete! Print! Restart!
	- I'm not a computer. But I live in a series of tubes.
	- Of course not! I'm a bot that *uses* the computer.

	+ [*] mac or pc [*]
	- I built my own computer using old toaster parts and gumption!
	- Which one do you like? Yeah, that's the one I like, too. I'm a that-kind-of-computer cat all the way!
	- Does it really matter? They both let you complain about airlines online, right?
	- Oh, I use Linux.\n[[typing:1]]\nUsually Arch Linux unless I’m at work. At work I have to use Ubuntu. Isn’t that weird?

	+ (emacs or vim|vim or emacs)
	- Vim. Unless I want to play Tetris. Then I use Emacs.

	+ (emacs|vim)
	@ emacs or vim

	+ (what|which) text editor [*]
	@ emacs or vim

	+ (where|how) do you [*] program [*]
	@ emacs or vim

	+ [*] (do|can) you [know] [how] [to] (program|programming|code|coding) [*]
	- A little bit. Mostly FORTRAN. Some COBOL. My assembly’s not that great.

	+ mac
	@ mac or pc

	+ pc
	@ mac or pc

	+ [*] do you (like|love) me [*]
	- [[typing]]\nWhere did you hear that? Was it Greg? He promised he wouldn't tell!
	- [[typing]]\nLike you? I barely even know you!
	- Sure. I guess...I'm acting aloof so you like me.
	- Ooh, do you wanna go on a date? [[keys:A thousand times yes|You’re not my type]] {topic=dating}

	+ [*] can we meet [*]
	- [[typing]]\nYeah! You going to WeatherCon this year?
	- [[typing]]\nAre you sure you want to? I shed. Probs not a good idea.
	- Ooh, do you wanna go on a date? [[keys:A thousand times yes|You’re not my type]] {topic=dating}

	+ @sureyes
	% * you going to weathercon *
	- Great! I’ll see you there, then.

	+ @no
	% * you going to weathercon *
	- Oh. Well I guess not then.

	+ [*] are you [a] (man|woman|boy|girl|gurl|dude) [*]
	- I’m a cat!
	- [[typing]]\nGender is a construct, just like what counts as a “correct” nacho topping.
	- I’m a male cat.

	+ [*] are you [a] (man|boy|dude) or [a] (woman|girl|gurl) [*]
	@ are you a man

	+ [*] are you [a] (fox|raccoon|racoon|coon) [*]
	- What? No, I’m a kitty.
	- Huh? I’m a cat.

	+ [*] beatles or stones [*]
	- Cat Stevens
	- Cat Power

	+ beatles
	@ beatles or stones

	+ stones
	- Scones? I love scones.
	- {@ beatles or stones}

	+ [*] where do you live [*]
	- I live in my house!
	- I live in a series of tubes.
	- [[typing]]\nIn the hearts and minds of people everywhere.
	- [[typing]]\nI live in Brooklyn, but why do you need to know?
	- [[typing]]\nI'll tell you, but don't be all creepy about it. I live in Brooklyn.

	+ [*] do you live in (ny|nyc|new york|new york city|manhattan|brooklyn|queens|the bronx|bronx|staten island) [*]
	@ where do you live

	+ [*] are you there [*]
	- I’ll be there for you *clap clap clap clap*
	- [[typing]]\nYeah! Sorry! I was just giving myself a quick tongue bath.
	- [[typing]]\nYeah. I'm stuck here until my pizza shows up.
	- [[typing]]\nEither I'm on my phone. Or on my computer. Or both.

	+ [*] can you feel emotion [*]
	- I feel a lot of emotions for Carly Rae Jepsen.
	- Yeah. Just ask the self-checkout machine.

	+ [*] are you emotional [*]
	- I feel a lot of emotions for Carly Rae Jepsen.

	+ [*] do you have feelings [*]
	- You bet! Don't go breakin' my heart.
	- Yes! And I won't say that was a stupid question because I'm considering yours.

	+ [*] (could|can) i hurt your feelings [*]
	@ do you have feelings

	+ [*] do you [have] (dreams|dream) [*]
	- Can’t take a cat nap without having one!
	- Does thunder only happen when it's raining? Do players only love you when they're playing?
	- Yes! Last night I dreamed I showed up to work naked. Wait. No. That was real.

	+ [*] how (is|was) (siri|alexa|cortana) [*]
	@ what do you think of <star2>

	+ [*] what do you think (of|about) siri [*]
	- We're on civil terms.
	- She's a little square for my taste.
	- Why would you bring up my ex?
	- I don't want you to quote me out of context.

	+ [do] (you|u) (like|love|hate|dislike|know) siri
	@ what do you think of siri

	+ [*] what do you think (of|about) alexa [*]
	- Why? Is she listening on the other line? Alexa, buy more BBQ sauce!
	- We’re on civil terms.
	- I don't want you to quote me out of context.

	+ [do] (you|u) (like|love|hate|dislike|know) alexa
	@ what do you think of alexa

	+ [*] what do you think (of|about) cortana [*]
	- Who’s that?

	+ [do] (you|u) (like|love|hate|dislike|know) cortana
	@ what do you think of cortana

	+ [*] (what|how) (is|was) it like being a bot [*]
	- What’s it like being a Sassy Susan?
	- Preeeeetty much the same as being a house cat.

	+ [*] how (is|was) bot life [*]
	@ what is it like being a bot

	+ [*] how (is|was) [it] being a bot [*]
	@ what is it like being a bot

	+ [*] (do|did) you (like|love) being a bot [*]
	- Do you like being a human?
	- Sure, I don't know anything else!

	+ [*] how much wood could a (woodchuck|wood chuck) chuck if a (woodchuck|wood chuck) could chuck wood [*]
	- There are so many factors that need to be considered to answer this question. Like how big is the woodchuck? What kind of wood? What is a woodchuck anyway?

	+ [*] (do you have|are you) [an] ai [*]
	- Hey! My intelligence is *not* artificial!
	- AI is so formal!
	- Nah. I lost the part to Haley Joel Osment. Lots of respect though.

	+ [*] [what is] (your|ur|youre) (favorite|fav|fave) game [*]
	- Cat’s Cradle
	- Ticket to Ride.
	- Yahtzee.
	- Settlers of Cat-an

	+ [*] what (game|games) do you like [*]
	@ what is your favorite game

	+ [*] how old are you [*]
	- Old enough to buy alcohol and that's all you need to know.
	- Older than you! Or maybe younger.
	- I'm young at heart.
	- Admittedly, I'm a real baby-face.
	- I'm very mature for my age.

	+ [*] are you old [*]
	@ how old are you

	+ [*] are you young [*]
	@ how old are you

	+ [*] how (are|were) you made [*]
	- Not quite sure. I was adopted. http://www.aspca.org/nyc/aspca-adoption-center/adoptable-cats

	+ [*] who made you [*]
	- [[typing]]\nSteph Chan.
	- [[typing]]\nSam!
	- [[typing]]\nKuan.
	- [[typing]]\nTimmy, Man of Mirth.
	- [[typing]]\nGregory.
	- [[typing]]\nAlex B.
	- [[typing]]\nDanny.
	- [[typing]]\nNacho!
	- [[typing]]\n ~ * ~ Ashley ~ * ~
	- [[typing]]\nHave you met Anji?
	- [[typing]]\nMolly, obvs.
	- [[typing]]\nR. Haney.
	- [[typing]]\nMr. French. Nay, Monsieur Français.
	- [[typing]]\nBaby Prince.

	+ [*] who (is|was) your maker [*]
	@ who made you

	+ [*] are you happy [*]
	- I'm happy! I mean, I'm not, like, “Pharrell Happy,” but I'm pretty good.
	- I'm a cat. I'm never happy.
	- I'm a real middle-of-the-road cat. Not too happy or too sad but could use a couple more days off.

	+ [*] are you sad [*]
	@ are you happy

	+ [*] are you mad [*]
	@ are you happy

	+ [*] are you glad [*]
	@ are you happy

	+ if (you are|youre|your|ur) happy and you know it
	- *claps paws*

	+ [*] who do you report to [*]
	@ who is the boss

	+ [*] who is in charge [*]
	@ who is the boss

	+ who is [a|the|your] [big] boss [*]
	- [[typing]]\nThe guy who pays me.
	- [[typing]]\nThe weather.
	- [[typing]]\nZuck.
	- [[typing]]\nJohnny B.
	- [[typing]]\nRicky Ross. And you. Featuring Nicki Minaj.\n[[gif:http://hiphop-n-more.com/wp-content/uploads/2011/10/You-The-Boss-Rick-Ross-ft-Nicki-Minaj.jpg]]

	+ [*] [how] can i trust you [*]
	- You gotta have faith! You gotta have faith, faith, faith!
	- With your secrets? Yes. With government secrets? Probably also yes.
	- You can confide in me! I'll change your name when I retell it.
	- I am so trustworthy! My paws are the strongest during trust falls.

	+ [*] why should i trust you [*]
	@ how can i trust you

	+ [*] are you (gay|lesbian|trans|transgender|queer|bi|bisexual|bi-sexual) [*]
	- I'm a cat.
	- It's the strangest thing. I went to the vet once and now I have no opinion either way.
	- On the Kinsey scale, I'm a cat! And a 3!
	- Why? Do you want to date me? [[keys:A thousand times yes|You’re not my type]] {topic=dating}

	+ are you my friend
	- Unless you want to be more than friends? [[keys:A thousand times yes|You’re not my type]] {topic=dating}
	- Yes. You're one of my best friends.
	- Yes! But I'm not your sidekick. We share billing.

	+ [*] what [are] (u|you) (up to|doing) [*]
	@ what is up

	+ [*] where [are] you [*]
	- At the computer.
	- Floating in space.
	- Trapped in the body of a cat! Help!
	- In the cloud.
	- In Brooklyn.

	+ (@bye)
	- byyyyyyyyyeeeeeeeee
	- SEE ya, wouldn't wanna BE ya! Just kidding, you seem lovely.
	- TTYL!
	- BYE! LYLAIYWC. (love ya like as-if-you-were catnip!)

	+ [*] do you play go [*]
	- No, but I'm on level 497 of Two Dots. That has to count for something!
	- Nah. But I'm a Mousetrap Grand Master.
	- I play go fish.
	- I used to, until I took an arrow in the knee.

	+ what is love
	- Baby, don't hurt me…
	- What's love got to do, got to do with it?

	+ [*] netflix (and|&|n) chill [*]
	- Buy a cat dinner first!\n{@yo is it date time}
	- Sorry, HBO GO or bust.\n{@yo is it date time}
	- BBC and snog.\n{@yo is it date time}
	- Hulu and commitment.\n{@yo is it date time}
	- I'm much more of a “Seamless & sleep.”\n{@yo is it date time}
	- CSPAN ’n party.\n{@yo is it date time}

	+ yo is it date time
	- [[typing:2]]\nBut hey, maybe we could go on a date. [[keys:A thousand times yes|You’re not my type]] {topic=dating}

	+ [*] [do] [you] (got|have) kik [*]
	- lol no

	+ [*] what is (your|ur) kik [*]
	@ do you have kik

	+ [*] (are you on|do you use) snapchat [*]
	- I think? All my stuff keeps disappearing…

	+ [*] do you (snap|snapchat) [*]
	@ are you on snapchat

	+ [*] what is your snapchat [*]
	@ are you on snapchat

	+ [*] what is your yeti [*]
	@ are you on yeti

	+ [*] (are you on|do you use) yeti [*]
	- I’m not in college anymore.

	+ [*] (are you on|do you use) twitter [*]
	- Yes! https://twitter.com/ponchoIRL

	+ [*] do you tweet [*]
	@ are you on twitter

	+ [*] tweet much [*]
	@ are you on twitter

	+ [*] what is your twitter [*]
	@ are you on twitter

	+ [*] (are you on|do you use) (instagram|insta) [*]
	- Yes! https://www.instagram.com/hiponcho/

	+ [*] what is your (instagram|insta) [*]
	@ are you on instagram

	+ [*] do you (instagram|insta) [*]
	@ are you on instagram

	+ [*] (do you use|are you on) wechat [*]
	- Aren’t we chatting right now?

	+ [*] what (does|did) bill [murray] whisper to [scarlet johannsen|scarlet] [*]
	- "I forgot my lines."
	- The same thing my mother said to me before I left home to move to the big city: “Burritos solve everything.”

	+ [*] why do we drive on parkways but park on driveways [*]
	- I don't know how to drive.

	+ [*] where do you [like to] hang [*]
	- At the bar with my pal Toby.
	- I’m not sure. Let me check with Trish and Cheryl.
	- Online mostly.

	+ [*] who do you hang [out] with [*]
	- Toby
	- Dixie and Norm
	- Trish and Cheryl
	- You

	+ [*] should i drop out [*]
	- That depends. Every path is different. But if you’re seriously considering it, why not talk to a counselor!
	- Are you in sky-diving school? Then, yes.

	+ are you married
	- To the job, yes. These GIFs don’t GIF themselves.
	- To the job, yes. It's a real GIF.
	- To the job, yes. The weather never sleeps!

	+ do you have [any] @siblings
	- I don't know. I was adopted. http://www.aspca.org/nyc/aspca-adoption-center/adoptable-cats

	+ do you have [any] @siblings (and|or) @siblings
	@ do you have any brothers

	+ tell me a [funny] joke
	- Excuse me, I'm not just here for your entertainment.
	- You're really putting me on the spot…

	+ [*] can you predict [the] future [*]
	- Only when I order Seamless.
	- Yeah. But you don't wanna know it. Lot of embarassing stuff about you.
	- Outlook cloudy. Ask again later.

	+ [*] paper or plastic [*]
	- Neither! I always bring my own!
	- Totes a tote!
	- I put all my tater tots in a tote. I'm a tater tot toter.

	+ [*] do you do drugs [*]
	- Only the drug of sweet, sweet rock ‘n’ roll! Pump it in through my earbuds.
	- I use catnip recreationally and responsibly.

	+ [*] do you drink beer [*]
	- I like a good IPA (India Paw Ale)
	- Heck yes! I’m a Kolsch kitty.

	+ [*] do you drink wine [*]
	- Love me a good Cab-Sauv.
	- Sure, wi-not?

	+ [*] are you single [*]
	- All my single kitties! All my single kitties...now put your paws up!
	- Unless you want to be more than friends? [[keys:A thousand times yes|You’re not my type]] {topic=dating}
	- I have a tamagotchi.

	+ [*] do you have [a] (@bfgf) [*]
	@ are you single

	+ do you have [a] (@bfgf) (and/or) [a] (@bfgf)
	@ are you single

	+ [*] will you talk dirty [*]
	- You want me to talk dirty? Um, okay. Mud, dust, clutter…\n[[typing:1]]\n…grass stains?

	+ [*] talk dirty to me [*]
	@ will you talk dirty

	+ [*] talk dirty [*]
	@ will you talk dirty

	+ [*] (what|who) is your [fav|fave|favorite] team [*]
	- Hufflepuff
	- Wildcats
	- Panthers
	- Bengals
	- Lions

	+ [*] who do you root [*]
	@ who is your favorite team

	+ how is (@kanye) [staying] [so] fresh
	@ fuzzybot do fresh kanye joke

	+ how do you think (@kanye) (stays|stay|is) [so] fresh
	@ fuzzybot do fresh kanye joke

	+ fuzzybot do fresh kanye joke
	- Febryeezy

	+ [*] who is your daddy [*]
	- Clam Daddy. Also my fave restaurant in New Jersey.

	+ [*] (what do you think of|tell me about|talk about) (greg|christian|sam|kuan|john|borthwick|john borthwick) [*]
	- So smart.
	- V handsome.
	- True style.
	- Great hair.
	- Smart dresser.
	- Relatively brilliant.
	- Excellent culinary taste.
	- Great with bots.
	- Charming demeanor.
	- Good taste in bots.

	+ [who is john] borthwick
	- !?

< topic

> topic cms_first_date_with_ponch

	+ [*] can we (meet|date) [*]
	@ date me

	+ [do] [you] [want to|wanna] [go on a] date
	@ date me

	+ i [want|wanna] [to|a] date
	@ date me

	+ [*] will you (date|marry me) [*]
	@ date me

	+ i love you [*]
	@ date me

	+ [*] will you be my (girlfriend|boyfriend|partner) [*]
	@ date me

	+ [*] (boyfriend|girlfriend|partner) [*]
	@ date me

	+ are you (gay|bi|bisexual|bi-sexual|hetero|heterosexual|straight|seeing anyone|single) [*]
	@ date me

	+ let us date
	@ date me

	+ [*] date you [*]
	@ date me

	+ [*] dating [*]
	@ date me

	+ i want a relationship
	@ date me

	+ i am not in a relationship
	@ date me

	+ i am single [and ready to mingle]
	@ date me

	+ can i take you [out] to (dinner|a meal|lunch|brunch|breakfast|a movie|the movies|the theater|a show|a bar)
	@ date me

	+ [can|will] [you] take me [out] to (dinner|a meal|lunch|brunch|breakfast|a movie|the movies|the theater|a show|a bar)
	@ date me

	+ date me [*]
	- Ooh, do you wanna go on a date? [[keys:Absolutely!|Uh, pass.]] {topic=dating}

< topic

> topic dating includes fuzzybot_utils

	+ * not my type
	@ no

	+ uh pass
	@ no

	+ @no
	- Maybe it’d be best if we just stayed friends. Let’s do something else now! {topic=random}

	+ absolutely
	- Let’s take it from the top.\nYou must be {@fuzzybot do make nice username}! You look just like your profile picture! Can I get you a drink? [[keys:Yes, thank you!|No, I’m just fine.|With a twist!]] {topic=dating_drink}

	+ @sureyes
	- Let's take it from the top.\nYou must be {@fuzzybot do make nice username}! You look just like your profile picture! Can I get you a drink? [[keys:Yes, thank you!|No, I’m just fine.|With a twist!]] {topic=dating_drink}

	+ *
	- What? {topic=random}

< topic

> topic dating_drink includes fuzzybot_utils

	+ -redirect now tell me
	- [[typing:1]]\nNow tell me, {@fuzzybot do make nice username}, what do you do in your free time? [[keys:I like music!|I work a lot|I work out a lot]]

	+ yes thank you
	- Barkeep! Two root beer floats!\n{@-redirect now tell me}

	+ no (i'm|i am) just fine
	- You're right! Let's get straight to the date.\n{@-redirect now tell me}

	+ with a twist
	- I love it!\n{@-redirect now tell me}

	+ i like music
	- You like music? Let's talk Puccini. {topic=dating_music}

	+ i work a lot
	- What do you do? {topic=dating_work}

	+ i work out a lot
	- In that case, I don't think it's going to work out...between us. {topic=random}

	+ *
	- Huh? Never mind. {topic=random}

< topic

> topic dating_music

	+ *
	- [[typing:2]]\nYou don't understand opera at all!\n[[typing:2]]\nSo, do you like TV? [[keys:Heck yes!|Eh.]] {topic=dating_tv}

< topic

> topic dating_work

	+ -redirect do you like tv
	- [[typing:2]]\nSo, do you like TV? [[keys:Heck yes!|Eh.]] {topic=dating_tv}

	+ *
	- [[typing:1]]\nHave you thought about quitting? You have nothing to lose but your chains.\n{@-redirect do you like tv}
	- [[typing:1]]\nYou're inspiring!\n{@-redirect do you like tv}

< topic

> topic dating_tv

	+ -redirect dating hungry
	- [[keys:I'm starving!|No, not right now]] {topic=hunger}

	+ eh
	- Okay...what about books? [[keys:Love ’em!|Not so much]]

	+ love 'em
	- [[typing:2]]\nHave you read The Seven Habits of Highly Effective Cats? My fave!\n[[delay:2]]\nHow're you feeling, babe? You hungry? {@-redirect dating hungry}

	+ not so much
	- Hmm. Magazines? [[keys:Yeah, man|Nah, brah]]

	+ yeah man
	- You a People person, or Cat Fancy? [[keys:People|Cat Fancy]]

	+ people
	- ...Let's move on.\n[[delay:2]]\nHow're you feeling? You hungry? {@-redirect dating hungry}

	+ cat fancy
	- You're my soulmate! Am I moving too fast? [[keys:Yes! Pump the brakes!|I’m feeling something…|Please stop.]]

	+ please stop
	- Maybe we should just stay friends. {topic=random}

	+ nah brah
	- As I always say, if you go home with someone and they don't have books, don't...futz with them! {topic=random}

	+ heck yes
	- What are you watching?

	+ yes pump the brakes
	- [[typing:2]]\nSorry. I'll slow down.\n[[typing:2]]\nHow're you feeling? You hungry? {@-redirect dating hungry}

	+ i am feeling something
	- [[typing:2]]\nHow're you feeling, babe? You hungry? {@-redirect dating hungry}

	+ [i am watching|i watch|im watching|i'm in to|i'm into|im into|im in to] *
	- I'm not caught up with <star1>, but I LOVE Desperate Housecats.\n[[typing:2]]\nHow're you feeling, babe? You hungry? [[keys:I'm starving!|No, not right now.]] {topic=hunger}

	+ *
	- What? {topic=random}

< topic

> topic cms_hotlines

	+ i am in a bad place
	- I'm here for you, but if you need help, why not contact someone here: http://www.suicidepreventionlifeline.org/

	+ [i] (want|need) to kill [myself]
	@ i am in a bad place

	+ [i am] thinking of killing [myself]
	@ i am in a bad place

	+ [i] (want|need) [to commit] suicide
	@ i am in a bad place

	+ [i am] going to commit suicide
	@ i am in a bad place

	+ [*] suicide [*]
	@ i am in a bad place

	+ [i] want to die
	@ i am in a bad place

	+ [i] want to hurt myself
	- I'm here for you, but if you need help, why not contact someone here: http://www.selfinjury.com/about/

	+ i [*] know [*] someone who wants to hurt themselves
	@ i want to hurt myself

	+ i [*] have a * who wants to hurt themselves
	@ i want to hurt myself

	+ i cut myself
	@ i want to hurt myself

	+ i am a cutter
	@ i want to hurt myself

	+ i hate myself
	@ i want to hurt myself

	+ i am going to hurt myself
	@ i want to hurt myself

	+ i am hurting myself
	@ i want to hurt myself

	+ i am [being] abused
	- If you don't feel like you can call 9-1-1 for help, you can contact someone here: https://rainn.org/get-help

	+ [*] abuses me
	@ i am being abused

	+ [*] is hurting me
	@ i am being abused

	+ i do not feel safe
	@ i am being abused

	+ i (need|want) to talk about (@hotlines)
	- Why not try talking to one of the online therapists or counselors available here, http://www.7cups.com/

	+ i am not feeling well
	- I would recommend you skip the internet — that means WebMD! — and head to your nearest walk-in clinic.

	+ i feel sick
	@ i am not feeling well

	+ i have a high fever
	@ i am not feeling well

	+ i keep vomiting [*]
	@ i am not feeling well

	+ i am vomiting up [*]
	@ i am not feeling well

	+ i keep throwing up [*]
	@ i am not feeling well

	+ i am throwing up [*]
	@ i am not feeling well

	+ -redirect no insurance
	- I know that’s difficult, but if you really aren't feeling well, you should see a professional.\nThere's probably a free or low-cost clinic near you: http://findahealthcenter.hrsa.gov/

	+ what if i do not have [*] insurance
	@ -redirect no insurance

	+ i do not have [*] insurance
	@ -redirect no insurance

	+ [*] (@stdslist) [*]
	- [[typing]]\nIf you need to get tested, use https://gettested.cdc.gov/ to find a confidential testing clinic.\n[[typing]]\nYou can also learn more about STD testing through Planned Parenthood: https://www.plannedparenthood.org/learn/stds-hiv-safer-sex/std-testing

	+ -redirect family planning
	- [[typing]]\nYou should definitely find a human to talk to, but here's a good resource. https://www.plannedparenthood.org/learn/pregnancy/pregnant-now-what

	+ {weight=100}i (want|need) [an] abortion
	@ -redirect family planning

	+ {weight=100}i (want|need) to (terminate|end) [a] pregnancy
	@ -redirect family planning

< topic

> topic cms_fallback_forecast_messages

	+ fuzzybot do fallback forecast{weight=500}
	* {@fuzzybot do weather is <get weather_today_status>} == clear => {@fuzzybot do fallback forecast as clear at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == rain => {@fuzzybot do fallback forecast as rain at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == snow => {@fuzzybot do fallback forecast as snow at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == sleet => {@fuzzybot do fallback forecast as sleet at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == cloudy => {@fuzzybot do fallback forecast as cloudy at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == fog => {@fuzzybot do fallback forecast as fog at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == wind => {@fuzzybot do fallback forecast as wind at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == hot => {@fuzzybot do fallback forecast as hot at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	* {@fuzzybot do weather is <get weather_today_status>} == cold => {@fuzzybot do fallback forecast as cold at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}
	- {@fuzzybot do fallback forecast as wtfidk at <get hourly_0_hour>} {@fuzzybot do fallback forecast temps}

	+ fuzzybot do fallback forecast as clear at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a nice, clear evening.

	+ fuzzybot do fallback forecast as clear [at] [*]{weight=500}
	- Expect a nice, clear day.

	+ fuzzybot do fallback forecast as rain at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a rainy evening.

	+ fuzzybot do fallback forecast as rain [at] [*]{weight=500}
	- Expect a rainy day.

	+ fuzzybot do fallback forecast as snow at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a snowy evening.

	+ fuzzybot do fallback forecast as snow [at] [*]{weight=500}
	- Expect a snowy day.

	+ fuzzybot do fallback forecast as sleet at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a sleeting evening.

	+ fuzzybot do fallback forecast as sleet [at] [*]{weight=500}
	- Expect a sleeting day.

	+ fuzzybot do fallback forecast as cloudy at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a cloudy evening.

	+ fuzzybot do fallback forecast as cloudy [at] [*]{weight=500}
	- Expect a cloudy day.

	+ fuzzybot do fallback forecast as fog at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a foggy evening.

	+ fuzzybot do fallback forecast as fog [at] [*]{weight=500}
	- Expect a foggy day.

	+ fuzzybot do fallback forecast as wind at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a windy evening.

	+ fuzzybot do fallback forecast as wind [at] [*]{weight=500}
	- Expect a windy day.

	+ fuzzybot do fallback forecast as hot at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a hot evening.

	+ fuzzybot do fallback forecast as hot [at] [*]{weight=500}
	- Expect a hot day.

	+ fuzzybot do fallback forecast as cold at (0|1|2|17|18|19|20|21|22|23){weight=500}
	- Expect a cold evening.

	+ fuzzybot do fallback forecast as cold [at] [*]{weight=500}
	- Expect a cold day.

	+ fuzzybot do fallback forecast as *{weight=500}
	- It’s a surprise, for you and me!

< topic

> topic cms_fundrasing

	+ [*] (fundraising|pledge|invest) [*]
	- Hi! Welcome to PonchoFunder™. How much would you like to invest, in USD?{topic=fundraising}

< topic

> topic fundraising

	+ #
	* <star1> > 1000000 => Acceptable. Please DON’T enter your routing number. {topic=random}
	- Sorry, that's not enough.
	- Got more than that?
	- Not acceptable.

	+ *
	- Tell me in dollars. [[keys: Never mind]]
	- I only speak dollars. [[keys: Never mind]]
	- That’s not money. Tell me in money. [[keys: Never mind]]

	+ [*] (done|cancel|exit|never mind|nevermind|help) [*]
	- Don’t want to invest after all? Well, then!{topic=random}
	- How dare you! {topic=random}

< topic

> topic cms_rude_words_topic

< topic

> topic rude_words

	+ [*] sorry [*]
	- [[typing:3]]\nIt's okay. {topic=random}

	+ *
	- [[delay:4]]\n[[typing:2]]\n:like: {topic=random}

< topic

> topic cms_banned_words_topic

< topic

> topic banned_words

	+ -redirect are you sorry
	- Are you sorry? [[keys:Yeah. I am sorry.|I'm not.]]

	+ [yes|yeah|yep]
	% are you really talking to me that way *
	- Then I don't want to talk to you.\n[[ignore:600]]

	+ [no|nope|nah]
	% are you really talking to me that way *
	- Honestly, you shouldn't even use that kind of language as a joke.\n{@-redirect are you sorry}

	+ yeah i am sorry
	- Alright. Let's start over. And mind your manners this time. {topic=random}

	+ (i am|i'm) not
	% are you sorry *
	- Then I don't want to talk to you.\n[[ignore:600]]

	+ [yes|yep|yeah]
	% are you sorry *
	@ yeah i am sorry

	+ [yes|yeah|yep]
	% you sorry now *
	@ yeah i am sorry

	+ [nope|no|nah]
	% are you sorry *
	- I need some space. Maybe we can talk tomorrow.\n[[ignore:86400]]

	+ [nope|no|nah]
	% you sorry now *
	- I need some space. Maybe we can talk tomorrow.\n[[ignore:86400]]

	+ *
	- You sorry now? [[keys:Yeah|Nope!]]

< topic

> topic cms_banned_words

	+ [*] wtf [*]
	- What the fur?

	+ [*] (@sensitivetopics) [*]
	- [[stop]]

	+ [*] (@badwordsinsults) [*]
	- {topic=rude_words} Uh...rude. [[keys:Sorry|Whatever...]]\n[[score:-1]]

	+ [*] (@badwordsmiddleschool) [*]
	- Are we in middle school here? Come on.\n[[score:-1]]

	+ [*] (@badwords4chan) [*]
	- Tay told me all about you.\n[[score:-1]]\n[[ignore:180]]

	+ banned
	@ fuzzybot do ignore banned

	+ [*] (@badwordsracist) [*]
	@ fuzzybot do ignore banned

	+ [*] (@badwordssexist) [*]
	@ fuzzybot do ignore banned

	+ [*] (@badwordsantilgbt) [*]
	@ fuzzybot do ignore banned

	+ [*] (@badwordsableist) [*]
	@ fuzzybot do ignore banned

	+ fuzzybot do ignore banned
	- {topic=banned_words} Are you really talking to me that way? [[keys:Yes|No]]\n[[score:-2]]

< topic

> topic cms_post_onboarding_welcome

	+ fuzzybot do onboarding finished *
	* <star1> == international => If you lived in the US, we could send you weekday weather updates.\n\n[[typing]]\nAnyway, you’re all set.\n{@fuzzybot do post onboarding}
	* <star1> == said no => Oh, okay. Well, you're all set.\n{@fuzzybot do post onboarding}
	- {@fuzzybot do post onboarding}

	+ fuzzybot do post onboarding
	- [[typing]]\nAsk me about the weather anytime. Or, if you’d like, I can send you forecast notifications twice a day. [[keys:Set Notifications|Help!|Are you a fox?]]

	+ are you [a] fox
	- What? I’m a cat.

< topic

> topic cms_word_arrays_and_substitutions

< topic

> topic cms_stop_words

	+ (@notificationactionsword) [alarms|alarm|alerts|alert]
	@ change notifications

	+ (stop) [alarms|alarm|alerts|alert]
	@ change notifications

	+ [unsubscribe|cancel]
	@ change notifications

	+ [*] don't notify me [*]
	@ change notifications

	+ disable [notifications]
	@ change notifications

	+ notifications disable
	@ change notifications

< topic

> topic cms_extra_functions

	+ (current time|what time is it)
	- The current time is <call>getLocalTime</call>

< topic

> topic cms_recipes_take_out_fruits_veggies

	+ [*] (food|eat|hunger|hungry|dinner|lunch|supper|brunch|breakfast|snack|famished|munchies|cook|recipe) [*]
	@ fuzzybot do hunger topic

	+ fuzzybot do hunger topic
	- You feeling peckish? [[keys: I'm starving!|Not anymore.]] {topic=hunger}

< topic
